%!PS-Adobe-2.0
%%Creator: dvipsk 5.58c Copyright 1986, 1994 Radical Eye Software
%%Title: p.dvi
%%Pages: 19
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSCommandLine: dvips -o p.ps p
%DVIPSParameters: dpi=300, comments removed
%DVIPSSource:  TeX output 1995.07.31:1520
%%BeginProcSet: tex.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]{ch-image}imagemask restore}B /D{/cc X dup type /stringtype ne{]}
if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 40258431 52099146 1000 300 300 (p.dvi)
@start /Fa 5 112 df<1F00218060C060C000C0008001800F00008000400060C060C060
804060801F000B107F8F0F>51 D<0780184030C060C06000C000CF00F080E040C060C060
C060406060C030801F000B107F8F0F>54 D<1F00318060C0C040C060C060C06040E021E0
1E600060004060C0608043003E000B107F8F0F>57 D<F3C3C03C2C203838303030303030
30303030303030303030303030303030FCFCFC160B7F8A1A>109
D<1F00318060C0C060C060C060C060C06060C031801F000B0B7F8A0F>111
D E /Fb 3 111 df<000FE0000038380000E00E0001C00700070007000F0003800E0003
801C0003803C0003C0380003C0780003C0780003C0F0000780F0000780F0000780F0000F
00F0000F00F0000E00F0001E00F0003C0070003800700070003800E0001C03C0000E0F00
0003F800001A1A7E991D>79 D<01FFFC0000380F000038038000380380007003C0007003
C0007003C0007003C000E0078000E0078000E00F0000E01E0001C0380001FFE00001C000
0001C0000003800000038000000380000003800000070000000700000007000000070000
000E000000FFE000001A1A7E9919>I<383C004CC6008F07008E07008E07008E07001C0E
001C0E001C0E001C1C00381C40381C40383840383880701900300E0012107E8F17>110
D E /Fc 9 85 df<04081030206040C0C0C0C0C0C0C0C04060203010080406167D8F0B>
40 D<804020301018080C0C0C0C0C0C0C0C0818103020408006167E8F0B>I<00C00000C0
0000C00000C00000C00000C00000C00000C000FFFF80FFFF8000C00000C00000C00000C0
0000C00000C00000C00000C00011127E8D15>43 D<1E0061804080C0C0C0C0C0C0C0C0C0
C0C0C0C0C0408061801E000A0D7E8C0E>48 D<18F818181818181818181818FF080D7D8C
0E>I<3E00418080C0C0C000C000C0018003000400084030407F80FF800A0D7E8C0E>I<7F
FF00FFFF80000000000000000000000000FFFF807FFF0011087E8815>61
D<F800F83800E02C01602C016026026026026023046023046021886021886020D06020D0
60206060F861F8150E7E8D19>77 D<FFFFC1838181818181810180018001800180018001
80018001800FF0100E7E8D14>84 D E /Fd 1 1 df<FFFEFFFE0F027D8516>0
D E /Fe 4 111 df<7800180018001800300030C03360344078007E0063006320C340C1
800B0E7E8D10>107 D<F030303060606060C0C0C0D0D0E0040E7E8D0A>I<73C7009C6880
9830C038618030618030618030631060C32060C1C014097D8819>I<73809C40986030C0
30C030C03188619060E00D097D8812>I E /Ff 12 90 df<0006000C0018003000700060
00C001C0018003800300070006000E000C001C001C001800380038003800300070007000
7000700070007000E000E000E000E000E000E000E000E000E000E000E000E000E000E000
E000E000E000E000700070007000700070007000300038003800380018001C001C000C00
0E000600070003000380018001C000C00060007000300018000C00060F4A788119>16
D<C0006000300018001C000C000600070003000380018001C000C000E000600070007000
300038003800380018001C001C001C001C001C001C000E000E000E000E000E000E000E00
0E000E000E000E000E000E000E000E000E000E000E001C001C001C001C001C001C001800
3800380038003000700070006000E000C001C0018003800300070006000C001C00180030
006000C0000F4A7F8119>I<0000300000600000C0000180000300000700000E00000C00
00180000380000300000700000E00000C00001C000018000038000038000030000070000
0600000E00000E00000C00001C00001C00001C0000180000380000380000380000380000
700000700000700000700000700000700000700000E00000E00000E00000E00000E00000
E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000
E00000E00000E00000E00000700000700000700000700000700000700000700000380000
3800003800003800001800001C00001C00001C00000C00000E00000E0000060000070000
03000003800003800001800001C00000C00000E000007000003000003800001800000C00
000E000007000003000001800000C0000060000030146377811F>I<C000006000003000
001800000C00000E000007000003000001800001C00000C00000E0000070000030000038
00001800001C00001C00000C00000E000006000007000007000003000003800003800003
800001800001C00001C00001C00001C00000E00000E00000E00000E00000E00000E00000
E00000700000700000700000700000700000700000700000700000700000700000700000
700000700000700000700000700000700000700000700000700000700000E00000E00000
E00000E00000E00000E00000E00001C00001C00001C00001C00001800003800003800003
80000300000700000700000600000E00000C00001C00001C000018000038000030000070
0000E00000C00001C0000180000300000700000E00000C0000180000300000600000C000
0014637F811F>I<FFFCFFFCFFFCE000E000E000E000E000E000E000E000E000E000E000
E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000
E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000
E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000
E000E000E000E000E000E0000E4A73801C>50 D<FFFCFFFCFFFC001C001C001C001C001C
001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C
001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C
001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C
001C001C001C001C001C001C001C001C001C001C001C001C0E4A80801C>I<E000E000E0
00E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E0
00E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E0
00E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E0
00E000E000E000E000E000E000E000E000E000E000E000E000E000E000FFFCFFFCFFFC0E
4A73811C>I<001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C
001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C
001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C
001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C
001C001CFFFCFFFCFFFC0E4A80811C>I<FFFFFFFFE0FFFFFFFFF07000001FF078000001
F03C000000781C000000180E0000000C0F000000040700000004038000000203C0000000
01E000000000E0000000007000000000780000000038000000001C000000001E00000000
0F000000000700000000038000000003800000000300000000070000000006000000000C
000000001800000000380000000030000000006000000000C000000001C0000000018000
0002030000000406000000040E0000000C0C00000018180000007830000001F07000001F
F07FFFFFFFF0FFFFFFFFE0272A7E7F2C>80 D<FFFFFFFFC0FFFFFFFFC01F00003E000F00
003C000F00003C000F00003C000F00003C000F00003C000F00003C000F00003C000F0000
3C000F00003C000F00003C000F00003C000F00003C000F00003C000F00003C000F00003C
000F00003C000F00003C000F00003C000F00003C000F00003C000F00003C000F00003C00
0F00003C000F00003C000F00003C000F00003C000F00003C000F00003C000F00003C000F
00003C000F00003C000F00003C000F00003C000F00003C000F00003C000F00003C001F80
007E00FFF003FFC0FFF003FFC0222A7E7F27>I<FFFFFFFFFFFFC0FFFFFFFFFFFFE07F00
000001FFE07F000000001FE03F8000000003F01FC000000000F00FC000000000380FE000
0000001807F0000000000C03F8000000000403F8000000000401FC000000000200FE0000
000000007F0000000000007F0000000000003F8000000000001FC000000000000FC00000
0000000FE0000000000007F0000000000003F8000000000003F8000000000001FC000000
000000FE0000000000007E0000000000007F0000000000003F8000000000001FC0000000
00001FC000000000000FC000000000000780000000000003800000000000070000000000
000E0000000000001C000000000000380000000000007000000000000070000000000000
E0000000000001C0000000000003800000000000070000000000000E0000000000000E00
00000000001C0000000002003800000000040070000000000400E0000000000C01E00000
00001801C00000000038038000000000F8070000000001F00E000000000FF01C00000001
FFF03FFFFFFFFFFFE03FFFFFFFFFFFE07FFFFFFFFFFFE0FFFFFFFFFFFFC0373A7E7F3C>
88 D<FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0FF800001FF003F800001FC001F800
001F8001F800001F8001F800001F8001F800001F8001F800001F8001F800001F8001F800
001F8001F800001F8001F800001F8001F800001F8001F800001F8001F800001F8001F800
001F8001F800001F8001F800001F8001F800001F8001F800001F8001F800001F8001F800
001F8001F800001F8001F800001F8001F800001F8001F800001F8001F800001F8001F800
001F8001F800001F8001F800001F8001F800001F8001F800001F8001F800001F8001F800
001F8001F800001F8001F800001F8001F800001F8001F800001F8001F800001F8001F800
001F8001F800001F8001F800001F8001F800001F8001F800001F8001F800001F8001F800
001F8001F800001F8001F800001F8001F800001F8001F800001F8001F800001F8003FC00
003FC00FFF0000FFF0FFFFF00FFFFFFFFFF00FFFFFFFFFF00FFFFF303A7E7F35>I
E /Fg 36 124 df<003FC00001F0300003C0380007C07C000F807C000F807C000F803800
0F8000000F8000000F8000000F800000FFFFFC00FFFFFC000F807C000F807C000F807C00
0F807C000F807C000F807C000F807C000F807C000F807C000F807C000F807C000F807C00
0F807C000F807C007FE1FF807FE1FF80191D809C1B>12 D<FFE0FFE0FFE0FFE00B047F8A
10>45 D<000180000380000780000F80001F80003F80006F8000CF80008F80018F80030F
80060F800C0F80180F80300F80600F80C00F80FFFFF8FFFFF8000F80000F80000F80000F
80000F80000F8001FFF801FFF8151B7F9A18>52 D<1801801FFF001FFE001FFC001FF800
1FC00018000018000018000018000019F8001E0E00180F801007800007C00007E00007E0
0007E07807E0F807E0F807E0F807C0F007C0600F80381F001FFE0007F000131B7E9A18>
I<00038000000380000007C0000007C0000007C000000FE000000FE000001FF000001BF0
00001BF0000031F8000031F8000061FC000060FC0000E0FE0000C07E0000C07E0001803F
0001FFFF0003FFFF8003001F8003001F8006000FC006000FC00E000FE00C0007E0FFC07F
FEFFC07FFE1F1C7E9B24>65 D<FFFFF800FFFFFF000FC01F800FC00FC00FC007C00FC007
E00FC007E00FC007E00FC007E00FC007E00FC007C00FC00F800FC03F000FFFFE000FC00F
800FC007C00FC007E00FC003E00FC003F00FC003F00FC003F00FC003F00FC003F00FC007
E00FC007E00FC01FC0FFFFFF00FFFFFC001C1C7E9B22>I<001FE02000FFF8E003F80FE0
07C003E00F8001E01F0000E03E0000E03E0000607E0000607C000060FC000000FC000000
FC000000FC000000FC000000FC000000FC000000FC0000007C0000607E0000603E000060
3E0000C01F0000C00F80018007C0030003F80E0000FFFC00001FE0001B1C7D9B22>I<FF
FFFF00FFFFFF000FC01F000FC007000FC003000FC003800FC003800FC181800FC181800F
C181800FC180000FC380000FFF80000FFF80000FC380000FC180000FC180000FC180600F
C180600FC000E00FC000C00FC000C00FC001C00FC001C00FC003C00FC00F80FFFFFF80FF
FFFF801B1C7E9B1F>69 D<FFFC3FFFFFFC3FFF0FC003F00FC003F00FC003F00FC003F00F
C003F00FC003F00FC003F00FC003F00FC003F00FC003F00FFFFFF00FFFFFF00FC003F00F
C003F00FC003F00FC003F00FC003F00FC003F00FC003F00FC003F00FC003F00FC003F00F
C003F00FC003F0FFFC3FFFFFFC3FFF201C7E9B25>72 D<FFFFF800FFFFFE000FC03F800F
C00F800FC007C00FC007E00FC007E00FC007E00FC007E00FC007E00FC007C00FC007C00F
C00F800FC03F000FFFFC000FC000000FC000000FC000000FC000000FC000000FC000000F
C000000FC000000FC000000FC000000FC00000FFFC0000FFFC00001B1C7E9B21>80
D<FFFFF00000FFFFFE00000FC03F00000FC00F80000FC007C0000FC007E0000FC007E000
0FC007E0000FC007E0000FC007E0000FC007C0000FC00F80000FC03E00000FFFF000000F
C07C00000FC03E00000FC03F00000FC01F80000FC01F80000FC01F80000FC01F80000FC0
1F80000FC01F80000FC01F81800FC01F81800FC00FC180FFFC07C300FFFC01FE00211C7E
9B24>82 D<07F8201FFEE03C07E07801E07000E0F000E0F00060F00060F80000FE0000FF
E0007FFE003FFF003FFF800FFFC007FFE0007FE00003F00001F00000F0C000F0C000F0C0
00E0E000E0F001C0FC03C0EFFF0083FC00141C7D9B1B>I<7FFFFFE07FFFFFE0781F81E0
701F80E0601F8060E01F8070C01F8030C01F8030C01F8030C01F8030001F8000001F8000
001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000001F8000
001F8000001F8000001F8000001F8000001F800007FFFE0007FFFE001C1C7E9B21>I<FF
FC03FFFFFC03FF0FC000300FC000300FC000300FC000300FC000300FC000300FC000300F
C000300FC000300FC000300FC000300FC000300FC000300FC000300FC000300FC000300F
C000300FC000300FC0003007C0003007C0006003E000E001F001C000FC0780007FFE0000
0FF800201C7E9B25>I<FFFC01FF80FFFC01FF800FC000180007E000300007E000300007
F000700003F000600003F800E00001F800C00001FC00C00000FC01800000FC018000007E
030000007E030000007F070000003F060000003F8E0000001F8C0000001FCC0000000FD8
0000000FD800000007F000000007F000000007F000000003E000000003E000000001C000
000001C00000211C7F9B24>I<0FF8001C1E003E0F803E07803E07C01C07C00007C0007F
C007E7C01F07C03C07C07C07C0F807C0F807C0F807C0780BC03E13F80FE1F815127F9117
>97 D<FF0000FF00001F00001F00001F00001F00001F00001F00001F00001F00001F0000
1F3F801FE1E01F80701F00781F003C1F003C1F003E1F003E1F003E1F003E1F003E1F003E
1F003C1F003C1F00781F80701EC1E01C3F00171D7F9C1B>I<03FC000E0E001C1F003C1F
00781F00780E00F80000F80000F80000F80000F80000F800007800007801803C01801C03
000E0E0003F80011127E9115>I<000FF0000FF00001F00001F00001F00001F00001F000
01F00001F00001F00001F001F9F00F07F01C03F03C01F07801F07801F0F801F0F801F0F8
01F0F801F0F801F0F801F07801F07801F03C01F01C03F00F0FFE03F9FE171D7E9C1B>I<
01FC000F07001C03803C01C07801C07801E0F801E0F801E0FFFFE0F80000F80000F80000
7800007C00603C00601E00C00F038001FC0013127F9116>I<007F0001E38003C7C00787
C00F87C00F83800F80000F80000F80000F80000F8000FFF800FFF8000F80000F80000F80
000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80007FF8
007FF800121D809C0F>I<03F8F00E0F381E0F381C07303C07803C07803C07803C07801C
07001E0F000E0E001BF8001000001800001800001FFF001FFFC00FFFE01FFFF07801F8F0
0078F00078F000787000707800F01E03C007FF00151B7F9118>I<FF0000FF00001F0000
1F00001F00001F00001F00001F00001F00001F00001F00001F0FC01F31E01F40F01F80F8
1F80F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F8
FFE7FFFFE7FF181D7F9C1B>I<1E003F003F003F003F001E000000000000000000000000
00FF00FF001F001F001F001F001F001F001F001F001F001F001F001F001F001F00FFE0FF
E00B1E7F9D0E>I<FF00FF001F001F001F001F001F001F001F001F001F001F001F001F00
1F001F001F001F001F001F001F001F001F001F001F001F001F00FFE0FFE00B1D7F9C0E>
108 D<FF0FC07E00FF31E18F001F40F207801F80FC07C01F80FC07C01F00F807C01F00F8
07C01F00F807C01F00F807C01F00F807C01F00F807C01F00F807C01F00F807C01F00F807
C01F00F807C01F00F807C0FFE7FF3FF8FFE7FF3FF825127F9128>I<FF0FC0FF31E01F40
F01F80F81F80F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00
F81F00F8FFE7FFFFE7FF18127F911B>I<01FC000F07801C01C03C01E07800F07800F0F8
00F8F800F8F800F8F800F8F800F8F800F87800F07800F03C01E01E03C00F078001FC0015
127F9118>I<FF3F80FFE1E01F80F01F00781F007C1F003C1F003E1F003E1F003E1F003E
1F003E1F003E1F003C1F007C1F00781F80F01FC1E01F3F001F00001F00001F00001F0000
1F00001F0000FFE000FFE000171A7F911B>I<FE3E00FE47001E8F801E8F801E8F801F07
001F00001F00001F00001F00001F00001F00001F00001F00001F00001F0000FFF000FFF0
0011127F9114>114 D<1FD830786018E018E018F000FF807FE07FF01FF807FC007CC01C
C01CE01CE018F830CFC00E127E9113>I<0300030003000300070007000F000F003FFCFF
FC1F001F001F001F001F001F001F001F001F001F0C1F0C1F0C1F0C0F08079803F00E1A7F
9913>I<FF07F8FF07F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00F81F00
F81F00F81F00F81F00F81F01F80F01F80786FF01F8FF18127F911B>I<FFC7FCFFC7FC1F
81800F838007C70003EE0001FC0001F80000F800007C0000FE0001DF00039F00070F8006
07C00C03E0FF07FCFF07FC16127F9119>120 D<FFC1FCFFC1FC1F00601F80E00F80C00F
C0C007C18007C18003E30003E30001F70001F60000FE0000FC0000FC0000780000780000
3000003000007000706000F86000F8C000F980007300003E0000161A7F9119>I<FFFFFE
1701808B18>123 D E /Fh 2 49 df<FFFFC0FFFFC012027D871A>0
D<040E0E1C1C1C38383070706060C0C0070F7F8F0A>48 D E /Fi
15 107 df<FFFFFF80FFFFFF8019027D8A20>0 D<60F0F06004047C8B0C>I<003F800000
C46000030418000404040008040200100401002004008020040080400400404004004080
0400208004002080040020FFFFFFE0800400208004002080040020800400204004004040
04004020040080200400801004010008040200040404000304180000C46000003F80001B
1C7E9720>8 D<FFFFFFE07FFFFFE0000000000000000000000000000000000000000000
00000000000000FFFFFFE0FFFFFFE0000000000000000000000000000000000000000000
000000000000007FFFFFE0FFFFFFE01B147E9320>17 D<000001800000078000001E0000
0078000001E00000078000001E00000078000001E00000078000001E00000078000000E0
000000780000001E0000000780000001E0000000780000001E0000000780000001E00000
00780000001E000000078000000180000000000000000000000000000000000000000000
000000000000007FFFFF00FFFFFF8019227D9920>20 D<C0000000F00000003C0000000F
00000003C0000000F00000003C0000000F00000003C0000000F00000003C0000000F0000
00038000000F0000003C000000F0000003C000000F0000003C000000F0000003C000000F
0000003C00000070000000C0000000000000000000000000000000000000000000000000
000000000000007FFFFF00FFFFFF8019227D9920>I<07C000201FE000203FF80020783C
0060E01F00E0C00783C08003FF808000FF0080007C000000000007C000201FE000203FF8
0020783C0060E01F00E0C00783C08003FF808000FF0080007C001B137E9320>25
D<0000018018000007807800000E00E000003803800000F00F000003C03C000007007000
001C01C000007807800001E01E000007807800000E00E000003803800000F00F000000F0
0F00000038038000000E00E00000078078000001E01E00000070070000001C01C000000F
00F0000003C03C000000F00F00000038038000000E00E000000780780000018018251C7E
972A>28 D<C00C000000F00F00000038038000000E00E00000078078000001E01E000000
70070000001C01C000000F00F0000003C03C000000F00F00000038038000000E00E00000
078078000007807800000E00E000003803800000F00F000003C03C000007007000001C01
C000007807800001E01E000007807800000E00E000003803800000F00F000000C00C0000
00251C7E972A>I<007FF801FFF80780000E0000180000300000300000600000600000C0
0000C00000C00000FFFFF8FFFFF8C00000C00000C0000060000060000030000030000018
00000E000007800001FFF8007FF8151A7D961C>50 D<0000600000600000C00000C00001
80000180000180000300000300000600000600000C00000C000018000018000018000030
0000300000600000600000C00000C0000180000180000300000300000300000600000600
000C00000C0000180000180000300000300000300000600000600000C000004000001328
7A9D00>54 D<001000003800003800006C00006C00006C0000C60000C600018300018300
0301800301800600C00600C00600C00C00600C0060180030180030300018300018300018
60000C60000CC00006C00002171A7E981C>94 D<003C00E001C001800380038003800380
038003800380038003800380038003800380030007001C00F0001C000700030003800380
03800380038003800380038003800380038003800380018001C000E0003C0E297D9E15>
102 D<F0001C000700030003800380038003800380038003800380038003800380038003
80018001C000E0003C00E001C00180038003800380038003800380038003800380038003
8003800380030007001C00F0000E297D9E15>I<C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0
C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C002297B9E0C>106
D E /Fj 13 112 df<01020408103020606040C0C0C0C0C0C0C0C0C0C040606020301008
040201081E7E950D>40 D<80402010080C0406060203030303030303030303020606040C
0810204080081E7E950D>I<006000006000006000006000006000006000006000006000
006000006000FFFFF0FFFFF0006000006000006000006000006000006000006000006000
00600000600014167E9119>43 D<0F0030C0606060604020C030C030C030C030C030C030
C030C030C03040206060606030C00F000C137E9211>48 D<0C001C00EC000C000C000C00
0C000C000C000C000C000C000C000C000C000C000C000C00FFC00A137D9211>I<1F0060
C06060F070F030603000700070006000C001C00180020004000810101020207FE0FFE00C
137E9211>I<0FC030707038703870380038003000E00FC0007000380018001C601CF01C
F018E03860701FC00E137F9211>I<07C00C201070207060006000C000CF00D0C0E060C0
20C030C030C03040306020206010C00F000C137E9211>54 D<7FFFE0FFFFF00000000000
00000000000000000000000000FFFFF07FFFE0140A7E8B19>61 D<F03030303030303030
30303030303030303030FC06147F9309>108 D<F3E1F0343218381C0C30180C30180C30
180C30180C30180C30180C30180C30180C30180CFC7E3F180D7F8C1B>I<F3E034303818
301830183018301830183018301830183018FC7E0F0D7F8C12>I<0FC0186020106018C0
0CC00CC00CC00CC00C6018601838700FC00E0D7F8C11>I E /Fk
27 121 df<0780101FC0103FE0207FF020603040C01080801080000900000900000A0000
0A00000A00000C00000C0000080000080000080000180000180000180000300000300000
3000003000006000006000004000141B7F9115>13 D<0800F01003F81007FC200E0E200C
0640100240100240200280200480400480400CC040084080307080603C83C01FFF800FFF
0001F8000300000300000300000700000700000600000E00000E00000C0000171B7E911B
>39 D<60F0F06004047C830C>58 D<60F0F0701010101020204080040C7C830C>I<0000
038000000F0000003C000000F0000003C000000F0000003C000000F0000003C000000F00
00003C000000F0000000F00000003C0000000F00000003C0000000F00000003C0000000F
00000003C0000000F00000003C0000000F000000038019187D9520>I<00000C0000000C
0000001C0000001C0000003C0000007C0000005C0000009C0000008E0000010E0000010E
0000020E0000040E0000040E0000080E0000080E0000100E0000200E00003FFE00004007
00004007000080070001000700010007000200070002000700060007001E000700FF807F
F01C1D7F9C1F>65 D<0001F808000E061800380138006000F001C0007003800070070000
300F0000200E0000201C0000203C0000203C000000780000007800000078000000F00000
00F0000000F0000000F0000000F0000100F0000100F00001007000020070000200300004
00380008001C0010000E0060000701800000FE00001D1E7E9C1E>67
D<01FFC3FF80003C0078000038007000003800700000380070000038007000007000E000
007000E000007000E000007000E00000E001C00000E001C00000E001C00000FFFFC00001
C003800001C003800001C003800001C00380000380070000038007000003800700000380
07000007000E000007000E000007000E000007000E00000F001E0000FFE1FFC000211C7E
9B23>72 D<01FC00FF80001C001C00002E001800002E001000002E001000002700100000
470020000043002000004380200000438020000081C040000081C040000081C040000080
E040000100E0800001007080000100708000010070800002003900000200390000020039
000002001D000004001E000004000E000004000E00000C000E00001C00040000FF800400
00211C7E9B21>78 D<0003F800000E0E000038038000E001C001C001C0038000E0070000
E00F0000F01E0000F01C0000F03C0000F03C0000F0780000F0780000F0780000F0F00001
E0F00001E0F00001E0F00003C0F00003C0F0000780F0000780F0000F0070000E0070001C
00380038003C0070001C01C0000707800001FC00001C1E7E9C20>I<01FFFF00003C03C0
003800E0003800F00038007000380070007000F0007000F0007000F0007000E000E001E0
00E003C000E0078000E01E0001FFF00001C0000001C0000001C000000380000003800000
0380000003800000070000000700000007000000070000000F000000FFE000001C1C7E9B
1B>I<000FC100303300400F008006018006030006030006060004060004070000070000
07800003F00001FF0000FFC0003FE00003E00000F0000070000030000030200030200030
6000606000606000C0600080F00300CC060083F800181E7E9C19>83
D<01FFC0FF80001E003C00001E003000000E002000000F00400000070080000007010000
000782000000038400000003C800000001D000000001F000000000E000000000E0000000
00F00000000170000000027000000004380000000838000000103C000000201C00000040
1E000000800E000001800E000003000F000006000700001E000F8000FF803FF000211C7F
9B22>88 D<3F00070007000E000E000E000E001C001C001C001C0039E03A303C18381870
18701C701C701CE038E038E038E030E070E060E0C061C023001E000E1D7E9C12>98
D<01F0030C0E0C1C1E383C301870007000E000E000E000E000E000E0046008601030601F
800F127E9112>I<0007E00000E00000E00001C00001C00001C00001C000038000038000
038000038001E7000717000C0F00180F00380E00300E00700E00700E00E01C00E01C00E0
1C00E01C00E03880E03880E038806078803199001E0E00131D7E9C16>I<01F007080C08
18043808300870307FC0E000E000E000E000E000E0046008601030600F800E127E9113>
I<0FC00001C00001C0000380000380000380000380000700000700000700000700000E3E
000EC3000F03800E03801E03801C03801C03801C0380380700380700380700380E00700E
20700E20701C20701C40E00C80600700131D7E9C18>104 D<01C003C003C00180000000
0000000000000000001C00270047004700870087000E000E001C001C001C003800388038
807080710032001C000A1C7E9B0E>I<0007000F000F0006000000000000000000000000
0070009C010C020C021C041C001C001C0038003800380038007000700070007000E000E0
00E000E001C061C0F180F300E6007C001024809B11>I<0FC00001C00001C00003800003
80000380000380000700000700000700000700000E07000E18800E21C00E23C01C47801C
83001D00001E00003F800039C00038E00038E00070E10070E10070E10070E200E0620060
3C00121D7E9C16>I<1F800380038007000700070007000E000E000E000E001C001C001C
001C0038003800380038007000700070007000E400E400E400E40064003800091D7E9C0C
>I<381F81F04E20C6184640E81C4680F01C8F00F01C8E00E01C0E00E01C0E00E01C1C01
C0381C01C0381C01C0381C01C0703803807138038071380380E1380380E2700700643003
003820127E9124>I<381F004E61804681C04701C08F01C08E01C00E01C00E01C01C0380
1C03801C03801C0700380710380710380E10380E2070064030038014127E9119>I<0707
8009C86008D03008E03011C03011C03801C03801C0380380700380700380700380600700
E00700C00701800783000E86000E78000E00000E00001C00001C00001C00001C00003C00
00FF8000151A819115>112 D<01F0060C04040C0E180C1C001F000FE00FF003F8003820
1C7018F018F010803060601F800F127E9113>115 D<07878008C84010F0C020F1E020E3
C040E18000E00000E00001C00001C00001C00001C000638080F38080F38100E5810084C6
0078780013127E9118>120 D E /Fl 1 64 df<01000100010001000100E10E3FF807C0
038006C004400820183010100F0E7F8C10>63 D E /Fm 29 122
df<0001FC000703000C03001C07001C0300180000380000380000380000380000700007
FFFC00701C00701C00701C00E03800E03800E03800E03800E07001C07001C07001C07001
C0E201C0E201C0E20380E4038064038038038000030000070000060000C60000E40000CC
00007000001825819C17>12 D<183878380808101020404080050C7D830D>44
D<003E0000C1800101800200C00400C00440C00841C00841C00841C00883800703800007
00000E0001F800003800000C00000C00000E00000E00000E00000E00700E00E01C00801C
0080380080300040600021C0001F0000121D7C9B15>51 D<0003F020001E0C60003002E0
00E003C001C001C0038001C0070000C00E0000801E0000801C0000803C0000803C000000
780000007800000078000000F0000000F0000000F0000000F0000000F0000400F0000400
F0000400F0000800700008007000100038002000180040000C0180000706000001F80000
1B1E7A9C1E>67 D<01FFC0003C0000380000380000380000380000700000700000700000
700000E00000E00000E00000E00001C00001C00001C00001C00003800003800003800003
80000700000700000700000700000F0000FFE000121C7E9B10>73
D<01FFFC00003C070000380380003801C0003801C0003801C0007003C0007003C0007003
C00070038000E0078000E0070000E00E0000E0380001FFE00001C0000001C0000001C000
0003800000038000000380000003800000070000000700000007000000070000000F0000
00FFE000001A1C7D9B1C>80 D<000F8400304C00403C0080180100180300180300180600
1006001006000007000007000003E00003FC0001FF00007F800007C00001C00001C00000
C00000C02000C02000C0600180600180600300600200F00400CC180083E000161E7D9C17
>83 D<03CC063C0C3C181C3838303870387038E070E070E070E070E0E2C0E2C0E261E462
643C380F127B9115>97 D<3F00070007000E000E000E000E001C001C001C001C0039C03E
60383038307038703870387038E070E070E070E060E0E0C0C0C1C0618063003C000D1D7B
9C13>I<01F007080C08181C3838300070007000E000E000E000E000E000E008E0106020
30C01F000E127B9113>I<001F80000380000380000700000700000700000700000E0000
0E00000E00000E0003DC00063C000C3C00181C00383800303800703800703800E07000E0
7000E07000E07000E0E200C0E200C0E20061E4006264003C3800111D7B9C15>I<01E007
100C1018083810701070607F80E000E000E000E000E000E0086010602030C01F000D127B
9113>I<0003C0000670000C70001C60001C00001C000038000038000038000038000038
0003FF8000700000700000700000700000700000E00000E00000E00000E00000E00001C0
0001C00001C00001C00001C000038000038000038000030000030000070000C60000E600
00CC00007800001425819C0D>I<00F3018F030F06070E0E0C0E1C0E1C0E381C381C381C
381C383830383038187818F00F700070007000E000E0C0C0E1C0C3007E00101A7D9113>
I<0FC00001C00001C0000380000380000380000380000700000700000700000700000E78
000E8C000F0E000E0E001C0E001C0E001C0E001C0E00381C00381C00381C003838007038
80703880707080707100E03200601C00111D7D9C15>I<01800380010000000000000000
000000000000001C002600470047008E008E000E001C001C001C00380038007100710071
00720072003C00091C7C9B0D>I<1F800380038007000700070007000E000E000E000E00
1C001C001C001C0038003800380038007000700070007000E400E400E400E40068003800
091D7C9C0B>108 D<3C1E0780266318C04683A0E04703C0E08E0380E08E0380E00E0380
E00E0380E01C0701C01C0701C01C0701C01C070380380E0388380E0388380E0708380E07
10701C0320300C01C01D127C9122>I<3C3C002646004687004707008E07008E07000E07
000E07001C0E001C0E001C0E001C1C00381C40381C40383840383880701900300E001212
7C9117>I<01E007180C0C180C380C300E700E700EE01CE01CE01CE018E038E030E06060
C031801E000F127B9115>I<07870004D98008E0C008E0C011C0E011C0E001C0E001C0E0
0381C00381C00381C00381800703800703000707000706000E8C000E70000E00000E0000
1C00001C00001C00001C00003C0000FF8000131A7F9115>I<03C4062C0C3C181C383830
3870387038E070E070E070E070E0E0C0E0C0E061E063C03DC001C001C003800380038003
8007803FF00E1A7B9113>I<3C3C26C2468747078E068E000E000E001C001C001C001C00
38003800380038007000300010127C9112>I<01F006080C080C1C18181C001F001FC00F
F007F0007800386030E030C030806060C01F000E127D9111>I<00C001C001C001C00380
038003800380FFE00700070007000E000E000E000E001C001C001C001C00384038403840
388019000E000B1A7D990E>I<1E0300270700470700470700870E00870E000E0E000E0E
001C1C001C1C001C1C001C1C003838803838801838801839001C5900078E0011127C9116
>I<1E06270E470E4706870287020E020E021C041C041C041C0818083808181018200C40
07800F127C9113>I<070E0019910010E38020E38041C30041C00001C00001C000038000
038000038000038000070200670200E70400CB04008B080070F00011127D9113>120
D<1E03270747074707870E870E0E0E0E0E1C1C1C1C1C1C1C1C38383838183818381C7007
F00070007000E0E0C0E1C0818047003C00101A7C9114>I E /Fn
43 121 df<000FF000007FFC0001F80E0003E01F0007C03F000F803F000F803F000F801E
000F800C000F8000000F8000000F8000000F800000FFFFFF00FFFFFF000F801F000F801F
000F801F000F801F000F801F000F801F000F801F000F801F000F801F000F801F000F801F
000F801F000F801F000F801F000F801F000F801F000F801F000F801F007FF0FFE07FF0FF
E01B237FA21F>12 D<00180000780001F800FFF800FFF80001F80001F80001F80001F800
01F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F80001F800
01F80001F80001F80001F80001F80001F80001F80001F80001F8007FFFE07FFFE013207C
9F1C>49 D<03FC000FFF003C1FC07007E07C07F0FE03F0FE03F8FE03F8FE01F87C01F838
03F80003F80003F00003F00007E00007C0000F80001F00003E0000380000700000E01801
C0180380180700180E00380FFFF01FFFF03FFFF07FFFF0FFFFF0FFFFF015207D9F1C>I<
00FE0007FFC00F07E01E03F03F03F03F81F83F81F83F81F81F03F81F03F00003F00003E0
0007C0001F8001FE0001FF000007C00001F00001F80000FC0000FC3C00FE7E00FEFF00FE
FF00FEFF00FEFF00FC7E01FC7801F81E07F00FFFC001FE0017207E9F1C>I<0000E00001
E00003E00003E00007E0000FE0001FE0001FE00037E00077E000E7E001C7E00187E00307
E00707E00E07E00C07E01807E03807E07007E0E007E0FFFFFEFFFFFE0007E00007E00007
E00007E00007E00007E00007E000FFFE00FFFE17207E9F1C>I<1000201E01E01FFFC01F
FF801FFF001FFE001FF8001BC00018000018000018000018000019FC001FFF001E0FC018
07E01803E00003F00003F00003F80003F83803F87C03F8FE03F8FE03F8FC03F0FC03F070
07E03007C01C1F800FFF0003F80015207D9F1C>I<001F8000FFE003F07007C0F00F01F8
1F01F83E01F83E01F87E00F07C00007C0000FC0800FC7FC0FCFFE0FD80F0FF00F8FE007C
FE007CFC007EFC007EFC007EFC007E7C007E7C007E7C007E3C007C3E007C1E00F80F00F0
0783E003FFC000FF0017207E9F1C>I<6000007800007FFFFE7FFFFE7FFFFC7FFFF87FFF
F87FFFF0E00060E000C0C00180C00300C00300000600000C00001C000018000038000078
0000780000F00000F00000F00001F00001F00001F00003F00003F00003F00003F00003F0
0003F00003F00001E00017227DA11C>I<000070000000007000000000F800000000F800
000000F800000001FC00000001FC00000003FE00000003FE00000003FE00000006FF0000
00067F0000000E7F8000000C3F8000000C3F800000183FC00000181FC00000381FE00000
300FE00000300FE00000600FF000006007F00000E007F80000FFFFF80000FFFFF8000180
01FC00018001FC00038001FE00030000FE00030000FE000600007F000600007F00FFE00F
FFF8FFE00FFFF825227EA12A>65 D<FFFFFF8000FFFFFFE00007F001F80007F000FC0007
F0007E0007F0007E0007F0007F0007F0007F0007F0007F0007F0007F0007F0007F0007F0
007E0007F000FE0007F000FC0007F003F80007FFFFF00007FFFFF00007F001FC0007F000
7E0007F0003F0007F0003F8007F0001F8007F0001FC007F0001FC007F0001FC007F0001F
C007F0001FC007F0001FC007F0003F8007F0003F8007F0007F0007F001FE00FFFFFFF800
FFFFFFC00022227EA128>I<0003FE0080001FFF818000FF01E38001F8003F8003E0001F
8007C0000F800F800007801F800007803F000003803F000003807F000001807E00000180
7E00000180FE00000000FE00000000FE00000000FE00000000FE00000000FE00000000FE
00000000FE000000007E000000007E000001807F000001803F000001803F000003801F80
0003000F8000030007C000060003F0000C0001F800380000FF00F000001FFFC0000003FE
000021227DA128>I<FFFFFFFCFFFFFFFC07F000FC07F0003C07F0001C07F0000C07F000
0E07F0000E07F0000607F0180607F0180607F0180607F0180007F0380007F0780007FFF8
0007FFF80007F0780007F0380007F0180007F0180007F0180307F0180307F0000307F000
0607F0000607F0000607F0000E07F0000E07F0001E07F0003E07F001FCFFFFFFFCFFFFFF
FC20227EA125>69 D<FFFFFFF8FFFFFFF807F001F807F0007807F0003807F0001807F000
1C07F0001C07F0000C07F0000C07F0180C07F0180C07F0180007F0180007F0380007F078
0007FFF80007FFF80007F0780007F0380007F0180007F0180007F0180007F0180007F000
0007F0000007F0000007F0000007F0000007F0000007F0000007F00000FFFFE000FFFFE0
001E227EA123>I<FFFFE0FFFFE003F80003F80003F80003F80003F80003F80003F80003
F80003F80003F80003F80003F80003F80003F80003F80003F80003F80003F80003F80003
F80003F80003F80003F80003F80003F80003F80003F80003F80003F80003F800FFFFE0FF
FFE013227FA115>73 D<FFFFE000FFFFE00007F0000007F0000007F0000007F0000007F0
000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0
000007F0000007F0000007F0000007F0000007F0000007F0001807F0001807F0001807F0
001807F0003807F0003807F0007007F0007007F000F007F001F007F007F0FFFFFFF0FFFF
FFF01D227EA122>76 D<FFF8001FFEFFFC001FFE07FC0000C007FE0000C006FF0000C006
7F8000C0063FC000C0061FE000C0060FE000C0060FF000C00607F800C00603FC00C00601
FE00C00600FE00C00600FF00C006007F80C006003FC0C006001FE0C006000FF0C0060007
F0C0060007F8C0060003FCC0060001FEC0060000FFC00600007FC00600007FC00600003F
C00600001FC00600000FC006000007C006000003C006000003C0FFF00001C0FFF00000C0
27227EA12C>78 D<0007FC0000003FFF800000FC07E00003F001F80007E000FC000FC000
7E001F80003F001F80003F003F00001F803F00001F807F00001FC07E00000FC07E00000F
C0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0FE00000FE0
FE00000FE0FE00000FE07E00000FC07F00001FC07F00001FC03F00001F803F80003F801F
80003F000FC0007E0007E000FC0003F001F80000FC07E000003FFF80000007FC00002322
7DA12A>I<FFFFFF00FFFFFFE007F007F007F001FC07F000FC07F0007E07F0007E07F000
7F07F0007F07F0007F07F0007F07F0007F07F0007E07F0007E07F000FC07F001FC07F007
F007FFFFE007FFFF0007F0000007F0000007F0000007F0000007F0000007F0000007F000
0007F0000007F0000007F0000007F0000007F0000007F00000FFFF8000FFFF800020227E
A126>I<FFFFFE0000FFFFFFC00007F007F00007F001F80007F000FC0007F0007E0007F0
007F0007F0007F0007F0007F0007F0007F0007F0007F0007F0007F0007F0007E0007F000
FC0007F001F80007F007F00007FFFFC00007FFFF800007F00FE00007F007F00007F003F8
0007F001FC0007F001FC0007F001FC0007F001FC0007F001FC0007F001FC0007F001FC00
07F001FC0007F001FC0607F000FE0607F000FF0CFFFF803FF8FFFF800FF027227EA12A>
82 D<01FC0407FF8C1F03FC3C007C7C003C78001C78001CF8000CF8000CFC000CFC0000
FF0000FFE0007FFF007FFFC03FFFF01FFFF80FFFFC03FFFE003FFE0003FF00007F00003F
00003FC0001FC0001FC0001FE0001EE0001EF0003CFC003CFF00F8C7FFE080FF8018227D
A11F>I<7FFFFFFF807FFFFFFF807E03F80F807803F807807003F803806003F80180E003
F801C0E003F801C0C003F800C0C003F800C0C003F800C0C003F800C00003F800000003F8
00000003F800000003F800000003F800000003F800000003F800000003F800000003F800
000003F800000003F800000003F800000003F800000003F800000003F800000003F80000
0003F800000003F800000003F800000003F8000003FFFFF80003FFFFF80022227EA127>
I<FFFF800FFEFFFF800FFE07F00000C007F80000C003F800018003F800018001FC000300
01FC00030001FE00070000FE00060000FF000600007F000C00007F800C00003F80180000
3F801800003FC03800001FC03000001FE03000000FE06000000FF060000007F0C0000007
F0C0000007F9C0000003F980000003FD80000001FF00000001FF00000000FE00000000FE
00000000FE000000007C000000007C00000000380000000038000027227FA12A>86
D<07FC001FFF803F07C03F03E03F01E03F01F01E01F00001F00001F0003FF003FDF01FC1
F03F01F07E01F0FC01F0FC01F0FC01F0FC01F07E02F07E0CF81FF87F07E03F18167E951B
>97 D<FF000000FF0000001F0000001F0000001F0000001F0000001F0000001F0000001F
0000001F0000001F0000001F0000001F0000001F0FE0001F3FF8001FF07C001F801E001F
001F001F000F801F000F801F000FC01F000FC01F000FC01F000FC01F000FC01F000FC01F
000FC01F000FC01F000F801F001F801F801F001FC03E001EE07C001C3FF800180FC0001A
237EA21F>I<00FF8007FFE00F83F01F03F03E03F07E03F07C01E07C0000FC0000FC0000
FC0000FC0000FC0000FC00007C00007E00007E00003E00301F00600FC0E007FF8000FE00
14167E9519>I<0001FE000001FE0000003E0000003E0000003E0000003E0000003E0000
003E0000003E0000003E0000003E0000003E0000003E0001FC3E0007FFBE000F81FE001F
007E003E003E007E003E007C003E00FC003E00FC003E00FC003E00FC003E00FC003E00FC
003E00FC003E00FC003E007C003E007C003E003E007E001E00FE000F83BE0007FF3FC001
FC3FC01A237EA21F>I<00FE0007FF800F87C01E01E03E01F07C00F07C00F8FC00F8FC00
F8FFFFF8FFFFF8FC0000FC0000FC00007C00007C00007E00003E00181F00300FC07003FF
C000FF0015167E951A>I<003F8000FFC001E3E003C7E007C7E00F87E00F83C00F80000F
80000F80000F80000F80000F8000FFFC00FFFC000F80000F80000F80000F80000F80000F
80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F
80007FF8007FF80013237FA211>I<03FC1E0FFF7F1F0F8F3E07CF3C03C07C03E07C03E0
7C03E07C03E07C03E03C03C03E07C01F0F801FFF0013FC003000003000003800003FFF80
1FFFF00FFFF81FFFFC3800FC70003EF0001EF0001EF0001EF0001E78003C7C007C3F01F8
0FFFE001FF0018217E951C>I<FF000000FF0000001F0000001F0000001F0000001F0000
001F0000001F0000001F0000001F0000001F0000001F0000001F0000001F07E0001F1FF8
001F307C001F403C001F803E001F803E001F003E001F003E001F003E001F003E001F003E
001F003E001F003E001F003E001F003E001F003E001F003E001F003E001F003E001F003E
00FFE1FFC0FFE1FFC01A237EA21F>I<1C003E007F007F007F003E001C00000000000000
0000000000000000FF00FF001F001F001F001F001F001F001F001F001F001F001F001F00
1F001F001F001F001F001F00FFE0FFE00B247EA310>I<FF000000FF0000001F0000001F
0000001F0000001F0000001F0000001F0000001F0000001F0000001F0000001F0000001F
0000001F00FF801F00FF801F0038001F0060001F01C0001F0380001F0700001F0E00001F
1C00001F7E00001FFF00001FCF00001F0F80001F07C0001F03E0001F01E0001F01F0001F
00F8001F007C001F003C00FFE0FFC0FFE0FFC01A237EA21E>107
D<FF00FF001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F
001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F00FFE0FFE00B
237EA210>I<FF07F007F000FF1FFC1FFC001F303E303E001F403E403E001F801F801F00
1F801F801F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F00
1F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F00
1F001F001F001F001F001F001F001F001F00FFE0FFE0FFE0FFE0FFE0FFE02B167E9530>
I<FF07E000FF1FF8001F307C001F403C001F803E001F803E001F003E001F003E001F003E
001F003E001F003E001F003E001F003E001F003E001F003E001F003E001F003E001F003E
001F003E001F003E00FFE1FFC0FFE1FFC01A167E951F>I<00FE0007FFC00F83E01E00F0
3E00F87C007C7C007C7C007CFC007EFC007EFC007EFC007EFC007EFC007EFC007E7C007C
7C007C3E00F81F01F00F83E007FFC000FE0017167E951C>I<FF0FE000FF3FF8001FF07C
001F803E001F001F001F001F801F001F801F000FC01F000FC01F000FC01F000FC01F000F
C01F000FC01F000FC01F000FC01F001F801F001F801F803F001FC03E001FE0FC001F3FF8
001F0FC0001F0000001F0000001F0000001F0000001F0000001F0000001F0000001F0000
00FFE00000FFE000001A207E951F>I<FE1F00FE3FC01E67E01EC7E01E87E01E87E01F83
C01F00001F00001F00001F00001F00001F00001F00001F00001F00001F00001F00001F00
001F0000FFF000FFF00013167E9517>114 D<0FF3003FFF00781F00600700E00300E003
00F00300FC00007FE0007FF8003FFE000FFF0001FF00000F80C00780C00380E00380E003
80F00700FC0E00EFFC00C7F00011167E9516>I<01800001800001800001800003800003
80000780000780000F80003F8000FFFF00FFFF000F80000F80000F80000F80000F80000F
80000F80000F80000F80000F80000F80000F81800F81800F81800F81800F81800F830007
C30003FE0000F80011207F9F16>I<FF01FE00FF01FE001F003E001F003E001F003E001F
003E001F003E001F003E001F003E001F003E001F003E001F003E001F003E001F003E001F
003E001F003E001F003E001F007E001F00FE000F81BE0007FF3FC001FC3FC01A167E951F
>I<FFE7FF07F8FFE7FF07F81F007800C00F807801800F807C01800F807C018007C07E03
0007C0DE030007E0DE070003E0DF060003E18F060001F18F0C0001F38F8C0001FB079C00
00FB07D80000FE03D800007E03F000007E03F000007C01F000003C01E000003800E00000
1800C00025167F9528>119 D<FFE07FC0FFE07FC00F801C0007C0380003E0700003F060
0001F8C00000F98000007F8000003F0000001F0000001F8000003FC0000037C0000063E0
0000C1F00001C0F8000380FC0007007E000E003E00FF80FFE0FF80FFE01B167F951E>I
E /Fo 55 122 df<0003FE000E03001C0700180600380000380000700000700000700000
700007FFFC00E01C00E03800E03800E03800E03801C07001C07001C07001C07001C0E403
C0E40380E40380E4038068038030030000070000070000660000E60000CC000078000018
21819916>12 D<000400180030006000C0008001800300030006000E000C001C00180018
0038003000300070007000600060006000E000E000E000C000C000C000C000C000600060
00600020003000100008000E267B9B10>40 D<0040006000200030001000180018001800
180018001800180018001800180018003800380030003000700070006000E000C000C001
C0018003800300060006000C00180010002000400080000D267F9B10>I<183878380810
1020204080050B7D830C>44 D<FF80FF80FF0009037D880E>I<3078F06005047C830C>I<
0000080000180000180000300000300000600000600000C00000C0000180000300000300
000600000600000C00000C0000180000300000300000600000600000C00000C000018000
0300000300000600000600000C00000C0000180000180000300000600000600000C00000
80000015257F9B14>I<007C000186000303000603000C03801C03801C03803803803803
80380380700700700700700700700700E00E00E00E00E00E00E01C00E01C00E01800E030
0060600030C0001F000011187C9714>I<000800180030007001F00E7000E000E000E000
E001C001C001C001C0038003800380038007000700070007000F00FFF00D187C9714>I<
007C000186000203000403800483800883801083801083801083801107001207000C0E00
001C000030000060000180000200000C00001001002001003C060067FE00C1FC0080F000
11187D9714>I<003E0000C3000101800201800481C00441C00883800483800703000006
00000C0001F000001800000C00000C00000E00000E00600E00E01C00E01C008038004030
0020E0001F800012187D9714>I<03018003FF0003FC0002200004000004000004000004
000008000009E0000E1800081800001C00001C00001C00001C00201C00701C00E0380080
300040700040E0002180001E000011187C9714>53 D<001F000060800180800303800603
800E00001C000018000038000039F000721800740C00780E00700E00F00E00E00E00E00E
00E00E00E01C00E01C0060380060700030C0001F800011187C9714>I<09C04017E0801F
F1803C1F00300200600600400400800C0000080000180000300000300000700000600000
E00000C00001C00001C00001800003800003800003800007000003000012187B9714>I<
007C000186000703000E03000C03801C0380380380380380380380380780380700380F00
1817000C270007CE00000E00000C00001C00001800E03000E0600080C000C380003E0000
11187C9714>57 D<060F1E0C00000000000000003078F06008107C8F0C>I<0000200000
600000600000E00001E00001E00002700002700004700008700008700010700010700020
7000207000407000807000FFF00100380100380200380400380400380C00381C0038FF01
FF181A7E991D>65 D<000F8200706200C01603801E07000C0E000C1C000C18000C380008
300008700000700000E00000E00000E00000E00000E00020E00020E00020E00040600040
6000803001001006000C180003E000171A7A991B>67 D<03FFF80000700E000070070000
70030000E0018000E0018000E0018000E001C001C001C001C001C001C001C001C001C003
800380038003800380038003800300070007000700070007000E0007000C000E001C000E
0038000E0070000E00E0001C038000FFFE00001A1A7D991D>I<03FFFF00700700700300
700100E00100E00100E00100E00101C08001C08001C08001C18003FF0003810003810003
81000702000700040700040700080E00080E00180E00100E00301C00E0FFFFE0181A7D99
1A>I<03FFFF00700700700300700100E00100E00100E00100E00101C08001C08001C080
01C18003FF000381000381000381000702000700000700000700000E00000E00000E0000
0E00001E0000FFE000181A7D9919>I<000FC100302100C01301800F0700060E00060C00
06180006380004300004700000700000E00000E00000E00000E007FEE00070E00070E000
70E000706000E06000E03000E01801E00C064003F840181A7A991E>I<03FF1FF8007003
80007003800070038000E0070000E0070000E0070000E0070001C00E0001C00E0001C00E
0001C00E0003FFFC0003801C0003801C0003801C00070038000700380007003800070038
000E0070000E0070000E0070000E0070001C00E000FFC7FE001D1A7D991D>I<01FF8000
380000380000380000700000700000700000700000E00000E00000E00000E00001C00001
C00001C00001C0000380000380000380000380000700000700000700000700000E0000FF
E000111A7E990F>I<00FFC0000E00000E00000E00001C00001C00001C00001C00003800
00380000380000380000700000700000700000700000E00000E00000E00000E00061C000
E1C000E180008380004700003C0000121A7C9914>I<03FF8000700000700000700000E0
0000E00000E00000E00001C00001C00001C00001C0000380000380000380000380000700
000700100700100700200E00200E00600E00400E00C01C0380FFFF80141A7D9918>76
D<03F8001FC00078003C000078003C000078005C0000B800B80000B800B800009C013800
009C013800011C027000011C027000011C047000011C087000021C08E000021C10E00002
1C10E000021C20E000041C41C000041C41C000041C81C000041C81C000080F038000080F
038000080E038000180C038000380C070000FF083FF000221A7D9922>I<03FFF800701C
00700600700700E00700E00700E00700E00701C00E01C00E01C01C01C03803807003FF80
0380000380000700000700000700000700000E00000E00000E00000E00001C0000FFC000
181A7D991A>80 D<03FFF000701C00700E00700700E00700E00700E00700E00701C00E01
C01C01C03801C0E003FF800380C00380600380700700700700700700700700700E00E00E
00E00E00E10E00E21C0062FFC03C181A7D991C>82 D<003F100060900180700100700300
2006002006002006002006000007000007C00003F80001FE00007F00000F800003800001
80000180200180200180600300600300600600700C00C8180087E000141A7D9916>I<3F
FFFC381C0C201C04401C0440380480380480380480380400700000700000700000700000
E00000E00000E00000E00001C00001C00001C00001C00003800003800003800003800007
8000FFF800161A79991B>I<FF803F801C001C001C0008001C0010001C0010001C002000
1C0040001E0040000E0080000E0080000E0100000E0200000E0200000E0400000E0C0000
0E0800000E10000007100000072000000740000007400000078000000780000007000000
0600000006000000191A78991D>86 D<FF87FC3FC03C00E006001C00E004001C00E00400
1C01E008001C03E008001C02E010001C04E030001C04E020001C08E040001C08E040001C
10E080001C10E080001C20E100001C20E100001C40E200001C40E200001C80E400001D80
E400001D00E800001E00F800001E00F000001C00E000001C00E000001800C000001800C0
0000221A789926>I<03CC0E2E181C381C301C701CE038E038E038E038C072C072C07260
F261341E180F107C8F14>97 D<7E000E000E000E001C001C001C001C00380038003BC03C
307830701870187018E038E038E038E038C070C060C0E060C063801E000D1A7C9912>I<
01F006080C181838301070006000E000E000E000E000E008E010602030C01F000D107C8F
12>I<001F80000380000380000380000700000700000700000700000E00000E0003CE00
0E2E00181C00381C00301C00701C00E03800E03800E03800E03800C07200C07200C07200
60F2006134001E1800111A7C9914>I<01E006181C08380870087010FFE0E000E000E000
E000E0086010602030C01F000D107C8F12>I<000700001980001B80003B000030000030
0000700000700000700000700007FF0000E00000E00000E00000E00000E00001C00001C0
0001C00001C00001C0000380000380000380000380000380000700000700000700006600
00E40000CC0000700000112181990C>I<00F300038B800607000E07000C07001C070038
0E00380E00380E00380E00301C00301C00301C00183C0018780007B80000380000380000
7000607000E0E000C1C0007F000011177E8F12>I<1F8000038000038000038000070000
0700000700000700000E00000E00000E7C000F86001E07001E07001C07001C0700380E00
380E00380E00381C00701C80701C80703880703900E01900600E00111A7E9914>I<0307
06000000000000384C4E8E9C9C1C3838707272E2E4643808197C980C>I<1F8003800380
038007000700070007000E000E000E0E0E131C271C431C801F003C003F8039C038E070E2
70E270E270E4E0646038101A7E9912>107 D<3F0707070E0E0E0E1C1C1C1C3838383870
707070E4E4E4E46830081A7D990A>I<307C1E00598663009E0783809E0703809C070380
9C070380380E0700380E0700380E0700380E0E00701C0E40701C0E40701C1C40701C1C80
E0380C80601807001A107C8F1F>I<307C005986009E07009E07009C07009C0700380E00
380E00380E00381C00701C80701C80703880703900E01900600E0011107C8F16>I<01F0
06180C0C180E300E700E600EE00EE00EE00CE01CE018E030606030C01F000F107C8F14>
I<030F000590C009E0C009C06009C06009C0600380E00380E00380E00380E00701C00701
800703800703000E8E000E78000E00000E00001C00001C00001C00001C0000FF00001317
808F14>I<30F059189E389C189C009C0038003800380038007000700070007000E00060
000D107C8F10>114 D<03E004300830187018601C001F801FC00FE000E00060E060E060
80C041803E000C107D8F10>I<06000E000E000E000E001C001C00FFC01C003800380038
0038007000700070007000E100E100E100E200640038000A177C960D>I<38064C074E0E
8E0E9C0E9C0E1C1C381C381C381C7039703970393079389A0F0C10107C8F15>I<38184C
1C4E1C8E0C9C0C9C0C1C08380838083808701070107020304018C00F000E107C8F12>I<
380C304C0E384E1C388E1C189C1C189C1C181C3810383810383810383810707020707020
70704030704018B8800F0F0015107C8F19>I<38064C074E0E8E0E9C0E9C0E1C1C381C38
1C381C703870387038307838F00F700070006060E0E1C0C18047003C0010177C8F13>
121 D E /Fp 20 117 df<78FCFCFCFC7806067D850C>46 D<00C003C0FFC0FFC003C003
C003C003C003C003C003C003C003C003C003C003C003C003C003C003C003C003C07FFE7F
FE0F187D9716>49 D<0FF0003FFC00787E00FC1F00FC1F80FC0F80FC0F80780F80001F80
001F00001E00003C0000780000700000E0000180000301800601800C01801003803FFF00
7FFF00FFFF00FFFF0011187E9716>I<07F0001FFC00383E007C3E007C1F007C1F007C1F
00383F00003E00003C0000780007F000003C00001E00001F00001F80781F80FC1F80FC1F
80FC1F00F81F00703E003FFC000FF00011187E9716>I<000600000E00001E00003E0000
7E0000DE00019E00011E00031E00061E000C1E00181E00301E00601E00C01E00FFFFE0FF
FFE0001E00001E00001E00001E00001E0001FFE001FFE013187F9716>I<3006003FFC00
3FFC003FF0003FE0003F800030000030000030000037F000381C00301E00000F00000F00
000F80700F80F80F80F80F80F80F80F80F00601F00383E001FF80007E00011187E9716>
I<00F80007FE000F06001E0F003C1F003C1F00780E00780000F80000F9F000FA1C00FC0E
00FC0F00F80F80F80F80F80F80F80F80780F80780F80780F003C0F001E1E000FFC0003F0
0011187E9716>I<00030000000780000007800000078000000FC000000FC000001BE000
001BE000001BE0000031F0000031F0000060F8000060F80000E0FC0000C07C0000C07C00
01803E0001FFFE0003FFFF0003001F0003001F0006000F8006000F800E000FC0FFC07FFC
FFC07FFC1E1A7F9921>65 D<FFFFFCFFFFFC0F803C0F801C0F800C0F800E0F80060F8006
0F83060F83000F83000F87000FFF000FFF000F87000F83000F83000F83000F80000F8000
0F80000F80000F80000F8000FFFC00FFFC00171A7E991C>70 D<7FFFFF807FFFFF80781F
0780701F0380601F0180E01F01C0C01F00C0C01F00C0C01F00C0001F0000001F0000001F
0000001F0000001F0000001F0000001F0000001F0000001F0000001F0000001F0000001F
0000001F0000001F0000001F000007FFFC0007FFFC001A1A7E991F>84
D<0FF0001C3C003E1E003E0E003E0F001C0F00000F0000FF000FCF003E0F007C0F00F80F
00F80F00F80F00F817007C27E01FC3E013117F9015>97 D<FE0000FE00001E00001E0000
1E00001E00001E00001E00001E00001E7F001FC3C01F00E01E00F01E00781E00781E007C
1E007C1E007C1E007C1E007C1E00781E00781E00F01F00E01D83C0187F00161A7F9919>
I<03FC000F0E001C1F003C1F00781F00780E00F80000F80000F80000F80000F800007800
007800003C01801C03000F060003FC0011117F9014>I<03F0000E1C001C0E003C070078
0700780780F80780F80780FFFF80F80000F800007800007800003C01801C03000E060003
FC0011117F9014>101 D<07E3C01C3CE0381CE0781EC0781E00781E00781E00781E0038
1C001C380027E0002000002000003000003FFE001FFF801FFFC07003C0E000E0E000E0E0
00E0E000E07001C03C078007FC0013197F9016>103 D<3C007E007E007E007E003C0000
000000000000007E007E001E001E001E001E001E001E001E001E001E001E001E001E001E
00FF80FF80091B7F9A0D>105 D<FE00FE001E001E001E001E001E001E001E001E001E00
1E001E001E001E001E001E001E001E001E001E001E001E001E00FFC0FFC00A1A7F990D>
108 D<FC78FC9C1D3E1D3E1E3E1E1C1E001E001E001E001E001E001E001E001E00FFC0FF
C00F117F9012>114 D<1FB020704030C030C030F000FF807FE03FF807F8003CC00CC00C
E00CE008F830CFE00E117F9011>I<06000600060006000E000E001E003FF0FFF01E001E
001E001E001E001E001E001E001E181E181E181E181E180F3003E00D187F9711>I
E /Fq 2 104 df<007001C0038007000700070007000700070007000700070007000700
070007000E001C00F0001C000E0007000700070007000700070007000700070007000700
07000700038001C000700C257D9B13>102 D<F0001C000E000700070007000700070007
000700070007000700070007000700038001C0007001C003800700070007000700070007
0007000700070007000700070007000E001C00F0000C257D9B13>I
E /Fr 76 124 df<00FC000182000703000607000E02000E00000E00000E00000E00000E
0000FFFF000E07000E07000E07000E07000E07000E07000E07000E07000E07000E07000E
07000E07000E07000E07007F0FE0131A809915>12 D<007E1F8001C170400703C0600603
80E00E0380400E0380000E0380000E0380000E0380000E038000FFFFFFE00E0380E00E03
80E00E0380E00E0380E00E0380E00E0380E00E0380E00E0380E00E0380E00E0380E00E03
80E00E0380E00E0380E00E0380E07F8FE3FC1E1A809920>14 D<60C0F1E0F9F068D00810
08100810102010202040C1800C0B7F9913>34 D<0E0003003100070030800E0060E01C00
E05FEC00E0401800E0403000E0403000E0406000E040C000E040C0006081800030830000
310300000E060000000C0700001818800018184000303040006070200060702000C07020
01807020018070200300702006007020060030400C00184018001880080007001B1E7E9B
20>37 D<60F0F868080808101020C0050B7D990B>39 D<00800100020004000C00080018
003000300030006000600060006000E000E000E000E000E000E000E000E000E000E00060
00600060006000300030003000180008000C00040002000100008009267D9B0F>I<8000
400020001000180008000C00060006000600030003000300030003800380038003800380
0380038003800380038003000300030003000600060006000C0008001800100020004000
800009267E9B0F>I<60F0F07010101020204080040B7D830B>44
D<FFC0FFC00A0280880D>I<60F0F06004047D830B>I<078018603030303060186018E01C
E01CE01CE01CE01CE01CE01CE01CE01CE01CE01CE01C6018601870383030186007800E18
7E9713>48 D<03000700FF00070007000700070007000700070007000700070007000700
07000700070007000700070007000700FFF00C187D9713>I<0F80106020304038803CC0
1CE01C401C003C003800380070006000C001800100020004040804100430083FF87FF8FF
F80E187E9713>I<0F8010E02070607870382038007800700070006000C00F8000E00070
0038003C003CE03CE03CC03C4038407030E00F800E187E9713>I<00300030007000F000
F001700370027004700C7008701070307020704070C070FFFF0070007000700070007000
7007FF10187F9713>I<30183FF03FE03FC02000200020002000200027C0386020300038
0018001C001C401CE01CE01C80184038403030E00F800E187E9713>I<01E006100C1818
383038300070006000E000E7C0E860F030F018E018E01CE01CE01C601C601C7018301830
30186007C00E187E9713>I<40007FFE7FFC7FFC40088010801080200040004000800180
01800100030003000300030007000700070007000700070002000F197E9813>I<078018
603030201860186018601870103C303E600F8007C019F030F86038401CC00CC00CC00CC0
0C6008201018600FC00E187E9713>I<07801860303070306018E018E018E01CE01CE01C
601C603C303C185C0F9C001C00180018003870307060604021801F000E187E9713>I<60
F0F060000000000000000060F0F06004107D8F0B>I<FFFFFF80FFFFFF80000000000000
000000000000000000000000000000000000FFFFFF80FFFFFF80190A7E8D1E>61
D<007F00000180C000060030000800080010000400203E020020E1020041C08100438071
008380708087007080870070808700708087007080870070808700708083807080438070
8041C0F10020E13100203E1E0010000000080000000600038001803E00007FE000191A7E
991E>64 D<000C0000000C0000000C0000001E0000001E0000003F000000270000002700
000043800000438000004380000081C0000081C0000081C0000100E0000100E00001FFE0
00020070000200700006007800040038000400380008001C0008001C001C001E00FF00FF
C01A1A7F991D>I<FFFF000E01C00E00E00E00700E00780E00780E00780E00780E00780E
00F00E00E00E03C00FFF800E01E00E00700E00780E003C0E003C0E003C0E003C0E003C0E
00380E00780E00F00E01E0FFFF80161A7E991B>I<003F0201C0C603002E0E001E1C000E
1C0006380006780002700002700002F00000F00000F00000F00000F00000F00000700002
7000027800023800041C00041C00080E000803003001C0C0003F00171A7E991C>I<FFFF
000E01C00E00E00E00300E00380E001C0E001C0E000E0E000E0E000F0E000F0E000F0E00
0F0E000F0E000F0E000F0E000F0E000E0E000E0E001E0E001C0E00380E00380E00700E01
C0FFFF00181A7E991D>I<FFFFF00E00700E00300E00100E00180E00080E00080E00080E
04000E04000E04000E0C000FFC000E0C000E04000E04000E04000E00040E00040E00080E
00080E00080E00180E00380E0070FFFFF0161A7E991A>I<FFFFE00E00E00E00600E0020
0E00300E00100E00100E00100E04000E04000E04000E0C000FFC000E0C000E04000E0400
0E04000E00000E00000E00000E00000E00000E00000E00000E0000FFF000141A7E9919>
I<003F020001C0C60003002E000E001E001C000E001C0006003800060078000200700002
0070000200F0000000F0000000F0000000F0000000F0000000F001FFC070000E0070000E
0078000E0038000E001C000E001C000E000E000E000300160001C06600003F82001A1A7E
991E>I<FFE7FF0E00700E00700E00700E00700E00700E00700E00700E00700E00700E00
700E00700FFFF00E00700E00700E00700E00700E00700E00700E00700E00700E00700E00
700E00700E0070FFE7FF181A7E991D>I<FFE00E000E000E000E000E000E000E000E000E
000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E00FFE00B1A7F
990E>I<1FFC00E000E000E000E000E000E000E000E000E000E000E000E000E000E000E0
00E000E000E000E040E0E0E0E0E041C061801E000E1A7D9914>I<FFE07F800E001E000E
0018000E0010000E0020000E0040000E0080000E0100000E0200000E0400000E0800000E
1C00000E2E00000E4E00000E8700000F0380000E0380000E01C0000E00E0000E00E0000E
0070000E0070000E0038000E001C000E003E00FFE0FF80191A7E991E>I<FFF0000E0000
0E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E0000
0E00000E00000E00000E00200E00200E00200E00600E00400E00400E00C00E03C0FFFFC0
131A7E9918>I<FF0003FC0F0003C00F0003C00B8005C00B8005C00B8005C009C009C009
C009C009C009C008E011C008E011C008E011C0087021C0087021C0083841C0083841C008
3841C0081C81C0081C81C0081C81C0080F01C0080F01C0080F01C0080601C01C0601C0FF
861FFC1E1A7E9923>I<FE01FF0F00380F00100B80100B801009C01008E01008E0100870
10087010083810081C10081C10080E10080E100807100803900803900801D00801D00800
F00800700800700800301C0030FF8010181A7E991D>I<007F000001C1C000070070000E
0038001C001C003C001E0038000E0078000F0070000700F0000780F0000780F0000780F0
000780F0000780F0000780F0000780F000078078000F0078000F0038000E003C001E001C
001C000E0038000700700001C1C000007F0000191A7E991E>I<FFFF000E03C00E00E00E
00700E00700E00780E00780E00780E00780E00700E00700E00E00E03C00FFF000E00000E
00000E00000E00000E00000E00000E00000E00000E00000E00000E0000FFE000151A7E99
1A>I<FFFC00000E0780000E01C0000E00E0000E00F0000E00F0000E00F0000E00F0000E
00F0000E00E0000E01C0000E0780000FFC00000E0600000E0300000E0180000E01C0000E
01C0000E01C0000E01E0000E01E0000E01E0000E01E0800E00F0800E007100FFE03E0019
1A7E991C>82 D<0FC21836200E6006C006C002C002C002E00070007E003FE01FF807FC00
3E000E00070003800380038003C002C006E004D81887E0101A7E9915>I<7FFFFF00701C
0700401C0100401C0100C01C0180801C0080801C0080801C0080001C0000001C0000001C
0000001C0000001C0000001C0000001C0000001C0000001C0000001C0000001C0000001C
0000001C0000001C0000001C0000001C0000001C000003FFE000191A7F991C>I<FFE1FF
0E00380E00100E00100E00100E00100E00100E00100E00100E00100E00100E00100E0010
0E00100E00100E00100E00100E00100E00100E001006002007002003004001804000C180
003E00181A7E991D>I<FF801FC01E000F001C0006000E0004000E000400070008000700
080007000800038010000380100003C0300001C0200001C0200000E0400000E0400000E0
40000070800000708000003900000039000000390000001E0000001E0000001E0000000C
0000000C00001A1A7F991D>I<FF83FF0FF03C007801C01C007800801C007800800E0078
01000E007801000E009C010007009C020007009C020007010E020007010E020003810E04
000382070400038207040001C207080001C403880001C403880000E403900000E4039000
00E801D000007801E000007801E000007000E000007000E000003000C000002000400024
1A7F9927>I<FF801FE01E0007000E0006000F000400070008000780080003C0100001C0
300001E0200000F04000007040000078800000388000001D0000001F0000000E0000000E
0000000E0000000E0000000E0000000E0000000E0000000E0000000E0000000E000000FF
E0001B1A7F991D>89 D<FEFEC0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0
C0C0C0C0C0C0C0C0C0FEFE07257D9B0B>91 D<1830204040804080810081008100B160F9
F078F030600C0B7B9913>I<FEFE06060606060606060606060606060606060606060606
0606060606060606060606FEFE0725809B0B>I<3F8070C070E020700070007007F01C70
30707070E070E071E071E0F171FB1E3C10107E8F13>97 D<FC00001C00001C00001C0000
1C00001C00001C00001C00001C00001C00001CF8001F0E001E07001C03801C01801C01C0
1C01C01C01C01C01C01C01C01C01C01C03801C03001E07001B0C0010F000121A7F9915>
I<07F80C1C381C30087000E000E000E000E000E000E0007000300438080C1807E00E107F
8F11>I<007E00000E00000E00000E00000E00000E00000E00000E00000E00000E0003CE
000C3E00380E00300E00700E00E00E00E00E00E00E00E00E00E00E00E00E00600E00700E
00381E001C2E0007CFC0121A7F9915>I<07C01C3030187018600CE00CFFFCE000E000E0
00E0006000300438080C1807E00E107F8F11>I<01F0031807380E100E000E000E000E00
0E000E00FFC00E000E000E000E000E000E000E000E000E000E000E000E000E000E007FE0
0D1A80990C>I<0FCE187330307038703870387038303018602FC02000600070003FF03F
FC1FFE600FC003C003C003C0036006381C07E010187F8F13>I<FC00001C00001C00001C
00001C00001C00001C00001C00001C00001C00001CF8001D0C001E0E001E0E001C0E001C
0E001C0E001C0E001C0E001C0E001C0E001C0E001C0E001C0E001C0E00FF9FC0121A7F99
15>I<18003C003C001800000000000000000000000000FC001C001C001C001C001C001C
001C001C001C001C001C001C001C001C00FF80091A80990A>I<018003C003C001800000
000000000000000000000FC001C001C001C001C001C001C001C001C001C001C001C001C0
01C001C001C001C001C001C041C0E180E3007E000A2182990C>I<FC00001C00001C0000
1C00001C00001C00001C00001C00001C00001C00001C3F801C1E001C18001C10001C2000
1C40001DC0001FE0001CE0001C70001C78001C38001C1C001C1E001C1F00FF3FC0121A7F
9914>I<FC001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C00
1C001C001C001C001C001C001C001C001C00FF80091A80990A>I<FC7C1F001D8E63801E
0781C01E0781C01C0701C01C0701C01C0701C01C0701C01C0701C01C0701C01C0701C01C
0701C01C0701C01C0701C01C0701C0FF9FE7F81D107F8F20>I<FCF8001D0C001E0E001E
0E001C0E001C0E001C0E001C0E001C0E001C0E001C0E001C0E001C0E001C0E001C0E00FF
9FC012107F8F15>I<07E01C38300C700E6006E007E007E007E007E007E0076006700E38
1C1C3807E010107F8F13>I<FCF8001F0E001E07001C03801C03801C01C01C01C01C01C0
1C01C01C01C01C01C01C03801C03001E07001F0C001CF0001C00001C00001C00001C0000
1C00001C0000FF800012177F8F15>I<03C2000C2600381E00300E00700E00E00E00E00E
00E00E00E00E00E00E00E00E00700E00700E00381E001C2E0007CE00000E00000E00000E
00000E00000E00000E00007FC012177F8F14>I<FCE01D701E701E201C001C001C001C00
1C001C001C001C001C001C001C00FFC00C107F8F0F>I<1F2060E04020C020C020F0007F
003FC01FE000F080708030C030C020F0408F800C107F8F0F>I<0400040004000C000C00
1C003C00FFC01C001C001C001C001C001C001C001C001C201C201C201C201C200E400380
0B177F960F>I<FC7E001C0E001C0E001C0E001C0E001C0E001C0E001C0E001C0E001C0E
001C0E001C0E001C0E001C1E000C2E0007CFC012107F8F15>I<FF1F803C06001C04001C
04001E0C000E08000E080007100007100007900003A00003A00001C00001C00001C00000
800011107F8F14>I<FF3F9F803C0E0700380E06001C1604001C1704001E170C000E2308
000E2388000F239800074190000741D00003C1E0000380E0000380E0000180C000010040
0019107F8F1C>I<FF3F803C1C001C18000E100007200007600003C00001C00001E00003
E000027000043800083800181C00381E00FC3FC012107F8F14>I<FF1F803C06001C0400
1C04001E0C000E08000E080007100007100007900003A00003A00001C00001C00001C000
008000008000010000010000E10000E20000E4000078000011177F8F14>I<7FF8607040
7040E041C041C00380070007000E081C081C08381070107030FFF00D107F8F11>I<FFFF
C01201808913>I E /Fs 11 121 df<008000008000008000008000008000008000F087
801FFC0007F00001C0000360000220000630000C18000808001004001110818E11>63
D<7C000C00180018001800180030003700388030C060C060C060C060C0C180C180C10043
00660038000A147E930F>98 D<007C000C0018001800180018003007B00C701070306060
6060606060C0C0C0C8C0C841C862D03C700E147E9311>100 D<07800C40102030406040
7F8060004000C0004020604021801E000B0D7E8C10>I<06070600000000384C4C8C9818
1830326262643808147F930C>105 D<0060007000600000000000000000038004C00460
08C008C000C000C0018001800180018003000300030003006600E600CC0078000C1A8193
0E>I<3E0006000C000C000C000C001800187018B819383230340038003E006300631063
106310C320C1C00D147E9312>I<7C0C181818183030303060606060C0D0D0D0D0600614
7E930A>I<30F87C00590C86004E0D06009C0E0600980C0600180C0600180C060030180C
0030180C8030181880301818806030190060300E00190D7F8C1D>I<30F8590C4E0C9C0C
980C180C180C30183019303130316032601C100D7F8C15>I<0E3C13CE238E430C430003
00030006000608C608E610CA2071C00F0D7F8C13>120 D E /Ft
77 127 df<007E1F0001C1B1800303E3C00703C3C00E03C1800E01C0000E01C0000E01C0
000E01C0000E01C0000E01C000FFFFFC000E01C0000E01C0000E01C0000E01C0000E01C0
000E01C0000E01C0000E01C0000E01C0000E01C0000E01C0000E01C0000E01C0000E01C0
000E01C0000E01C0007F87FC001A1D809C18>11 D<007E0001C1800301800703C00E03C0
0E01800E00000E00000E00000E00000E0000FFFFC00E01C00E01C00E01C00E01C00E01C0
0E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C07F87F8
151D809C17>I<007FC001C1C00303C00703C00E01C00E01C00E01C00E01C00E01C00E01
C00E01C0FFFFC00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01C00E01
C00E01C00E01C00E01C00E01C00E01C00E01C07FCFF8151D809C17>I<003F07E00001C0
9C18000380F018000701F03C000E01E03C000E00E018000E00E000000E00E000000E00E0
00000E00E000000E00E00000FFFFFFFC000E00E01C000E00E01C000E00E01C000E00E01C
000E00E01C000E00E01C000E00E01C000E00E01C000E00E01C000E00E01C000E00E01C00
0E00E01C000E00E01C000E00E01C000E00E01C000E00E01C007FC7FCFF80211D809C23>
I<60F0F0F0F0F0F0F060606060606060606060606060000000000060F0F060041E7C9D0C
>33 D<6060F0F0F8F86868080808080808101010102020404080800D0C7F9C15>I<0F00
00C0188000C030600380703807006027FB00E0100600E0100C00E0100C00E0101800E010
1800E0103000E0106000602060007020C00030418000188180000F0303C0000606200006
0C10000C1C08001818080018380400303804006038040060380400C0380400C038040180
38040300180803001C0806000C100C000620040003C01E217E9E23>37
D<60F0F8680808081010204080050C7C9C0C>39 D<004000800100020006000C000C0018
001800300030007000600060006000E000E000E000E000E000E000E000E000E000E000E0
00E000600060006000700030003000180018000C000C00060002000100008000400A2A7D
9E10>I<800040002000100018000C000C000600060003000300038001800180018001C0
01C001C001C001C001C001C001C001C001C001C001C00180018001800380030003000600
06000C000C00180010002000400080000A2A7E9E10>I<00060000000600000006000000
060000000600000006000000060000000600000006000000060000000600000006000000
060000FFFFFFE0FFFFFFE000060000000600000006000000060000000600000006000000
0600000006000000060000000600000006000000060000000600001B1C7E9720>43
D<60F0F0701010101020204080040C7C830C>I<FFE0FFE00B0280890E>I<60F0F0600404
7C830C>I<03C00C301818300C300C700E60066006E007E007E007E007E007E007E007E0
07E007E007E007E007E00760066006700E300C300C18180C3007E0101D7E9B15>48
D<030007003F00C700070007000700070007000700070007000700070007000700070007
00070007000700070007000700070007000F80FFF80D1C7C9B15>I<07C01830201C400C
400EF00FF80FF807F8077007000F000E000E001C001C00380070006000C0018003000601
0C01180110023FFE7FFEFFFE101C7E9B15>I<07E01830201C201C781E780E781E381E00
1C001C00180030006007E00030001C001C000E000F000F700FF80FF80FF80FF00E401C20
1C183007E0101D7E9B15>I<000C00000C00001C00003C00003C00005C0000DC00009C00
011C00031C00021C00041C000C1C00081C00101C00301C00201C00401C00C01C00FFFFC0
001C00001C00001C00001C00001C00001C00001C0001FFC0121C7F9B15>I<300C3FF83F
F03FC020002000200020002000200023E024302818301C200E000E000F000F000F600FF0
0FF00FF00F800E401E401C2038187007C0101D7E9B15>I<00F0030C06040C0E181E301E
300C700070006000E3E0E430E818F00CF00EE006E007E007E007E007E007600760077006
300E300C18180C3003E0101D7E9B15>I<4000007FFF807FFF007FFF0040020080040080
040080080000100000100000200000600000400000C00000C00001C00001800001800003
8000038000038000038000078000078000078000078000078000078000030000111D7E9B
15>I<03E00C301008200C20066006600660067006780C3E083FB01FE007F007F818FC30
7E601E600FC007C003C003C003C00360026004300C1C1007E0101D7E9B15>I<03C00C30
1818300C700C600EE006E006E007E007E007E007E0076007700F300F18170C2707C70006
0006000E300C780C78187010203030C00F80101D7E9B15>I<60F0F06000000000000000
00000060F0F06004127C910C>I<7FFFFFC0FFFFFFE00000000000000000000000000000
000000000000000000000000000000000000FFFFFFE07FFFFFC01B0C7E8F20>61
D<000600000006000000060000000F0000000F0000000F00000017800000178000001780
000023C0000023C0000023C0000041E0000041E0000041E0000080F0000080F0000180F8
000100780001FFF80003007C0002003C0002003C0006003E0004001E0004001E000C001F
001E001F00FF80FFF01C1D7F9C1F>65 D<FFFFC00F00F00F00380F003C0F001C0F001E0F
001E0F001E0F001E0F001C0F003C0F00780F01F00FFFE00F00780F003C0F001E0F000E0F
000F0F000F0F000F0F000F0F000F0F001E0F001E0F003C0F0078FFFFE0181C7E9B1D>I<
001F808000E0618001801980070007800E0003801C0003801C0001803800018078000080
7800008070000080F0000000F0000000F0000000F0000000F0000000F0000000F0000000
F0000000700000807800008078000080380000801C0001001C0001000E00020007000400
0180080000E03000001FC000191E7E9C1E>I<FFFFC0000F00F0000F003C000F000E000F
0007000F0007000F0003800F0003C00F0001C00F0001C00F0001E00F0001E00F0001E00F
0001E00F0001E00F0001E00F0001E00F0001E00F0001C00F0001C00F0003C00F0003800F
0007800F0007000F000E000F001C000F007000FFFFC0001B1C7E9B20>I<FFFFFC0F003C
0F000C0F00040F00040F00060F00020F00020F02020F02000F02000F02000F06000FFE00
0F06000F02000F02000F02000F02010F00010F00020F00020F00020F00060F00060F000C
0F003CFFFFFC181C7E9B1C>I<FFFFF80F00780F00180F00080F00080F000C0F00040F00
040F02040F02000F02000F02000F06000FFE000F06000F02000F02000F02000F02000F00
000F00000F00000F00000F00000F00000F00000F8000FFF800161C7E9B1B>I<001F8080
00E0618001801980070007800E0003801C0003801C000180380001807800008078000080
70000080F0000000F0000000F0000000F0000000F0000000F0000000F000FFF0F0000F80
700007807800078078000780380007801C0007801C0007800E00078007000B8001801180
00E06080001F80001C1E7E9C21>I<FFF3FFC00F003C000F003C000F003C000F003C000F
003C000F003C000F003C000F003C000F003C000F003C000F003C000F003C000FFFFC000F
003C000F003C000F003C000F003C000F003C000F003C000F003C000F003C000F003C000F
003C000F003C000F003C000F003C00FFF3FFC01A1C7E9B1F>I<FFF00F000F000F000F00
0F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F00
0F000F000F000F00FFF00C1C7F9B0F>I<FFF8000F80000F00000F00000F00000F00000F
00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F
00080F00080F00080F00180F00180F00100F00300F00700F01F0FFFFF0151C7E9B1A>76
D<FF8000FF800F8000F8000F8000F8000BC00178000BC00178000BC001780009E0027800
09E002780008F004780008F004780008F004780008780878000878087800087808780008
3C107800083C107800083C107800081E207800081E207800081E207800080F407800080F
40780008078078000807807800080780780008030078001C03007800FF8307FF80211C7E
9B26>I<FF007FC00F800E000F8004000BC0040009E0040009E0040008F0040008F80400
08780400083C0400083C0400081E0400080F0400080F0400080784000807C4000803C400
0801E4000801E4000800F40008007C0008007C0008003C0008003C0008001C0008000C00
1C000C00FF8004001A1C7E9B1F>I<003F800000E0E0000380380007001C000E000E001C
0007003C00078038000380780003C0780003C0700001C0F00001E0F00001E0F00001E0F0
0001E0F00001E0F00001E0F00001E0F00001E0700001C0780003C0780003C0380003803C
0007801C0007000E000E0007001C000380380000E0E000003F80001B1E7E9C20>I<FFFF
800F00E00F00780F003C0F001C0F001E0F001E0F001E0F001E0F001E0F001C0F003C0F00
780F00E00FFF800F00000F00000F00000F00000F00000F00000F00000F00000F00000F00
000F00000F0000FFF000171C7E9B1C>I<FFFF00000F01E0000F0078000F003C000F001C
000F001E000F001E000F001E000F001E000F001C000F003C000F0078000F01E0000FFF00
000F03C0000F00E0000F00F0000F0078000F0078000F0078000F0078000F0078000F0078
000F0078100F0078100F0038100F003C20FFF01C20000007C01C1D7E9B1F>82
D<07E0801C1980300580700380600180E00180E00080E00080E00080F00000F800007C00
007FC0003FF8001FFE0007FF0000FF80000F800007C00003C00001C08001C08001C08001
C0C00180C00180E00300D00200CC0C0083F800121E7E9C17>I<7FFFFFC0700F01C0600F
00C0400F0040400F0040C00F0020800F0020800F0020800F0020000F0000000F0000000F
0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000000F
0000000F0000000F0000000F0000000F0000000F0000001F800003FFFC001B1C7F9B1E>
I<FFF07FC00F000E000F0004000F0004000F0004000F0004000F0004000F0004000F0004
000F0004000F0004000F0004000F0004000F0004000F0004000F0004000F0004000F0004
000F0004000F0004000F0004000F0004000700080007800800038010000180100000C020
000070C000001F00001A1D7E9B1F>I<FFE0FFE0FF1F001F003C1E001E00180F001F0010
0F001F00100F001F001007801F00200780278020078027802003C027804003C043C04003
C043C04003E043C04001E081E08001E081E08001E081E08000F100F10000F100F10000F1
00F100007900FA00007A007A00007A007A00003E007C00003C003C00003C003C00003C00
3C00001800180000180018000018001800281D7F9B2B>87 D<FEFEC0C0C0C0C0C0C0C0C0
C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0FEFE07297C9E0C>
91 D<08081010202040404040808080808080B0B0F8F8787830300D0C7A9C15>I<FEFE06
060606060606060606060606060606060606060606060606060606060606060606060606
FEFE0729809E0C>I<0C0012002100408080400A057B9B15>I<1FC000307000783800781C
00301C00001C00001C0001FC000F1C00381C00701C00601C00E01C40E01C40E01C40603C
40304E801F870012127E9115>97 D<FC00001C00001C00001C00001C00001C00001C0000
1C00001C00001C00001C00001C7C001D86001E03001C01801C01C01C00C01C00E01C00E0
1C00E01C00E01C00E01C00E01C00C01C01C01C01801E030019060010F800131D7F9C17>
I<07E00C301878307870306000E000E000E000E000E000E00060007004300418080C3007
C00E127E9112>I<003F0000070000070000070000070000070000070000070000070000
070000070003E7000C1700180F00300700700700600700E00700E00700E00700E00700E0
0700E00700600700700700300700180F000C370007C7E0131D7E9C17>I<03E00C301818
300C700E6006E006FFFEE000E000E000E00060007002300218040C1803E00F127F9112>
I<00F8018C071E061E0E0C0E000E000E000E000E000E00FFE00E000E000E000E000E000E
000E000E000E000E000E000E000E000E000E000E007FE00F1D809C0D>I<00038003C4C0
0C38C01C3880181800381C00381C00381C00381C001818001C38000C300013C000100000
3000001800001FF8001FFF001FFF803003806001C0C000C0C000C0C000C0600180300300
1C0E0007F800121C7F9215>I<FC00001C00001C00001C00001C00001C00001C00001C00
001C00001C00001C00001C7C001C87001D03001E03801C03801C03801C03801C03801C03
801C03801C03801C03801C03801C03801C03801C03801C0380FF9FF0141D7F9C17>I<18
003C003C0018000000000000000000000000000000FC001C001C001C001C001C001C001C
001C001C001C001C001C001C001C001C001C00FF80091D7F9C0C>I<00C001E001E000C0
00000000000000000000000000000FE000E000E000E000E000E000E000E000E000E000E0
00E000E000E000E000E000E000E000E000E000E060E0F0C0F1C061803E000B25839C0D>
I<FC00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C3F
C01C0F001C0C001C08001C10001C20001C40001CE0001DE0001E70001C78001C38001C3C
001C1C001C0E001C0F001C0F80FF9FE0131D7F9C16>I<FC001C001C001C001C001C001C
001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C
001C001C001C00FF80091D7F9C0C>I<FC7E07E0001C838838001D019018001E01E01C00
1C01C01C001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C001C
01C01C001C01C01C001C01C01C001C01C01C001C01C01C001C01C01C00FF8FF8FF802112
7F9124>I<FC7C001C87001D03001E03801C03801C03801C03801C03801C03801C03801C
03801C03801C03801C03801C03801C03801C0380FF9FF014127F9117>I<03F0000E1C00
180600300300700380600180E001C0E001C0E001C0E001C0E001C0E001C0600180700380
3003001806000E1C0003F00012127F9115>I<FC7C001D86001E03001C01801C01C01C00
C01C00E01C00E01C00E01C00E01C00E01C00E01C01C01C01C01C01801E03001D06001CF8
001C00001C00001C00001C00001C00001C00001C0000FF8000131A7F9117>I<03C1000C
3300180B00300F00700700700700E00700E00700E00700E00700E00700E0070060070070
0700300F00180F000C370007C70000070000070000070000070000070000070000070000
3FE0131A7E9116>I<FCE01D301E781E781C301C001C001C001C001C001C001C001C001C
001C001C001C00FFC00D127F9110>I<1F9030704030C010C010E010F8007F803FE00FF0
00F880388018C018C018E010D0608FC00D127F9110>I<04000400040004000C000C001C
003C00FFE01C001C001C001C001C001C001C001C001C001C101C101C101C101C100C100E
2003C00C1A7F9910>I<FC1F801C03801C03801C03801C03801C03801C03801C03801C03
801C03801C03801C03801C03801C03801C07800C07800E1B8003E3F014127F9117>I<FF
07E03C03801C01001C01000E02000E020007040007040007040003880003880003D80001
D00001D00000E00000E00000E00000400013127F9116>I<FF3FCFE03C0F03801C070180
1C0701001C0B01000E0B82000E0B82000E1182000711C4000711C4000720C40003A0E800
03A0E80003C0680001C0700001C0700001803000008020001B127F911E>I<7F8FF00F03
800F030007020003840001C80001D80000F00000700000780000F800009C00010E00020E
000607000403801E07C0FF0FF81512809116>I<FF07E03C03801C01001C01000E02000E
020007040007040007040003880003880003D80001D00001D00000E00000E00000E00000
4000004000008000008000F08000F10000F300006600003C0000131A7F9116>I<7FFC70
386038407040F040E041C003C0038007000F040E041C043C0C380870087038FFF80E127F
9112>I<FFFFF01401808B15>I<1C043F0843F080E00E047D9B15>126
D E /Fu 23 122 df<0001FF0000001FFFC000007F81E00000FC01E00001F807F00003F8
07F00007F007F00007F007F00007F007F00007F007F00007F001C00007F000000007F000
000007F000000007F03FF800FFFFFFF800FFFFFFF800FFFFFFF80007F003F80007F003F8
0007F003F80007F003F80007F003F80007F003F80007F003F80007F003F80007F003F800
07F003F80007F003F80007F003F80007F003F80007F003F80007F003F80007F003F80007
F003F80007F003F80007F003F80007F003F80007F003F8007FFF3FFF807FFF3FFF807FFF
3FFF80212A7FA925>12 D<00007FE0030007FFFC07001FFFFF0F007FF00F9F00FF0001FF
01FC0000FF03F800007F07F000003F0FE000001F1FC000001F1FC000000F3F8000000F3F
800000077F800000077F800000077F00000000FF00000000FF00000000FF00000000FF00
000000FF00000000FF00000000FF00000000FF00000000FF000000007F000000007F8000
00007F800000073F800000073F800000071FC00000071FC000000E0FE000000E07F00000
1C03F800003C01FC00007800FF0001F0007FF007C0001FFFFF800007FFFE0000007FF000
28297CA831>67 D<FFFFF00FFFFFFFFFF00FFFFFFFFFF00FFFFF03FC00003FC003FC0000
3FC003FC00003FC003FC00003FC003FC00003FC003FC00003FC003FC00003FC003FC0000
3FC003FC00003FC003FC00003FC003FC00003FC003FC00003FC003FC00003FC003FC0000
3FC003FC00003FC003FFFFFFFFC003FFFFFFFFC003FFFFFFFFC003FC00003FC003FC0000
3FC003FC00003FC003FC00003FC003FC00003FC003FC00003FC003FC00003FC003FC0000
3FC003FC00003FC003FC00003FC003FC00003FC003FC00003FC003FC00003FC003FC0000
3FC003FC00003FC003FC00003FC003FC00003FC0FFFFF00FFFFFFFFFF00FFFFFFFFFF00F
FFFF30297EA835>72 D<FFFFFCFFFFFCFFFFFC01FE0001FE0001FE0001FE0001FE0001FE
0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE
0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE0001FE
0001FE0001FE0001FE0001FE0001FE00FFFFFCFFFFFCFFFFFC16297FA819>I<FFFFFFF8
00FFFFFFFF00FFFFFFFFC003FC003FE003FC0007F003FC0003F803FC0003FC03FC0001FC
03FC0001FE03FC0001FE03FC0001FE03FC0001FE03FC0001FE03FC0001FE03FC0001FE03
FC0001FC03FC0003FC03FC0003F803FC0007F003FC003FE003FFFFFF8003FFFFFE0003FC
00000003FC00000003FC00000003FC00000003FC00000003FC00000003FC00000003FC00
000003FC00000003FC00000003FC00000003FC00000003FC00000003FC00000003FC0000
0003FC000000FFFFF00000FFFFF00000FFFFF0000027297EA82E>80
D<FFFFF0007FFFFFFFF0007FFFFFFFF0007FFF03FE000001C001FE0000038001FE000003
8000FF0000070000FF0000070000FF80000F00007F80000E00007FC0000E00003FC0001C
00003FE0001C00001FE0003800001FE0003800001FF0007800000FF0007000000FF800F0
000007F800E0000007FC00E0000003FC01C0000003FC01C0000003FE03C0000001FE0380
000001FF0780000000FF0700000000FF87000000007F8E000000007F8E000000007FDE00
0000003FDC000000003FFC000000001FF8000000001FF8000000000FF0000000000FF000
0000000FF00000000007E00000000007E00000000003C00000000003C0000030297FA833
>86 D<03FF80000FFFF0001F01FC003F80FE003F807F003F803F003F803F801F003F8000
003F8000003F8000003F8000003F80003FFF8001FC3F800FE03F801F803F803F003F807E
003F80FC003F80FC003F80FC003F80FC003F80FC005F807E00DF803F839FFC1FFE0FFC03
F803FC1E1B7E9A21>97 D<FFE00000FFE00000FFE000000FE000000FE000000FE000000F
E000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000F
E1FE000FE7FF800FFE07E00FF803F00FF001F80FE000FC0FE000FC0FE0007E0FE0007E0F
E0007F0FE0007F0FE0007F0FE0007F0FE0007F0FE0007F0FE0007F0FE0007F0FE0007E0F
E0007E0FE0007E0FE000FC0FE000FC0FF001F80FF803F00F9C0FE00F0FFF800E01FC0020
2A7EA925>I<003FF00001FFFC0003F03E000FC07F001F807F003F007F003F007F007F00
3E007E0000007E000000FE000000FE000000FE000000FE000000FE000000FE000000FE00
00007E0000007E0000007F0000003F0003803F8003801F8007000FE00E0003F83C0001FF
F800003FC000191B7E9A1E>I<00007FF000007FF000007FF0000007F0000007F0000007
F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007F0000007
F0003F87F001FFF7F007F03FF00FC00FF01F8007F03F0007F03F0007F07E0007F07E0007
F07E0007F0FE0007F0FE0007F0FE0007F0FE0007F0FE0007F0FE0007F0FE0007F0FE0007
F07E0007F07E0007F03F0007F03F0007F01F800FF00FC01FF007E07FFF01FFE7FF007F87
FF202A7EA925>I<003FC00001FFF00003E07C000F803E001F801F001F001F003F000F80
7E000F807E000FC07E000FC0FE0007C0FE0007C0FFFFFFC0FFFFFFC0FE000000FE000000
FE0000007E0000007E0000007F0000003F0001C01F0001C00F80038007C0070003F01E00
00FFFC00003FE0001A1B7E9A1F>I<FFE00000FFE00000FFE000000FE000000FE000000F
E000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000FE000000F
E000000FE07E000FE1FF800FE30FC00FE40FE00FE807E00FF807F00FF007F00FF007F00F
E007F00FE007F00FE007F00FE007F00FE007F00FE007F00FE007F00FE007F00FE007F00F
E007F00FE007F00FE007F00FE007F00FE007F00FE007F00FE007F0FFFE3FFFFFFE3FFFFF
FE3FFF202A7DA925>104 D<07000F801FC03FE03FE03FE01FC00F800700000000000000
0000000000000000FFE0FFE0FFE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE0
0FE00FE00FE00FE00FE00FE00FE00FE00FE00FE0FFFEFFFEFFFE0F2B7EAA12>I<FFE0FF
E0FFE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00F
E00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00FE00F
E00FE0FFFEFFFEFFFE0F2A7EA912>108 D<FFC07F001FC000FFC1FFC07FF000FFC307E0
C1F8000FC407F101FC000FC803F200FC000FD803FE00FE000FD003FC00FE000FD003FC00
FE000FE003F800FE000FE003F800FE000FE003F800FE000FE003F800FE000FE003F800FE
000FE003F800FE000FE003F800FE000FE003F800FE000FE003F800FE000FE003F800FE00
0FE003F800FE000FE003F800FE000FE003F800FE000FE003F800FE000FE003F800FE000F
E003F800FE00FFFE3FFF8FFFE0FFFE3FFF8FFFE0FFFE3FFF8FFFE0331B7D9A38>I<FFC0
7E00FFC1FF80FFC30FC00FC40FE00FC807E00FD807F00FD007F00FD007F00FE007F00FE0
07F00FE007F00FE007F00FE007F00FE007F00FE007F00FE007F00FE007F00FE007F00FE0
07F00FE007F00FE007F00FE007F00FE007F00FE007F0FFFE3FFFFFFE3FFFFFFE3FFF201B
7D9A25>I<003FE00001FFFC0003F07E000FC01F801F800FC03F0007E03F0007E07E0003
F07E0003F07E0003F0FE0003F8FE0003F8FE0003F8FE0003F8FE0003F8FE0003F8FE0003
F8FE0003F87E0003F07E0003F03F0007E03F0007E01F800FC00FC01F8007F07F0001FFFC
00003FE0001D1B7E9A22>I<FFE1FE00FFE7FF80FFFE0FE00FF803F00FF001F80FE001FC
0FE000FC0FE000FE0FE000FE0FE0007F0FE0007F0FE0007F0FE0007F0FE0007F0FE0007F
0FE0007F0FE0007F0FE0007E0FE000FE0FE000FE0FE000FC0FE001FC0FF001F80FF803F0
0FFC0FE00FEFFF800FE1FC000FE000000FE000000FE000000FE000000FE000000FE00000
0FE000000FE000000FE00000FFFE0000FFFE0000FFFE000020277E9A25>I<FFC3E0FFC7
F8FFCC7C0FD8FE0FD0FE0FD0FE0FF0FE0FE07C0FE0000FE0000FE0000FE0000FE0000FE0
000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE0000FE000FFFF00FFFF
00FFFF00171B7E9A1B>114 D<03FE300FFFF03E03F07800F07000F0F00070F00070F800
70FE0000FFE0007FFF007FFFC03FFFE01FFFF007FFF800FFF80007FC0000FCE0007CE000
3CF0003CF00038F80038FC0070FF01E0E7FFC0C1FF00161B7E9A1B>I<00700000700000
700000700000F00000F00000F00001F00003F00003F00007F0001FFFE0FFFFE0FFFFE007
F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007F00007
F00007F07007F07007F07007F07007F07007F07007F07003F0E001F8C000FFC0003F0014
267FA51A>I<FFFE07FFFFFE07FFFFFE07FF07F000E007F000E007F801E003F801C003F8
01C001FC038001FC038001FE078000FE070000FF0F00007F0E00007F0E00003F9C00003F
9C00003FFC00001FF800001FF800000FF000000FF000000FF0000007E0000007E0000003
C0000003C000201B7F9A23>118 D<FFFE07FFFFFE07FFFFFE07FF07F000E007F000E007
F801E003F801C003F801C001FC038001FC038001FE078000FE070000FF0F00007F0E0000
7F0E00003F9C00003F9C00003FFC00001FF800001FF800000FF000000FF0000007F00000
07E0000007E0000003C0000003C000000380000003800000078000380700007C070000FE
0E0000FE0E0000FE1C0000FE3800007C7000003FE000000F80000020277F9A23>121
D E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 300dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 254 194 a Fu(Impro)n(v)n(ed)24 b(Probabilistic)h(V)-6
b(eri\014cation)24 b(b)n(y)f(Hash)726 263 y(Compaction)616
408 y Ft(Ulric)o(h)14 b(Stern)837 393 y Fs(?)870 408
y Ft(and)g(Da)o(vid)f(L.)g(Dill)443 495 y Fr(Departmen)o(t)h(of)f
(Computer)g(Science,)h(Stanford)g(Univ)o(ersit)o(y)m(,)737
540 y(Stanford,)f(CA)g(94305)597 602 y Fq(f)p Fr(uli@rutabaga,)c
(dill@cs)p Fq(g)p Fr(.stanford)q(.edu)301 766 y Fp(Abstract.)22
b Fr(W)m(e)14 b(presen)o(t)h(and)f(analyze)i(a)e(probabilisti)q(c)j
(metho)q(d)d(for)g(v)o(eri\014ca-)301 811 y(tion)c(b)o(y)f(explicit)j
(state)d(en)o(umeration,)h(whic)o(h)g(impro)o(v)o(es)h(on)e(the)g
(\\hashcompact")301 857 y(metho)q(d)h(of)f(W)m(olp)q(er)i(and)f(Lero)o
(y)m(.)f(The)g(hashcompact)i(metho)q(d)f(main)o(tains)i(a)d(hash)301
903 y(table)14 b(in)g(whic)o(h)g(compressed)g(v)n(alues)g(for)f(states)
g(instead)i(of)e(full)h(state)f(descrip-)301 948 y(tors)f(are)f
(stored.)h(This)h(metho)q(d)f(sa)o(v)o(es)g(space)h(but)f(allo)o(ws)h
(a)e(non-zero)i(probabil-)301 994 y(it)o(y)j(of)g(omitting)i(states)e
(during)h(v)o(eri\014cation,)h(whic)o(h)f(ma)o(y)f(cause)h(v)o
(eri\014cation)301 1040 y(to)c(miss)g(design)i(errors)e(\(i.e.)g(v)o
(eri\014cation)j(ma)o(y)d(pro)q(duce)h(\\false)g(p)q(ositiv)o(es"\).)
301 1085 y(Our)j(metho)q(d)g(impro)o(v)o(es)i(on)e(W)m(olp)q(er)h(and)g
(Lero)o(y's)f(b)o(y)g(calculating)j(the)d(hash)301 1131
y(and)g(compressed)h(v)n(alues)g(indep)q(enden)o(tl)q(y)m(,)h(and)f(b)o
(y)f(using)h(a)f(sp)q(eci\014c)h(hashing)301 1177 y(sc)o(heme)h(that)f
(requires)i(a)e(lo)o(w)h(n)o(um)o(b)q(er)g(of)f(prob)q(es)h(in)h(the)e
(hash)h(table.)g(The)301 1222 y(result)14 b(is)g(a)g(large)h(reduction)
g(in)f(the)g(probabilit)o(y)j(of)c(omitting)j(a)d(state.)g(Hence,)301
1268 y(w)o(e)j(can)i(ac)o(hiev)o(e)g(a)f(giv)o(en)i(upp)q(er)f(b)q
(ound)g(on)g(the)f(probabili)q(t)o(y)j(of)c(omitting)j(a)301
1314 y(state)12 b(using)i(few)o(er)e(bits)h(p)q(er)g(compressed)h
(state.)e(F)m(or)g(example,)i(w)o(e)e(can)h(reduce)301
1359 y(the)h(n)o(um)o(b)q(er)i(of)e(b)o(ytes)h(stored)g(for)g(eac)o(h)g
(state)f(from)h(the)f(eigh)o(t)i(recommended)301 1405
y(b)o(y)c(W)m(olp)q(er)i(and)f(Lero)o(y)f(to)h(only)g
Fo(\014ve)p Fr(,)e(and)h(still)j(en)o(umerate)e(state)f(spaces)h(of)f
(up)301 1451 y(to)k(80)g(million)j(reac)o(hable)f(states)e(while)h(k)o
(eeping)h(the)e(probabili)q(t)o(y)j(of)c(missing)301
1496 y(ev)o(en)e(one)h(state)f(to)g(less)h(than)f(0.13\045.)301
1542 y(The)c(new)g(v)o(eri\014cation)i(sc)o(heme)f(w)o(as)f(tried)h(on)
f(some)g(large,)h(industrial)i(examples.)301 1588 y(The)i(results)h
(predicted)g(b)o(y)f(the)g(theoretical)i(analysis)g(w)o(ere)e
(con\014rmed)h(b)o(y)f(the)301 1633 y(outcomes)19 b(of)f(these)g
(examples.)i(W)m(e)e(also)h(discuss)h(some)f(practical)h(issues)f(in)
301 1679 y(c)o(ho)q(osing)i(the)e(n)o(um)o(b)q(er)g(of)g(bits)h(for)e
(the)h(compressed)i(state)e(represen)o(tation,)301 1725
y(along)14 b(with)g(some)f(of)g(our)g(exp)q(eriences)i(in)f(implemen)o
(ting)i(the)d(sc)o(heme.)183 1864 y Fn(1)56 b(In)n(tro)r(duction)183
1961 y Ft(Complex)12 b(proto)q(cols)i(are)h(often)f(v)o(eri\014ed)h(b)o
(y)f(examining)e(all)h(reac)o(hable)h(proto)q(col)g(states)183
2011 y(from)f(a)h(set)i(of)f(p)q(ossible)g(start)g(states.)h(This)f
Fm(r)n(e)n(achability)g(analysis)g Ft(can)g(b)q(e)h(done)f(using)183
2061 y(t)o(w)o(o)d(di\013eren)o(t)i(metho)q(ds:)e(The)h(states)h(can)f
(b)q(e)g Fm(explicitly)g(enumer)n(ate)n(d,)g Ft(b)o(y)g(storing)f(them)
183 2111 y(individually)g(in)i(a)g(table,)g(or)g(a)g
Fm(symb)n(olic)h Ft(metho)q(d)e(can)i(b)q(e)g(used,)g(suc)o(h)g(as)g
(represen)o(ting)183 2160 y(the)f(reac)o(hable)h(state)f(space)h(with)f
(a)f(binary)h(decision)g(diagram)d(\(BDD\))i([2)o(].)245
2210 y(The)h(biggest)f(obstacle)h(of)f(b)q(oth)h(metho)q(ds)f(is)g(the)
h(often)f(unmanageably)f(h)o(uge)h(n)o(um-)183 2260 y(b)q(er)i(of)f
(reac)o(hable)h(states)h({)e(the)h(\\state)g(explosion)f(problem".)f
(Sym)o(b)q(olic)f(metho)q(ds)i(can)183 2310 y(alleviate)g(the)i(state)h
(explosion)e(problem)f(in)h(some)g(cases.)h(Ho)o(w)o(ev)o(er,)g(in)f
(researc)o(h)i(done)p 183 2343 237 2 v 190 2370 a Fl(?)221
2386 y Fr(Ulric)o(h)e(Stern)g(w)o(as)e(supp)q(orted)j(during)f(this)g
(researc)o(h)f(b)o(y)h(a)f(sc)o(holarship)i(from)e(the)g(German)221
2432 y(Academic)g(Exc)o(hange)g(Service)h(\(D)o(AAD-Doktorandenstip)q
(end)q(iu)q(m)g(HSP-I)q(I\).)893 2556 y Ft(1)p eop
%%Page: 2 2
2 1 bop 340 194 a Ft(in)16 b(our)g(group)g(for)g(some)g(t)o(yp)q(es)h
(of)e(industrial)h(proto)q(cols,)g(explicit)f(state)i(en)o(umeration)
340 244 y(has)d(out-p)q(erformed)g(the)g(sym)o(b)q(olic)e(approac)o(h)h
([10)o(].)403 303 y(In)18 b(explicit)h(state)g(en)o(umeration)f
(algorithms,)e(a)j(state)g(table)g(is)g(main)o(tained)d(that)340
352 y(will)d(ev)o(en)o(tually)h(hold)g(all)f(reac)o(hable)i(states)h
(of)e(the)h(proto)q(col)f(under)i(v)o(eri\014cation.)d(This)340
402 y(state)g(table)e(is)h(usually)f(implem)o(en)o(ted)f(as)i(a)f(hash)
h(table.)f(In)g(practice,)i(the)f(total)f(memory)340
452 y(a)o(v)n(ailable)h(for)i(the)h(hash)f(table)g(is)g(the)h(limiting)
c(resource)16 b(in)d(v)o(eri\014cation.)h(Therefore,)h(it)340
502 y(is)i(desirable)f(to)h(use)g(the)g(most)e(compact)h(represen)o
(tation)i(for)e(this)g(table.)g(The)h(proba-)340 552
y(bilistic)g(v)o(eri\014cation)h(metho)q(d)f(presen)o(ted)i(and)f
(analyzed)g(in)f(this)h(pap)q(er)g(impro)o(v)o(es)f(on)340
601 y(W)m(olp)q(er)c(and)g(Lero)o(y's)g(\\hashcompact")g(metho)q(d)e
([16)o(],)i(whic)o(h)g(reduces)i(the)f(memory)d(re-)340
651 y(quiremen)o(ts)j(for)g(the)h(state)g(table.)f(The)g(hashcompact)g
(metho)q(d)f(w)o(as,)h(in)g(turn,)g(inspired)340 701
y(b)o(y)g(Holzmann's)e(sup)q(ertrace)k(algorithm)10 b([9].)403
760 y(The)k(basic)f(sup)q(ertrace)j(algorithm)11 b(main)o(tains)g(a)i
(h)o(uge)g(table)h(of)f(bits)g(whic)o(h)h(are)f(ini-)340
810 y(tially)g(set)i(to)f(zero.)g(When)g(a)g(state)h(is)f(inserted)h
(in)o(to)f(the)g(table,)g(the)h(bit)e(corresp)q(onding)340
860 y(to)e(the)h(hash)f(v)n(alue)f(of)g(the)h(state)h(is)f(set)g(to)g
(one.)g(Whenev)o(er)h(t)o(w)o(o)e(states)i(hash)f(to)g(the)g(same)340
910 y(lo)q(cation,)h(they)h(are)g(assumed)f(to)h(b)q(e)g(the)g(same.)e
(F)m(or)i(a)f(large)g(n)o(um)o(b)q(er)g(of)g(states,)h(it)g(is)f(al-)
340 959 y(most)g(certain)g(that)h(t)o(w)o(o)f(distinct)g(states)i(will)
d(hash)h(to)h(the)f(same)g(lo)q(cation.)f(This)h(results)340
1009 y(in)h(the)i Fm(omission)h Ft(of)d(the)h(second)h(state)f(and)f({)
h(since)g(the)g(searc)o(h)h(algorithm)c(bac)o(ktrac)o(ks)340
1059 y(when)i(it)f(\014nds)h(a)f(state)h(that)f(has)h(b)q(een)g(searc)o
(hed)h(already)e({)g(ma)o(y)e(p)q(oten)o(tially)h(cause)j(the)340
1109 y(omission)e(of)h(all)g(successor)j(states)f(of)f(the)g(omitted)e
(state.)j(Therefore,)f(although)f(sup)q(er-)340 1159
y(trace)i(in)o(tuitiv)o(ely)e(seems)h(to)g(explore)h(a)f(high)f(p)q
(ercen)o(tage)j(of)d(the)i(reac)o(hable)g(states)g(of)f(a)340
1208 y(proto)q(col)e(if)e(the)i(n)o(um)o(b)q(er)f(of)g(bits)g(in)g(the)
h(table)f(is)h(bigger)f(than)g(the)h(n)o(um)o(b)q(er)f(of)g(reac)o
(hable)340 1258 y(states,)16 b(full)e(co)o(v)o(erage)h(is)g(extremely)g
(unlik)o(ely)m(.)d(Actually)m(,)i(Holzmann)f(emphasizes)i(that)340
1308 y(sup)q(ertrace)h(is)d(only)g(mean)o(t)f(as)h(a)g(partial-searc)o
(h)g(tec)o(hnique)h(for)f(proto)q(cols)h(that)f(cannot)340
1358 y(b)q(e)i(analyzed)f(exhaustiv)o(ely)e([9)o(,)i(page)g(232].)403
1417 y(W)m(olp)q(er)h(and)h(Lero)o(y)g(observ)o(ed)i(that)e(if)f(a)h
(compressed)h(state)g(descriptor)g(with,)e(sa)o(y)340
1467 y(64)c(bits,)g(instead)h(of)f(one)g(bit)h(is)f(stored)h(for)f(eac)
o(h)h(state)g(\(plus)g(the)g(information)c(regarding)340
1517 y(whic)o(h)13 b(slots)f(in)g(the)h(hash)g(table)g(are)f(o)q
(ccupied\),)h(the)h(probabilit)o(y)c(of)i Fm(omitting)i(even)g(one)340
1566 y(state)f Ft(b)q(ecomes)g(v)o(ery)g(small,)d(th)o(us)j(giving)f(a)
g(b)q(ound)h(on)g(the)g(probabilit)o(y)e(of)i(a)f(false)h(p)q(osi-)340
1616 y(tiv)o(e.)g(The)g(space)h(sa)o(vings)e(of)g(suc)o(h)i(a)e(sc)o
(heme)h(are)h(not)e(as)h(impressiv)o(e)g(as)f(the)i(sup)q(ertrace)340
1666 y(algorithm,)d(but)k(still)e(v)o(ery)h(substan)o(tial:)f(the)i
(state)g(descriptors)h(for)d(a)h(t)o(ypical)f(proto)q(col)340
1716 y(migh)o(t)e(b)q(e)j(100)e(b)o(ytes,)h(whic)o(h)g(the)g
(hashcompact)g(metho)q(d)f(could)h(reduce)h(to)f(eigh)o(t)g(b)o(ytes)
340 1766 y(with)h(a)g(v)o(ery)g(small)d(probabilit)o(y)i(of)g(omitting)
e(states)k(in)f(the)g(v)o(eri\014cation.)403 1825 y(W)m(olp)q(er)j(and)
h(Lero)o(y)f(implicitly)e(assumed)j(that)f(the)i(hash)f(v)n(alues)g
(for)f(storing)h(the)340 1875 y(compressed)c(state)g(descriptors)h(are)
e(calculated)g(using)g(this)g(compressed)h(state)f(descrip-)340
1924 y(tor.)19 b(W)m(e)f(sho)o(w)h(that,)f(b)o(y)h(deriving)f(the)i
(hash)f(v)n(alues)f Fm(indep)n(endently)i Ft(from)d(the)j(com-)340
1974 y(pressed)f(state)e(descriptor)g(and)f(b)o(y)h(emplo)o(ying)c(a)j
(particular)g(hashing)g(sc)o(heme)h(with)f(a)340 2024
y(lo)o(w)j(n)o(um)o(b)q(er)h(of)f(prob)q(es)i(in)f(the)g(table,)g(the)g
(omission)e(probabilit)o(y)h(can)h(b)q(e)h(reduced)340
2074 y(signi\014can)o(tly)m(.)13 b(Our)j(new)g(analysis)e(of)g(the)i
(omission)d(probabilit)o(y)g(sho)o(ws)j(that)f(one)g(only)340
2124 y(needs)k(to)f(store)g Fm(\014ve)g Ft(b)o(ytes)g(for)g(eac)o(h)g
(state)g(in)f(situations)g(where)i(W)m(olp)q(er)e(and)g(Lero)o(y)340
2173 y(recommend)c(storing)h(eigh)o(t)f(b)o(ytes.)403
2232 y(Using)h(this)h(5-b)o(yte)f(compression,)g(one)h(can,)f(for)h
(example,)d(store)k(80)e(millio)o(n)e(states)340 2282
y(with)e(an)g(omission)e(probabilit)o(y)h(smaller)f(than)j(0.13\045.)d
(F)m(urthermore,)h(b)o(y)h(re-running)h(the)340 2332
y(v)o(eri\014er)h(with)e(di\013eren)o(t)i(hash)f(and)f(compression)h
(functions,)f(eac)o(h)h(yielding)f(indep)q(enden)o(t)340
2382 y(v)n(alues)i(from)d(the)j(ones)g(of)f(the)h(previously)f(emplo)o
(y)o(ed)f(function,)h(one)h(can)f(further)i(reduce)340
2432 y(this)g(probabilit)o(y)m(.)d(F)m(or)i(example,)e(t)o(w)o(o)i(v)o
(eri\014cation)g(runs)h(for)f(the)h(ab)q(o)o(v)o(e)f(example)f(w)o
(ould)1050 2556 y(2)p eop
%%Page: 3 3
3 2 bop 183 194 a Ft(yield)13 b(an)h(omission)d(probabilit)o(y)i
(smaller)f(than)i(\(0)p Fk(:)p Ft(13\045\))1104 179 y
Fj(2)1133 194 y Ft(=)e(1)p Fk(:)p Ft(69)c Fi(\001)g Ft(10)1322
179 y Fh(\000)p Fj(6)1366 194 y Ft(.)245 244 y(W)m(e)13
b(ha)o(v)o(e)h(extended)h(the)g(Mur)p Fk(')f Ft(v)o(eri\014cation)g
(system)f(dev)o(elop)q(ed)i(at)e(Stanford)h(with)183
293 y(the)f(probabilistic)g(v)o(eri\014cation)g(sc)o(heme.)f(In)i
(prior)f(w)o(ork,)f(the)i(\\old")e(Mur)p Fk(')i Ft(system)f(w)o(as)183
343 y(successfully)19 b(applied)f(to)g(sev)o(eral)h(industrial)e(proto)
q(cols)c([5)o(,)18 b(6,)g(12)o(,)g(14,)f(17].)g(W)m(e)h(tried)183
393 y(the)12 b(new,)g(probabilistic)f(sc)o(heme)i(on)e(some)h(of)f
(these)j(proto)q(cols.)d(No)h(omissions)f(o)q(ccurred)183
443 y(using)i(5-b)o(yte)h(compression.)f(Then,)h(w)o(e)g(lo)q(ok)o(ed)f
(at)h(one)g(of)f(these)i(proto)q(cols)f(and)g(v)n(aried)183
493 y(the)g(n)o(um)o(b)q(er)g(of)f(bits)h(in)g(the)h(compressed)g
(state)g(descriptors.)g(F)m(or)f(eac)o(h)g(v)n(alue,)f(w)o(e)h(con-)183
543 y(ducted)f(m)o(ultiple)d(runs)j(of)f(the)g(v)o(eri\014er)h(with)f
(randomly)e(c)o(hosen)j(hash)g(and)f(compression)183
592 y(functions.)k(The)h(outcomes)f(of)f(these)j(exp)q(erimen)o(ts)f
(corresp)q(onded)h(with)f(the)g(omission)183 642 y(probabilities)g
(from)g(the)i(theoretical)g(analysis.)e(F)m(urthermore,)h(the)h(mean)e
(n)o(um)o(b)q(er)h(of)183 692 y(omitted)e(states)i(at,)f(for)g
(example,)e(55\045)i(omission)e(probabilit)o(y)g(w)o(as)j(only)e(3.2,)g
(out)h(of)183 742 y(109)8 b(080)13 b(reac)o(hable)i(states.)f(Th)o(us,)
g(co)o(v)o(erage)g(is)g(exp)q(ected)i(to)e(degrade)g(v)o(ery)h(slo)o
(wly)m(.)245 792 y(The)i(pap)q(er)h(is)f(organized)g(as)g(follo)o(ws.)e
(Section)e(2)k(presen)o(ts)i(the)e(probabilistic)f(v)o(er-)183
842 y(i\014cation)f(sc)o(heme)h(in)g(more)f(detail.)g(The)i(omission)d
(probabilities)h(obtained)h(using)f(this)183 891 y(sc)o(heme)e(are)h
(calculated)g(in)f(Sect.)8 b(3.)13 b(In)g(Sect.)8 b(4,)13
b(the)h(omission)e(probabilities)g(for)i(4-b)o(yte)183
941 y(and)k(5-b)o(yte)h(compression)f(are)h(graphed)g(and)g(the)g(c)o
(hoice)h(of)e(the)h(n)o(um)o(b)q(er)f(of)g(bits)h(in)183
991 y(the)12 b(compressed)h(v)n(alues)f(is)g(discussed.)h(Some)e(exp)q
(erience)j(gained)e(in)f(implemen)o(ting)e(the)183 1041
y(probabilistic)j(v)o(eri\014cation)h(sc)o(heme)h(is)f(elucidated)h(in)
f(Sect.)7 b(5.)13 b(W)m(e)g(describ)q(e)i(the)f(results)183
1091 y(on)e(larger)g(example)g(proto)q(cols)g(in)g(Sect.)c(6.)k
(Finally)m(,)d(Sect.)f(7)k(con)o(tains)h(some)e(conclusions)183
1140 y(and)i(suggestions)i(for)e(future)i(researc)o(h.)183
1276 y Fn(2)56 b(The)18 b(Probabilistic)g(V)-5 b(eri\014cation)18
b(Sc)n(heme)183 1376 y Ft(The)13 b(new,)f(probabilistic)f(v)o
(eri\014cation)h(metho)q(d)g(is)g(describ)q(ed)i(in)e(this)h(section.)g
(Ho)o(w)o(ev)o(er,)183 1426 y(\014rst)d(the)h(basic)f(algorithms)e(for)
h(explicit)h(state)h(en)o(umeration)e(on)g(whic)o(h)h(the)h(new)f
(metho)q(d)183 1475 y(is)16 b(based)i(and)f(the)g(hashing)g(and)g
(compression)f(sc)o(hemes)i(emplo)o(y)o(ed)d(are)i(explained)g(in)183
1525 y(more)c(detail.)h(In)g(these)i(explanations,)e(some)g
(de\014nitions)g(are)h(made)f(that)g(will)f(b)q(e)j(used)183
1575 y(in)d(calculating)g(the)h(omission)e(probabilit)o(y)m(.)183
1700 y Fg(Explicit)h(State)i(En)o(umeration)183 1784
y Ft(In)9 b(explicit)g(state)h(en)o(umeration,)e(the)i(automatic)e(v)o
(eri\014er)i(tries)g(to)g(examine)e(all)g(reac)o(hable)183
1834 y(states)j(from)e(a)h(set)h(of)f(p)q(ossible)h(start)g(states.)g
(Either)g(breadth-\014rst)h(or)f(depth-\014rst)g(searc)o(h)183
1884 y(can)k(b)q(e)g(emplo)o(y)o(ed)f(for)g(the)i(state)g(en)o
(umeration)d(pro)q(cess.)k(Both)e(the)g(breadth-\014rst)i(and)183
1933 y(the)i(depth-\014rst)i(algorithms)c(are)i(straigh)o(tforw)o(ard.)
f(A)h(depth-\014rst)i(algorithm)16 b(is,)j(for)183 1983
y(example,)12 b(giv)o(en)h(in)f([16)o(].)245 2033 y(Tw)o(o)g(data)h
(structures)i(are)f(needed)g(for)f(p)q(erforming)e(the)j(state)f(en)o
(umeration.)f(First,)183 2083 y(a)i Fm(state)h(table)f
Ft(stores)h(all)e(the)i(states)g(that)g(ha)o(v)o(e)f(b)q(een)h
(examined)e(so)i(far)e(and)h(is)h(used)g(to)183 2133
y(decide)d(whether)g(a)f(newly-reac)o(hed)h(state)g(is)f(old)f(\(has)i
(b)q(een)g(visited)f(b)q(efore\))h(or)f(new)g(\(has)183
2183 y(not)k(b)q(een)i(visited)f(b)q(efore\).)h(Besides)g(the)f(state)h
(table,)e(a)h Fm(state)h(queue)f Ft(holds)g(all)f(activ)o(e)183
2232 y(states)h(\(states)g(that)e(still)g(need)i(to)f(b)q(e)g
(explored\).)g(Dep)q(ending)g(on)f(the)i(organization)d(of)183
2282 y(this)h(queue,)g(the)g(v)o(eri\014er)h(do)q(es)g(a)e
(breadth-\014rst)j(or)d(a)h(depth-\014rst)h(searc)o(h.)245
2332 y(The)d(state)g(table)f(will)f(ev)o(en)o(tually)h(hold)f(all)h
(reac)o(hable)g(states,)h(unless)h(the)f(n)o(um)o(b)q(er)e(of)183
2382 y(states)15 b(exceeds)h(the)e(capacit)o(y)g(of)f(the)h(table,)g
(in)f(whic)o(h)h(case)h(the)f(v)o(eri\014er)h(halts)e(with)h(an)183
2432 y(error)d(message.)e(In)i(practice,)g(the)f(total)g(memory)e(a)o
(v)n(ailable)g(for)i(the)h(table)f(is)g(the)h(limiting)893
2556 y(3)p eop
%%Page: 4 4
4 3 bop 340 194 a Ft(resource)14 b(in)d(v)o(eri\014cation.)g(The)h
(probabilistic)f(v)o(eri\014cation)g(sc)o(heme)h(greatly)f(reduces)j
(the)340 244 y(memory)h(requiremen)o(ts)i(for)f(this)h(table)f(b)o(y)h
(compressing)f(the)h(states)h(b)q(efore)g(they)f(are)340
293 y(inserted,)c(th)o(us)g(increasing)f(the)h(size)g(of)e(v)o
(eri\014cation)h(problems)f(that)h(can)g(b)q(e)h(dealt)f(with.)340
413 y Fg(Hashing)340 491 y Ft(In)g(the)h(probabilistic)e(v)o
(eri\014cation)h(sc)o(heme,)g(the)h(state)f(table)g(is)g(implemen)o
(ted)e(as)i(a)g(hash)340 541 y(table.)19 b(In)h(the)g(follo)o(wing,)c
(w)o(e)k(assume)f(that)g(this)h(hash)f(table)h(has)12
b Fk(m)20 b Ft(slots.)f(Th)o(us,)h(a)340 590 y(maxim)o(um)15
b(n)o(um)o(b)q(er)k(of)12 b Fk(m)20 b Ft(states)h(can)f(b)q(e)h
(explored.)e(One)i(problem)d(in)i(hashing)f(are)340 640
y(collisions.)11 b(A)g(collision)g(o)q(ccurs)i(if)e(t)o(w)o(o)g(states)
i(hash)f(to)g(the)g(same)f(slot)g(in)h(the)g(table.)f(This)340
690 y(collision)19 b(can)h(b)q(e)h(resolv)o(ed)g(b)o(y)f(either)h(c)o
(haining)e(or)h(op)q(en)h(addressing)13 b([4)o(].)20
b(Chaining)340 740 y(requires)h(storing)e(an)g(additional)e(p)q(oin)o
(ter)i(b)q(esides)i(the)f(compressed)g(state)g(and)f(with)340
790 y(that)13 b(the)h(memory)c(requiremen)o(ts)k(increase.)f
(Therefore,)h(op)q(en)g(addressing)f(w)o(as)g(used)h(in)340
839 y(our)g(probabilistic)f(v)o(eri\014cation)h(sc)o(heme.)403
889 y(In)19 b(op)q(en)h(addressing,)g(a)f(v)o(ectorial)g(hash)h
(function)12 b Fk(h)p 1265 896 24 2 v 19 w Ft(is)19 b(applied)g(to)h
(eac)o(h)g(state)13 b Fk(s)340 939 y Ft(yielding)j(a)g(prob)q(e)h
(sequence)i Fk(h)854 945 y Fj(0)873 939 y Ft(\()p Fk(s)p
Ft(\))p Fk(;)7 b(h)967 945 y Fj(1)986 939 y Ft(\()p Fk(s)p
Ft(\))p Fk(;)g(:)g(:)g(:)e(;)i(h)1154 945 y Fs(m)p Fh(\000)p
Fj(1)1227 939 y Ft(\()p Fk(s)p Ft(\).)17 b(When)g(inserting)g(a)f
(state)i(in)340 989 y(the)g(table,)e(the)i(slots)f(are)g(tested)h(for)f
(emptiness)g(according)f(to)h(this)g(prob)q(e)h(sequence.)340
1039 y(The)12 b(state)f(is)g(stored)h(in)f(the)g(\014rst)h(empt)o(y)e
(slot)g(found)h(during)g(the)g(prob)q(e)h(sequence.)g(Note,)340
1089 y(that)k(eac)o(h)f(prob)q(e)h(sequence)i(has)d(to)g(b)q(e)h(a)f(p)
q(erm)o(utation)f(of)g Fi(f)p Ft(0)p Fk(;)7 b(:)g(:)g(:)e(;)i(m)s
Fi(\000)s Ft(1)p Fi(g)15 b Ft(if)f(w)o(e)i(w)o(an)o(t)340
1138 y(ev)o(ery)f(slot)f(in)f(the)i(table)e(to)h(b)q(e)h(used.)403
1188 y(In)9 b Fm(uniform)i(hashing)p Ft(,)f(eac)o(h)h(state)f(is)g
(equally)f(lik)o(ely)f(to)i(ha)o(v)o(e)g(an)o(y)f(of)g(the)k
Fk(m)p Ft(!)d(p)q(erm)o(uta-)340 1238 y(tions)g(of)f
Fi(f)p Ft(0)p Fk(;)e(:)g(:)g(:)t(;)g(m)-7 b Fi(\000)g
Ft(1)p Fi(g)10 b Ft(as)f(its)h(prob)q(e)g(sequence.)h(Uniform)d
(hashing)h(has)g(the)h(adv)n(an)o(tage)f(of)340 1288
y(b)q(eing)h(relativ)o(ely)f(easy)i(to)e(analyze)h(and)g(of)f(a)o(v)o
(oiding)f(clustering)i(in)g(the)g(hash)g(table.)g(Ho)o(w-)340
1338 y(ev)o(er,)k(the)g(calculation)f(of)g(the)h(prob)q(e)g(sequence)i
(is)d(di\016cult)g(in)g(practice.)h(Therefore,)g(w)o(e)340
1387 y(used)f Fm(double)h(hashing)f Ft(instead,)f(where)i(only)d(t)o(w)
o(o)h(hash)g(v)n(alues)g Fk(h)1387 1372 y Fh(0)1399 1387
y Ft(\()p Fk(s)p Ft(\))g(and)g Fk(h)1565 1372 y Fh(00)1587
1387 y Ft(\()p Fk(s)p Ft(\))g(ha)o(v)o(e)g(to)340 1437
y(b)q(e)f(calculated.)f(The)h(prob)q(e)g(sequence)h(is)e(then)h(giv)o
(en)f(b)o(y)g Fk(h)1272 1443 y Fs(i)1285 1437 y Ft(\()p
Fk(s)p Ft(\))j(=)e([)p Fk(h)1428 1422 y Fh(0)1440 1437
y Ft(\()p Fk(s)p Ft(\))r(+)r Fk(ih)1565 1422 y Fh(00)1587
1437 y Ft(\()p Fk(s)p Ft(\)])r(mo)q(d)p Fk(m)p Ft(,)340
1487 y Fk(i)h Ft(=)f(0)p Fk(;)c(:)g(:)g(:)t(;)g(m)e Fi(\000)g
Ft(1.)17 b(The)h(practical)g(p)q(erformance)g(of)f(double)g(hashing)h
(is)f(v)o(ery)h(close)g(to)340 1537 y(uniform)11 b(hashing.)h(Gonnet)g
(states)i(that)f(it)f(is)h(practically)f(imp)q(ossible)f(to)h
(establish)h(sta-)340 1587 y(tistically)j(whether)i(double)e(hashing)g
(b)q(eha)o(v)o(es)h(di\013eren)o(tly)g(from)e(uniform)f(hashing)j([7)o
(,)340 1636 y(page)d(57].)340 1756 y Fg(Compression)340
1834 y Ft(In)19 b(our)f(state)h(compression)f(sc)o(heme,)g(a)g
(compression)g(function)12 b Fk(c)18 b Ft(is)g(applied)g(to)g(eac)o(h)
340 1884 y(state)c Fk(s)20 b Ft(yielding)f(a)g(compressed)i(v)n(alue)e
Fk(c)p Ft(\()p Fk(s)p Ft(\))j Fi(2)g(f)p Ft(0)p Fk(;)7
b(:)g(:)g(:)t(;)g(l)g Fi(\000)f Ft(1)p Fi(g)p Ft(.)19
b(Here,)14 b Fk(l)21 b Ft(denotes)g(the)340 1934 y(n)o(um)o(b)q(er)15
b(of)f(di\013eren)o(t)i(compressed)g(v)n(alues.)e(If)h(w)o(e)h(use)d
Fk(b)i Ft(bits)g(for)g(these)h(v)n(alues,)e(clearly)340
1983 y Fk(l)f Ft(=)f(2)430 1968 y Fs(b)446 1983 y Ft(.)403
2033 y(No)o(w,)h(w)o(e)i(in)o(tro)q(duce)g(the)h(notion)d(of)h
Fm(uniform)h(c)n(ompr)n(ession)p Ft(.)g(In)f(uniform)f(compres-)340
2083 y(sion,)e(the)i(compressed)f(v)n(alue)g(of)f(eac)o(h)h(state)h(is)
e(equally)g(lik)o(ely)g(to)g(b)q(e)i(an)o(y)e(of)g(the)j
Fk(l)f Ft(v)n(alues)340 2133 y(0)p Fk(;)7 b(:)g(:)g(:)e(;)i(l)p
Fi(\000)o Ft(1.)k(In)h(practice,)h(w)o(e)f(can)h(use)g
Fm(universal)g(hashing)g Ft(to)f(calculate)g(the)h(compressed)340
2183 y(v)n(alue)h(from)e(the)i(state)h(descriptor,)g(as)f(suggested)h
(b)o(y)f(W)m(olp)q(er)f(and)h(Lero)o(y)e([15)o(].)403
2232 y(Let)k(Pr\()p Fk(A)p Ft(\))g(denote)h(the)f(probabilit)o(y)e(of)h
(ev)o(en)o(t)e Fk(A)j Ft(and)f(let)e Fk(S)18 b Ft(denote)f(the)f(set)h
(of)e(all)340 2282 y(p)q(ossible)k(states.)g(F)m(urthermore,)f(let)12
b Fk(H)21 b Ft(b)q(e)e(a)f(univ)o(ersal)1268 2288 y Fj(2)1305
2282 y Ft(class)h(of)e(hash)i(functions)13 b([3)o(])340
2332 y(from)e Fk(S)22 b Ft(to)d Fi(f)p Ft(0)p Fk(;)7
b(:)g(:)g(:)t(;)g(l)f Fi(\000)g Ft(1)p Fi(g)p Ft(.)18
b(Details)g(ab)q(out)h(the)h(particular)e(univ)o(ersal)1506
2338 y Fj(2)1543 2332 y Ft(class)i(of)e(hash)340 2382
y(functions)11 b(used)g(in)f(our)h(implem)o(en)o(tation)d(can)i(b)q(e)h
(found)f(in)g(Sect.)e(5.)h(If)h(w)o(e)h(randomly)d(and)340
2432 y(uniformly)g(c)o(ho)q(ose)k(one)f(function)f(in)i
Fk(H)i Ft(as)c(our)h(compression)f(function)j Fk(c)p
Ft(,)d(the)h(univ)o(ersal)1763 2438 y Fj(2)1050 2556
y Ft(4)p eop
%%Page: 5 5
5 4 bop 183 194 a Ft(prop)q(ert)o(y)13 b(guaran)o(tees)g(that)f(the)h
(probabilit)o(y)e(that)i(t)o(w)o(o)e(di\013eren)o(t)j(states)f(ha)o(v)o
(e)f(the)h(same)183 244 y(compressed)h(v)n(alue)g(is)f(b)q(ound,)h
(namely)459 349 y(Pr\()p Fk(c)p Ft(\()p Fk(s)572 355
y Fj(1)592 349 y Ft(\))5 b(=)g Fk(c)p Ft(\()p Fk(s)703
355 y Fj(2)722 349 y Ft(\)\))12 b Fi(\024)815 321 y Ft(1)p
815 339 21 2 v 819 377 a Fk(l)882 349 y Ft(for)h(all)e
Fk(s)1020 355 y Fj(1)1039 349 y Fk(;)c(s)1077 355 y Fj(2)1107
349 y Fi(2)k Fk(S;)j(s)1216 355 y Fj(1)1240 349 y Fi(6)p
Ft(=)5 b Fk(s)1296 355 y Fj(2)1335 349 y Fk(:)183 448
y Ft(Hence,)15 b(univ)o(ersal)480 454 y Fj(2)512 448
y Ft(hashing)f(is)g(guaran)o(teed)h(to)f(p)q(erform)f(at)h(least)g(as)h
(go)q(o)q(d)e(as)i(uniform)183 498 y(compression,)h(where)h(for)g(all)e
(di\013eren)o(t)j Fk(s)866 504 y Fj(1)885 498 y Fk(;)7
b(s)923 504 y Fj(2)958 498 y Fi(2)16 b Fk(S)r Ft(,)h(Pr\()p
Fk(c)p Ft(\()p Fk(s)1171 504 y Fj(1)1191 498 y Ft(\))5
b(=)g Fk(c)p Ft(\()p Fk(s)1302 504 y Fj(2)1321 498 y
Ft(\)\))17 b(=)1423 482 y Fj(1)p 1423 489 17 2 v 1426
512 a Fs(l)1445 498 y Ft(.)f(F)m(urther-)183 548 y(more,)g(it)i(can)h
(b)q(e)f(sho)o(wn)h(that)f(the)h(ab)q(o)o(v)o(e)f(b)q(ound)g(will)f(b)q
(e)h(tigh)o(t)g(in)g(our)g(application)183 598 y(of)12
b(univ)o(ersal)391 604 y Fj(2)422 598 y Ft(hashing.)g(Therefore,)i
(univ)o(ersal)946 604 y Fj(2)977 598 y Ft(hashing)e(will)g(p)q(erform)g
(almost)e(exactly)183 648 y(lik)o(e)j(uniform)f(compression.)183
774 y Fg(The)j(Probabili)o(sti)o(c)e(V)l(eri\014cation)g(Sc)o(heme)183
860 y Ft(The)g(probabilistic)f(v)o(eri\014cation)g(sc)o(heme)i(only)e
(b)q(eha)o(v)o(es)h(di\013eren)o(tly)h(from)d(the)i(basic)g(ex-)183
909 y(plicit)e(state)i(en)o(umeration)f(algorithms)e(when)j(a)f(newly)g
(reac)o(hed)i(state)f Fk(s)g Ft(is)f(en)o(tered)i(in)o(to)183
959 y(the)g(hash)g(table.)g(This)f(state)i(insertion)f(pro)q(cess)i(is)
e(depicted)h(in)e(Fig.)6 b(1.)13 b(After)i(applying)183
1009 y(the)k(hash)g(function)12 b Fk(h)p 522 1016 24
2 v 19 w Ft(and)18 b(compression)h(function)12 b Fk(c)19
b Ft(indep)q(enden)o(tly)g(to)g(the)g(state)14 b Fk(s)p
Ft(,)183 1059 y(the)e(algorithm)d(starts)k(probing)e(the)h(table)g(at)g
Fk(h)947 1065 y Fj(0)965 1059 y Ft(\()p Fk(s)p Ft(\).)g(A)g(prob)q(e)g
(can)g(yield)g(three)h(di\013eren)o(t)183 1109 y(results:)209
1202 y Fg({)20 b Ft(The)c(prob)q(ed)g(slot)f(ma)o(y)e(b)q(e)j(empt)o(y)
m(.)e(The)i(state)d Fk(s)j Ft(has)f(not)g(b)q(een)i(encoun)o(tered)g
(pre-)253 1252 y(viously)c(in)h(the)g(searc)o(h)h(and)f(its)g
(compressed)g(v)n(alue)g Fk(c)p Ft(\()p Fk(s)p Ft(\))g(is)g(stored)h
(in)e(the)i(slot.)209 1302 y Fg({)20 b Ft(The)15 b(prob)q(ed)h(slot)e
(con)o(tains)h(a)g(compressed)g(state)h(di\013eren)o(t)f(from)e(the)j
(compressed)253 1352 y(state)e Fk(c)p Ft(\()p Fk(s)p
Ft(\))g(b)q(eing)f(en)o(tered.)h(This)f(is)g(called)g(a)g
Fm(c)n(ol)r(lision)p Ft(.)f(The)i(hash)f(table)g(algorithm)253
1402 y(then)i(prob)q(es)g(the)f(next)h(slot)e(giv)o(en)h(b)o(y)f(the)i
(prob)q(e)f(sequence)i Fk(h)p 1250 1409 V Ft(\()p Fk(s)p
Ft(\).)209 1452 y Fg({)k Ft(The)15 b(prob)q(ed)h(slot)e(con)o(tains)h
(a)f(compressed)i(state)f(equal)f(to)h(the)g(compressed)h(state)253
1502 y Fk(c)p Ft(\()p Fk(s)p Ft(\))21 b(b)q(eing)f(en)o(tered.)i(In)e
(this)g(case,)h(the)f(algorithm)e(assumes)i(that)g(the)h(uncom-)253
1552 y(pressed)16 b(states)e(are)g(the)g(same,)e(whic)o(h)i(ma)o(y)d
(or)j(ma)o(y)d(not)j(b)q(e)g(true.)f(The)h(state)h(table)253
1602 y(is)g(not)g(mo)q(di\014ed,)e(and)h(the)i(successors)i(of)c(the)h
(curren)o(t)i(state)c Fk(s)i Ft(are)g(not)g(generated)253
1652 y(and)i(searc)o(hed.)h(When)f(the)g(uncompressed)h(states)g(are)f
(indeed)g(equal,)f(this)h(is)g(the)253 1701 y(desired)g(result.)e(When)
g(the)h(uncompressed)g(states)g(are)g(not)f(equal,)f(this)i(results)g
(in)253 1751 y(an)11 b Fm(omission)j Ft(of)d(the)g(curren)o(t)i(state)g
Fk(s)p Ft(,)e(and)g(the)g(p)q(ossible)g(omission)e(of)i(its)g
(successors)253 1801 y(in)j(the)g(state)h(graph.)384
1947 y
 16378001 6630772 0 0 19997655 8091156 startTexFig
 384 1947 a
%%BeginDocument: fi:ProbVer.eps
/$F2psDict 32 dict def 
$F2psDict begin
	$F2psDict /mtrx matrix put

 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y translate xrad yrad scale 0 0 1 startangle endangle arc
	savematrix setmatrix
	} def newpath 0 0 0 0 0 1 DrawEllipse stroke

	end
	/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
	/$F2psEnd {$F2psEnteredState restore end} def
	%%EndProlog

$F2psBegin
1 setlinecap 1 setlinejoin
-2 2 translate
0.000000 123.000000 translate 0.900 -0.900 scale
1.000 setlinewidth
% Ellipse
newpath 156 89 52 15 0 360 DrawEllipse stroke
/Times-Roman findfont 12.000 scalefont setfont
113 93 moveto 
1 -1 scale
(compressed value) gsave  0.000 rotate show grestore 1 -1 scale
/Times-Roman findfont 12.000 scalefont setfont
29 75 moveto 
1 -1 scale
(state) gsave  0.000 rotate show grestore 1 -1 scale
/Times-Roman findfont 12.000 scalefont setfont
36 86 moveto 
1 -1 scale
(s) gsave  0.000 rotate show grestore 1 -1 scale
% Ellipse
newpath 40 75 27 17 0 360 DrawEllipse stroke
% Ellipse
newpath 156 28 52 15 0 360 DrawEllipse stroke
/Times-Roman findfont 12.000 scalefont setfont
118 31 moveto 
1 -1 scale
(probe sequence) gsave  0.000 rotate show grestore 1 -1 scale
% Polyline
newpath 73 38 moveto 80 38 lineto  stroke
/Times-Roman findfont 12.000 scalefont setfont
73 36 moveto 
1 -1 scale
(h) gsave  0.000 rotate show grestore 1 -1 scale
% Polyline
newpath 291 115 moveto 291 45 lineto 256 45 lineto 256 115 lineto closepath  stroke
% Polyline
newpath 256 55 moveto 291 55 lineto  stroke
% Polyline
newpath 256 65 moveto 291 65 lineto  stroke
% Polyline
newpath 256 75 moveto 291 75 lineto  stroke
% Polyline
newpath 256 85 moveto 291 85 lineto  stroke
% Polyline
newpath 256 95 moveto 291 95 lineto  stroke
% Polyline
newpath 256 105 moveto 291 105 lineto  stroke
/Times-Roman findfont 12.000 scalefont setfont
261 27 moveto 
1 -1 scale
(hash ) gsave  0.000 rotate show grestore 1 -1 scale
/Times-Roman findfont 12.000 scalefont setfont
261 40 moveto 
1 -1 scale
(table) gsave  0.000 rotate show grestore 1 -1 scale
/Times-Roman findfont 12.000 scalefont setfont
295 84 moveto 
1 -1 scale
(m slots) gsave  0.000 rotate show grestore 1 -1 scale
/Times-Roman findfont 12.000 scalefont setfont
261 126 moveto 
1 -1 scale
(b bits) gsave  0.000 rotate show grestore 1 -1 scale
newpath 95.794 28.812 moveto 104.000 28.000 lineto 97.142 32.578 lineto stroke
newpath 139.040 125.923 104.003 -142.075 -109.689 arc
stroke
newpath 95.948 87.220 moveto 104.000 89.000 lineto 96.058 91.219 lineto stroke
newpath 102.015 16.603 72.424 118.912 88.429 arcn
stroke
	[4.000000] 0 setdash
% Polyline
newpath 208 90 moveto 256 90 lineto  stroke
	[] 0 setdash
newpath 248.000 88.000 moveto 256.000 90.000 lineto 248.000 92.000 lineto stroke
% Polyline
newpath 340 138 moveto 340 2 lineto 2 2 lineto 2 138 lineto closepath  stroke
	[4.000000] 0 setdash
% Interpolated spline
newpath 209 29 moveto
	216.678 31.130 219.928 32.380 222 34 curveto
	224.421 35.893 227.800 41.368 229 44 curveto
	230.622 47.556 232.533 56.204 233 60 curveto
	233.638 65.179 233.638 72.679 233 90 curveto
 stroke
	[] 0 setdash
newpath 235.293 82.079 moveto 233.000 90.000 lineto 231.296 81.932 lineto stroke
/Times-Roman findfont 12.000 scalefont setfont
79 96 moveto 
1 -1 scale
(c) gsave  0.000 rotate show grestore 1 -1 scale
$F2psEnd
%%EndDocument

 endTexFig
 282 2424 a Fp(Fig.)7 b(1.)13 b Fr(The)g(state)g(insertion)i(pro)q
(cess)f(in)g(the)f(probabilis)q(tic)j(v)o(eri\014cation)g(sc)o(heme)893
2556 y Ft(5)p eop
%%Page: 6 6
6 5 bop 403 194 a Ft(It)15 b(is)g(imp)q(ortan)o(t)f(to)h(observ)o(e)h
(that)g(only)e(the)i(slots)g(examined)e(using)h(the)h(prob)q(e)g(se-)
340 244 y(quence)h(can)e(lead)g(to)g(omissions.)e(Usually)m(,)g(only)h
(a)h(few)g(slots)g(are)h(examined)e(b)q(efore)i(an)340
293 y(empt)o(y)e(slot)g(is)h(found)f(\(whic)o(h)g(is)h(wh)o(y)f
(hashing)g(is)h(attractiv)o(e)f(in)g(the)i(\014rst)f(place\).)f(This)
340 343 y(p)q(ositiv)o(e)e(e\013ect)i(of)d(hashing)h(on)g(reducing)g
(the)h(lik)o(eliho)q(o)q(d)d(of)i(omissions)e(w)o(as)i(not)g(consid-)
340 393 y(ered)i(b)o(y)f(W)m(olp)q(er)f(and)h(Lero)o(y)f([16)o(],)g
(who)h(implicitl)o(y)d(assumed)i(that)h(the)h(prob)q(e)f(sequence)340
443 y(is)k(calculated)f(from)e(the)j(compressed)g(v)n(alue.)e(Under)j
(their)e(assumptions,)f(states)j(with)340 493 y(the)d(same)e
(compressed)i(v)n(alue)e Fm(inevitably)g Ft(lead)h(to)g(omissions.)403
542 y(Using)19 b(our)h(impro)o(v)o(ed)e(probabilistic)h(v)o
(eri\014cation)h(algorithm,)d(the)j(c)o(hoice)g(of)g(the)340
592 y(hashing)9 b(sc)o(heme)h(a\013ects)h(the)f(omission)d(probabilit)o
(y)m(.)g(A)j(\\go)q(o)q(d")e(hashing)h(sc)o(heme)h(for)f(our)340
642 y(probabilistic)14 b(v)o(eri\014cation)h(algorithm)d(has)k(few)f
(collisions)e(in)i(an)g(unsuccessful)i(searc)o(h,)340
692 y(i.e.)11 b(while)h(inserting)g(a)g(new)g(state.)g(W)m(e)g(emplo)o
(y)e(double)i(hashing)g(since)g(its)g(p)q(erformance)340
742 y(is)k(v)o(ery)h(close)f(to)g(uniform)e(hashing,)h(where)i(no)f
(clustering)g(o)q(ccurs.)h(Clustering)f(w)o(ould)340
791 y(increase)g(the)e(n)o(um)o(b)q(er)f(of)g(collisions)g(in)h
(unsuccessful)h(searc)o(hes.)340 923 y Fn(3)56 b(Calculation)19
b(of)g(the)f(Omission)f(Probabilities)340 1020 y Ft(In)e(the)h(follo)o
(wing,)11 b(w)o(e)k(\014rst)h(deriv)o(e)f(an)g(appro)o(ximate)e(form)o
(ula)f(for)i(the)i(omission)c(prob-)340 1070 y(abilit)o(y)h(in)i(our)f
(probabilistic)g(v)o(eri\014cation)g(sc)o(heme.)h(In)f(the)h(examples)f
(tested,)i(this)f(ap-)340 1120 y(pro)o(ximation)9 b(form)o(ula)h(seems)
i(to)f(b)q(e)i(v)o(ery)f(accurate.)h(Ho)o(w)o(ev)o(er,)e(w)o(e)h(also)g
(deriv)o(e)g(another)340 1170 y(form)o(ula)f(that)i(is)g(an)g(upp)q(er)
h(b)q(ound)f(for)g(the)h(omission)d(probabilit)o(y)g(but)i(is)g(less)h
(accurate)340 1219 y(than)e(the)h(appro)o(ximation)c(form)o(ula.)g
(Finally)m(,)g(the)k(results)g(from)d(the)j(analytical)d(calcula-)340
1269 y(tions)h(are)f(compared)g(with)g(results)i(from)d(a)h(sim)o
(ulation)d(of)j(the)h(probabilistic)f(v)o(eri\014cation)340
1319 y(sc)o(heme.)340 1441 y Fg(Appro)o(ximate)k(Analysis)340
1521 y Ft(F)m(or)i(the)h(follo)o(wing)d(analysis,)g(w)o(e)j(assume)f
(that)g(uniform)e(hashing)i(and)g(uniform)e(com-)340
1571 y(pression)20 b(are)f(used.)g(Let)g(E[)p Fk(X)s
Ft(])f(denote)i(the)f(exp)q(ected)h(v)n(alue)e(of)g(random)f(v)n
(ariable)12 b Fk(X)340 1627 y Ft(and)18 b Fk(n)450 1611
y Fs(k)p 450 1618 21 2 v 487 1627 a Ft(=)537 1595 y Ff(Q)576
1606 y Fs(k)q Fh(\000)p Fj(1)576 1639 y Fs(i)p Fj(=0)639
1627 y Ft(\()p Fk(n)12 b Fi(\000)g Fk(i)p Ft(\))17 b(the)h(falling)e
(factorial)g(p)q(o)o(w)o(er.)h(Besides)i(that,)e(let)g(ln)g(denote)340
1676 y(log)394 1686 y Fs(e)412 1676 y Ft(.)11 b(Recall)g(that)i
Fk(m)f Ft(denotes)i(the)e(n)o(um)o(b)q(er)f(of)h(slots)g(in)f(the)i
(hash)f(table)g(and)g Fk(l)h Ft(the)g(n)o(um-)340 1726
y(b)q(er)h(of)e(compressed)i(v)n(alues.)e(W)m(e)g(assume)h(that)g(w)o
(e)g(insert)g Fk(n)g Ft(distinct)g(states,)g(n)o(um)o(b)q(ered)340
1776 y(1)p Fk(;)7 b(:)g(:)g(:)e(;)i(n)p Ft(,)13 b(in)o(to)g(the)h
(table.)366 1856 y Fg({)21 b Ft(W)m(e)16 b(\014rst)i(lo)q(ok)e(at)h(a)f
(situation)h(where)h(the)f(\014rst)c Fk(k)18 b Ft(of)e(the)d
Fk(n)k Ft(states)h(w)o(ere)g(inserted)411 1906 y(in)o(to)9
b(the)i(table)e(without)h(omissions.)e(Th)o(us,)h(the)i(table)f
(actually)f(holds)j Fk(k)f Ft(compressed)411 1956 y(v)n(alues.)k(W)m(e)
g(no)o(w)g(w)o(an)o(t)g(to)g(insert)i(the)f(\()p Fk(k)5
b Ft(+)s(1\)st)16 b(state)g(in)o(to)f(the)h(table.)f(Let)h
Fk(C)1703 1962 y Fs(k)1739 1956 y Ft(b)q(e)411 2006 y(the)d(random)f(v)
n(ariable)f(describing)i(the)h(n)o(um)o(b)q(er)e(of)g
Fm(c)n(ol)r(lisions)g Ft(that)h(o)q(ccur)h(when)f(w)o(e)411
2056 y(insert)18 b(a)f(new)h(state)g(giv)o(en)f(there)i(are)13
b Fk(k)18 b Ft(states)h(in)e(the)h(table.)f Fk(C)1490
2062 y Fs(k)1527 2056 y Ft(is)h(exactly)f(one)411 2105
y(less)i(than)f(the)g(n)o(um)o(b)q(er)g(of)f Fm(pr)n(ob)n(es)h
Ft(needed)i(to)e(insert)h(the)f(\()p Fk(k)6 b Ft(+)f(1\)st)19
b(state)g(in)o(to)f(a)411 2155 y(con)o(v)o(en)o(tional)c(hash)g(table.)
g(Therefore,)i(one)f(can)g(obtain)f(from)f(the)i(distribution)f(of)411
2205 y(the)e(n)o(um)o(b)q(er)e(of)g(prob)q(es)i({)f(giv)o(en,)f(for)h
(example,)e(in)h([13)o(,)h(page)g(527])f({)g(the)i(probabilit)o(y)411
2255 y(that)g(w)o(e)f(ha)o(v)o(e)h(exactly)g Fk(j)i Ft(collisions)c
(inserting)i(the)g(\()p Fk(k)o Ft(+)n(1\)st)f(state)i(giv)o(en)e(there)
i(are)f Fk(k)411 2305 y Ft(states)j(in)e(the)i(table,)e(namely)834
2415 y(Pr\()p Fk(C)924 2421 y Fs(k)950 2415 y Ft(=)5
b Fk(j)r Ft(\))12 b(=)1110 2387 y Fk(k)1133 2369 y Fs(j)p
1133 2381 18 2 v 1082 2406 96 2 v 1082 2448 a Fk(m)1118
2430 y Fs(j)r Fj(+1)p 1118 2442 60 2 v 1183 2415 a Ft(\()p
Fk(m)e Fi(\000)g Fk(k)q Ft(\))21 b Fk(:)369 b Ft(\(1\))1050
2556 y(6)p eop
%%Page: 7 7
7 6 bop 253 194 a Ft(W)m(e)15 b(de\014ne)i Fk(N)481 200
y Fs(k)517 194 y Ft(to)e(b)q(e)h(the)g(ev)o(en)o(t)g(that)g(there)h(is)
e(no)g(omission)e(when)j(inserting)g(the)253 244 y(\()p
Fk(k)o Ft(+)n(1\)st)d(state)f(giv)o(en)f(that)h(there)h(w)o(ere)g(no)e
(omissions)f(when)j(the)f(\014rst)h Fk(k)g Ft(states)g(w)o(ere)253
293 y(inserted.)e(Let)f Fk(N)526 278 y Fh(0)521 305 y
Fs(k)551 293 y Ft(b)q(e)g(the)g(corresp)q(onding)h(unconditional)d(ev)o
(en)o(t,)i(namely)e(that)h(there)253 343 y(is)14 b(no)g(omission)d
(when)k(inserting)f(the)g(\()p Fk(k)t Ft(+)r(1\)st)h(state)f(in)o(to)f
(the)i(table.)e(Clearly)m(,)679 437 y Fk(N)712 443 y
Fs(k)744 437 y Ft(=)f Fk(N)826 420 y Fh(0)821 447 y Fs(k)853
437 y Fi(j)g Fk(N)915 420 y Fh(0)910 447 y Fs(k)q Fh(\000)p
Fj(1)982 437 y Fi(^)d Fk(:)e(:)g(:)h Fi(^)g Fk(N)1151
420 y Fh(0)1146 447 y Fj(0)1186 437 y Fk(:)253 531 y
Ft(Observing)k(that)g(eac)o(h)g(collision)e(ma)o(y)g(result)i(in)f(an)h
(omission,)d(w)o(e)j(can)f(appro)o(ximate)253 581 y(the)j(probabilit)o
(y)e(of)g(the)i(ev)o(en)o(t)g Fk(N)795 587 y Fs(k)829
581 y Ft(under)g(the)g(condition)f(that)g(there)i(are)f(exactly)e
Fk(j)253 631 y Ft(collisions)h(as)677 713 y(Pr\()p Fk(N)770
719 y Fs(k)803 713 y Fi(j)e Fk(C)856 719 y Fs(k)880 713
y Ft(=)5 b Fk(j)r Ft(\))13 b Fi(\031)1008 655 y Ff(\022)1044
685 y Fk(l)s Fi(\000)r Ft(1)p 1044 704 71 2 v 1073 742
a Fk(l)1120 655 y Ff(\023)1150 663 y Fs(j)1189 713 y
Fk(:)370 b Ft(\(2\))253 815 y(Here,)18 b(it)g(is)f(assumed)g(that)g
(the)c Fk(j)20 b Ft(comparisons)d(of)g(the)h(compressed)g(v)n(alue)f
(to)g(b)q(e)253 865 y(en)o(tered)e(with)e(the)h(v)n(alues)e(in)h(the)h
(table)f(are)g(m)o(utually)e(indep)q(enden)o(t.)j(Ho)o(w)o(ev)o(er,)f
(re-)253 915 y(mem)o(b)q(er)j(that)h(w)o(e)g(conditioned)g(on)g(the)g
(situation)g(where)h(no)f(omission)e(o)q(ccurred)253
964 y(during)c(the)h(insertion)f(of)f(the)i(\014rst)h
Fk(k)f Ft(states.)g(This)f(condition)f(imp)q(oses)g(some)h(dep)q(en-)
253 1014 y(dence)16 b(on)f(the)g(compressed)g(v)n(alues)g(in)f(the)h
(table.)f(The)h(v)n(alues)f(ha)o(v)o(e)h(the)g(tendency)253
1064 y(to)g(b)q(e)g(di\013eren)o(t)h(from)d(eac)o(h)j(other)f(b)q
(ecause)i(the)e(omission)e(cases)j({)f(where)h(at)e(least)253
1114 y(t)o(w)o(o)g(compressed)g(v)n(alues)g(are)g(equal)f({)h(w)o(ere)h
(\014ltered)f(out)g(b)o(y)g(the)g(condition.)f(Th)o(us,)253
1164 y(\(2\))f(underestimates)g(the)f(resulting)h(omission)d
(probabilit)o(y)m(.)g(In)i(practice,)h(w)o(e)g(use)g(the)253
1214 y(probabilistic)k(v)o(eri\014cation)g(sc)o(heme)g(with)g(a)g(b)q
(ound)h(on)f(the)h(omission)d(probabilit)o(y)253 1263
y(when)j(inserting)c Fk(n)j Ft(states)i(in)o(to)e(the)h(table.)f
(Hence,)i(the)f(omission)e(probabilit)o(y)g(for)253 1313
y(one)h(of)f(the)e Fk(n)i Ft(states)h(will)e(b)q(e)i(v)o(ery)g(small)d
({)i(esp)q(ecially)h(when)d Fk(n)i Ft(is)g(large)g({)g(and)g(so)253
1363 y(will)10 b(b)q(e)i(the)f(\014ltering)g(e\013ect)i(of)e(the)h
(condition.)e(This)h(is)g(con\014rmed)f(b)o(y)h(exp)q(erimen)o(tal)253
1413 y(results)k(presen)o(ted)h(later.)253 1464 y(Using)11
b(the)g(theorem)g(of)f(total)g(probabilit)o(y)m(,)e(one)j(can)g(easily)
f(obtain)g(from)f(\(1\))i(and)g(\(2\))253 1514 y(the)16
b(conditional)f(probabilit)o(y)f(that)h(there)i(is)f(no)f(omission)f
(inserting)i(the)g(\()p Fk(k)5 b Ft(+)s(1\)st)253 1564
y(state)15 b(giv)o(en)e(there)j(are)c Fk(k)j Ft(states)g(in)f(the)g
(table,)f(yielding)538 1696 y Fk(p)559 1702 y Fs(k)591
1696 y Ft(:=)e(Pr\()p Fk(N)739 1702 y Fs(k)761 1696 y
Ft(\))g Fi(\031)853 1645 y Fs(k)832 1657 y Ff(X)833 1745
y Fs(j)r Fj(=0)899 1638 y Ff(\022)934 1668 y Fk(l)s Fi(\000)r
Ft(1)p 934 1687 V 963 1725 a Fk(l)1010 1638 y Ff(\023)1041
1647 y Fs(j)1091 1668 y Fk(k)1114 1650 y Fs(j)p 1114
1662 18 2 v 1063 1687 96 2 v 1063 1730 a Fk(m)1099 1711
y Fs(j)r Fj(+1)p 1099 1723 60 2 v 1164 1696 a Ft(\()p
Fk(m)f Fi(\000)g Fk(k)q Ft(\))20 b Fk(:)232 b Ft(\(3\))253
1832 y(Observ)o(e)16 b(that,)e(in)g(general,)g(omissions)e(c)o(hange)j
(the)g(distribution)e(of)h Fk(C)1418 1838 y Fs(k)1438
1832 y Ft(,)g(since)h(the)253 1882 y(insertion)i(algorithm)c(stops)k
(when)g(a)f(compressed)h(v)n(alue)f(in)g(the)g(table)h(equals)f(the)253
1932 y(compressed)h(v)n(alue)e(of)g(the)h(\()p Fk(k)5
b Ft(+)t(1\)st)16 b(state.)g(Ho)o(w)o(ev)o(er,)f(w)o(e)h(can)g(use)h
(the)f(unaltered)253 1982 y Fk(C)283 1988 y Fs(k)320
1982 y Ft(distribution)h(as)f(giv)o(en)h(in)f(\(1\))h(in)g(the)g(ab)q
(o)o(v)o(e)g(calculation)f(of)g Fk(p)1367 1988 y Fs(k)1387
1982 y Ft(.)h(T)m(o)f(see)i(wh)o(y)253 2032 y(this)g(is)g(correct,)i
(imagine)15 b(that)k(w)o(e)f(altered)h(our)f(insertion)g(algorithm)e
(so)i(that)g(it)253 2082 y(alw)o(a)o(ys)e(prob)q(es)j(un)o(til)d(an)h
(empt)o(y)f(slot)h(is)g(found)g(and)g(so)g(that)g(the)h(\014nal)e
(insertion)253 2131 y(is)j(only)g(made)f(if)g(none)i(of)e(the)i(prob)q
(ed)g(slots)f(con)o(tained)g(the)h(compressed)g(v)n(alue)253
2181 y(of)15 b(the)g(\()p Fk(k)t Ft(+)s(1\)st)h(state.)f(Clearly)m(,)e
(this)i(algorithm)e(b)q(eha)o(v)o(es)j(exactly)f(the)g(same)f(w)o(a)o
(y)253 2231 y(as)k(the)h(\\old")e(insertion)h(algorithm)d(except)k(an)f
(increased)h(run-time)e(and)h(except)253 2281 y(that)f(the)h(n)o(um)o
(b)q(er)f(of)f(collisions)g(is)i(distributed)f(according)h(to)f(the)h
(unaltered)g Fk(C)1604 2287 y Fs(k)253 2331 y Ft(distribution.)209
2382 y Fg({)i Ft(No)o(w,)c(w)o(e)h(consider)h(the)g(situation)e(where)i
(w)o(e)f(insert)c Fk(n)k Ft(states)h(in)o(to)e(the)i(\(initially)253
2432 y(empt)o(y\))f(table.)f(Using)h(the)h(de\014nitions)f(of)g
Fk(N)1001 2438 y Fs(k)1039 2432 y Ft(and)g Fk(p)1144
2438 y Fs(k)1164 2432 y Ft(,)g(the)g(probabilit)o(y)f(that)h(w)o(e)893
2556 y(7)p eop
%%Page: 8 8
8 7 bop 411 194 a Ft(ha)o(v)o(e)14 b(no)f(omissions)g(inserting)h(all)d
Fk(n)j Ft(states)h(is)e(obtained)h(as)594 283 y Fk(p)615
289 y Fj(no)663 283 y Ft(:=)d(Pr\(no)k(omission)d(inserting)g
Fk(n)i Ft(states)q(\))669 345 y(=)j(Pr\()p Fk(N)816 330
y Fh(0)811 355 y Fs(n)p Fh(\000)p Fj(1)887 345 y Fi(^)9
b Fk(N)962 330 y Fh(0)957 355 y Fs(n)p Fh(\000)p Fj(2)1031
345 y Fi(^)g Fk(:)e(:)g(:)h Fi(^)h Fk(N)1201 330 y Fh(0)1196
355 y Fj(0)1215 345 y Ft(\))669 407 y(=)17 b(Pr\()p Fk(N)816
392 y Fh(0)811 418 y Fs(n)p Fh(\000)p Fj(1)889 407 y
Fi(j)11 b Fk(N)950 392 y Fh(0)945 418 y Fs(n)p Fh(\000)p
Fj(2)1020 407 y Fi(^)e Fk(:)e(:)g(:)g Fi(^)i Fk(N)1189
392 y Fh(0)1184 418 y Fj(0)1203 407 y Ft(\))j(Pr\()p
Fk(N)1329 392 y Fh(0)1324 418 y Fs(n)p Fh(\000)p Fj(2)1399
407 y Fi(^)d Fk(:)e(:)g(:)h Fi(^)h Fk(N)1569 392 y Fh(0)1564
418 y Fj(0)1583 407 y Ft(\))669 470 y(=)17 b Fk(p)739
476 y Fs(n)p Fh(\000)p Fj(1)816 470 y Ft(Pr\()p Fk(N)914
455 y Fh(0)909 480 y Fs(n)p Fh(\000)p Fj(2)984 470 y
Fi(^)9 b Fk(:)e(:)g(:)h Fi(^)h Fk(N)1154 455 y Fh(0)1149
480 y Fj(0)1168 470 y Ft(\))21 b Fk(:)411 559 y Ft(Using)14
b(the)g(ab)q(o)o(v)o(e)g(argumen)o(t)f(recursiv)o(ely)h(yields)968
685 y Fk(p)989 691 y Fj(no)1037 685 y Ft(=)1081 633 y
Fs(n)p Fh(\000)p Fj(1)1086 646 y Ff(Y)1082 735 y Fs(k)q
Fj(=0)1151 685 y Fk(p)1172 691 y Fs(k)1213 685 y Fk(:)503
b Ft(\(4\))411 814 y(By)13 b(substituting)g(\(3\))g(in)o(to)f(\(4\))g
(and)h(making)d(the)k(falling)c(factorial)i(p)q(o)o(w)o(ers)h
(explicit,)411 864 y(w)o(e)i(obtain)f(the)i(follo)o(wing)c(form)o(ula)h
(for)i(the)g(probabilit)o(y)f(that)h(there)h(are)f(no)g(omis-)411
914 y(sions)f(inserting)f Fk(n)g Ft(states)i(in)o(to)f(the)g(table)g
(to)g(b)q(e)693 1050 y Fk(p)714 1056 y Fj(no)762 1050
y Fi(\031)806 998 y Fs(n)p Fh(\000)p Fj(1)811 1011 y
Ff(Y)807 1100 y Fs(k)q Fj(=0)876 967 y Ff(2)876 1041
y(4)924 998 y Fs(k)903 1011 y Ff(X)905 1099 y Fs(j)r
Fj(=0)970 992 y Ff(\022)1006 1022 y Fk(l)s Fi(\000)r
Ft(1)p 1006 1041 71 2 v 1035 1079 a Fk(l)1082 992 y Ff(\023)1112
1000 y Fs(j)1135 1022 y Fk(m)9 b Fi(\000)h Fk(k)p 1135
1041 111 2 v 1137 1079 a(m)f Fi(\000)h Fk(j)1257 996
y Fs(j)r Fh(\000)p Fj(1)1259 1011 y Ff(Y)1259 1099 y
Fs(i)p Fj(=0)1333 1022 y Fk(k)g Fi(\000)g Fk(i)p 1326
1041 102 2 v 1326 1079 a(m)g Fi(\000)g Fk(i)1433 967
y Ff(3)1433 1041 y(5)1488 1050 y Fk(:)228 b Ft(\(5\))411
1192 y(Straigh)o(tforw)o(ard)21 b(ev)n(aluation)f(of)h(this)g(form)o
(ula)e(requires)k Fk(O)q Ft(\()p Fk(n)1466 1177 y Fj(3)1484
1192 y Ft(\))f(op)q(erations.)f(In)411 1242 y(practice,)c(w)o(e)g(need)
h(to)f(calculate)f(the)i(omission)c(probabilit)o(y)h(for)i(state)g
(spaces)i(on)411 1291 y(the)12 b(order)g(of)f(10)g(millio)o(n)e(reac)o
(hable)j(states.)g(Therefore,)g(w)o(e)g(no)o(w)f(deriv)o(e)h(an)f
(appro)o(x-)411 1341 y(imation)g(form)o(ula)g(that)j(only)g(needs)h
Fk(O)q Ft(\(1\))e(op)q(erations.)340 1426 y(F)m(or)h(this)g(appro)o
(ximation,)c(w)o(e)k(re-consider)i(\(3\))e(in)f(a)h(sligh)o(tly)e
(di\013eren)o(t)j(form,)d(namely)789 1556 y Fk(p)810
1562 y Fs(k)842 1556 y Fi(\031)907 1504 y Fs(k)886 1517
y Ff(X)887 1605 y Fs(j)r Fj(=0)953 1498 y Ff(\022)988
1528 y Fk(l)s Fi(\000)r Ft(1)p 988 1547 71 2 v 1017 1585
a Fk(l)1064 1498 y Ff(\023)1095 1506 y Fs(j)1112 1556
y Ft(Pr\()p Fk(C)1202 1562 y Fs(k)1228 1556 y Ft(=)5
b Fk(j)r Ft(\))21 b Fk(:)395 b Ft(\(6\))340 1687 y(The)15
b(righ)o(t-hand)e(side)h(is)g(an)f(instance)i(of)e(the)i(theorem)e(of)h
(total)f(probabilit)o(y)m(.)e(The)j(\\ex-)340 1737 y(p)q(ected")k(exp)q
(onen)o(t)f(of)e(the)i(term)e(\()922 1721 y Fs(l)p Fh(\000)p
Fj(1)p 922 1728 54 2 v 944 1752 a Fs(l)980 1737 y Ft(\))i(is)e(the)i
(exp)q(ected)h(v)n(alue)e(of)f Fk(C)1494 1743 y Fs(k)1514
1737 y Ft(.)h(Th)o(us,)f(w)o(e)i(ap-)340 1787 y(pro)o(ximate)874
1884 y Fk(p)895 1890 y Fs(k)927 1884 y Fi(\031)970 1826
y Ff(\022)1006 1856 y Fk(l)s Fi(\000)r Ft(1)p 1006 1875
71 2 v 1035 1913 a Fk(l)1082 1826 y Ff(\023)1112 1834
y Ft(E[)p Fk(C)1182 1840 y Fs(k)1202 1834 y Ft(])1237
1884 y Fk(:)479 b Ft(\(7\))340 1985 y(Plugging)13 b(this)h(appro)o
(ximation)d(in)o(to)i(\(4\))h(yields)812 2121 y Fk(p)833
2127 y Fj(no)882 2121 y Fi(\031)925 2062 y Ff(\022)961
2093 y Fk(l)s Fi(\000)r Ft(1)p 961 2111 V 990 2149 a
Fk(l)1037 2062 y Ff(\023)1067 2043 y(P)1111 2053 y Fe(n)p
Fd(\000)p Fc(1)1111 2086 y Fe(k)p Fc(=0)1174 2071 y Ft(E[)p
Fk(C)1244 2077 y Fs(k)1264 2071 y Ft(])1298 2121 y Fk(:)418
b Ft(\(8\))340 2232 y(This)15 b(form)o(ula)e(has)i(a)g(simple,)e(in)o
(tuitiv)o(e)h(explanation.)g(The)h(sum)f(equals)i(the)f(exp)q(ected)340
2282 y(v)n(alue)c(of)g(the)i(total)e(n)o(um)o(b)q(er)g(of)g(collisions)
f(inserting)j Fk(n)e Ft(states)i(in)o(to)e(a)g(con)o(v)o(en)o(tional)g
(hash)340 2332 y(table.)f(F)m(or)h(eac)o(h)g(of)f(these)i(collisions,)d
(w)o(e)i(ha)o(v)o(e)f(a)g(probabilit)o(y)f(of)h(\()1400
2316 y Fs(l)p Fh(\000)p Fj(1)p 1400 2323 54 2 v 1422
2346 a Fs(l)1459 2332 y Ft(\))g(that)h(no)f(omission)340
2382 y(o)q(ccurs)19 b(and)e(the)h(compressed)g(v)n(alue)f(comparison)e
(is)j(appro)o(ximately)c(indep)q(enden)o(t)19 b(of)340
2432 y(all)13 b(others.)1050 2556 y(8)p eop
%%Page: 9 9
9 8 bop 245 194 a Ft(A)15 b(closed)g(form)e(for)h(E[)p
Fk(C)647 200 y Fs(k)667 194 y Ft(])g(can,)g(for)g(example,)f(b)q(e)i
(obtained)g(from)d(the)k(form)o(ulas)c(in)183 244 y([13)o(,)h(page)h
(528],)e(yielding)713 314 y(E[)p Fk(C)783 320 y Fs(k)803
314 y Ft(])f(=)954 286 y Fk(k)p 875 304 182 2 v 875 342
a(m)e Ft(+)h(1)f Fi(\000)g Fk(k)1082 314 y(:)477 b Ft(\(9\))183
402 y(Using)13 b(this)h(form)o(ula,)d(the)k(sum)d(in)i(\(8\))g(can)g(b)
q(e)g(written)h(in)e(closed)i(form)d(as)494 473 y Fs(n)p
Fh(\000)p Fj(1)496 486 y Ff(X)495 575 y Fs(k)q Fj(=0)564
525 y Ft(E[)p Fk(C)634 531 y Fs(k)654 525 y Ft(])f(=)h(\()p
Fk(m)e Ft(+)f(1\)[)p Fk(H)908 531 y Fs(m)p Fj(+1)990
525 y Fi(\000)g Fk(H)1066 531 y Fs(m)p Fh(\000)p Fs(n)p
Fj(+1)1186 525 y Ft(])g Fi(\000)g Fk(n)21 b(;)244 b Ft(\(10\))183
645 y(where)14 b Fk(H)337 651 y Fs(n)372 645 y Ft(denotes)g(a)f
(harmonic)f(n)o(um)o(b)q(er.)g(Using)g(the)i(asymptotic)e(appro)o
(ximation)e(for)183 695 y Fk(H)218 701 y Fs(n)254 695
y Ft(giv)o(en,)j(for)g(example,)f(in)i([8)o(,)f(\(9.28\)])g(w)o(e)h
(obtain)634 798 y Fk(H)669 804 y Fs(n)703 798 y Fi(\031)e
Ft(ln)6 b Fk(n)j Ft(+)h Fk(\015)i Ft(+)956 770 y(1)p
943 788 46 2 v 943 826 a(2)p Fk(n)1003 798 y Fi(\000)1082
770 y Ft(1)p 1050 788 86 2 v 1050 826 a(12)p Fk(n)1117
814 y Fj(2)1160 798 y Fk(:)378 b Ft(\(11\))183 895 y(Substituting)13
b(\(10\))f(and)h(\(11\))g(in)o(to)f(\(8\),)h(w)o(e)g(obtain)f(the)i
(\014nal)e(result)i(of)e(our)h(appro)o(xima-)183 945
y(tion)g(e\013ort,)h(namely)245 1075 y Fk(p)266 1081
y Fj(no)315 1075 y Fi(\031)h Ft(~)-25 b Fk(p)379 1081
y Fj(no)428 1075 y Ft(:=)483 1016 y Ff(\022)519 1047
y Fk(l)s Fi(\000)r Ft(1)p 519 1065 71 2 v 548 1103 a
Fk(l)595 1016 y Ff(\023)625 1025 y Fj(\()p Fs(m)p Fj(+1\))12
b(ln)q(\()800 1012 y Fe(m)p Fc(+1)p 780 1019 102 2 v
780 1035 a Fe(m)p Fd(\000)p Fe(n)p Fc(+1)886 1025 y Fj(\))c
Fh(\000)1005 1014 y Fe(n)p 945 1019 139 2 v 945 1036
a Fc(2\()p Fe(m)p Fd(\000)p Fe(n)p Fc(+1\))1096 1025
y Fj(+)1176 1012 y Fc(2)p Fe(n)p Fc(+2)p Fe(mn)p Fd(\000)p
Fe(n)1326 1003 y Fc(2)p 1134 1019 253 2 v 1134 1040 a(12\()p
Fe(m)p Fc(+1\)\()p Fe(m)p Fd(\000)p Fe(n)p Fc(+)q(1\))1367
1034 y(2)1399 1025 y Fh(\000)f Fs(n)1476 1075 y Fk(:)62
b Ft(\(12\))183 1183 y(Ob)o(viously)m(,)11 b(the)i(ev)n(aluation)f(of)g
(this)h(form)o(ula)d(only)i(requires)i Fk(O)q Ft(\(1\))f(op)q(erations)
g(and)f(it)h(is)183 1233 y(th)o(us)h(useful)g(for)g(handling)e(our)i
(\\arbitrarily")e(large)i(v)n(alues)g(of)e Fk(n)p Ft(.)245
1282 y(In)18 b(the)g(remainder)g(of)f(this)h(pap)q(er,)g(w)o(e)g(will)e
(only)i(consider)g(the)h Fm(omission)f Ft(proba-)183
1332 y(bilit)o(y)e(of)i(our)g(probabilistic)f(v)o(eri\014cation)g(sc)o
(heme.)h(Clearly)m(,)e(this)i(probabilit)o(y)f(can)h(b)q(e)183
1382 y(calculated)c(as)324 1465 y Fk(p)345 1471 y Fj(om)403
1465 y Ft(:=)d(Pr\(one)k(or)f(more)f(omissions)f(inserting)i
Fk(n)f Ft(states)r(\))e(=)h(1)d Fi(\000)h Fk(p)1413 1471
y Fj(no)1470 1465 y Fk(:)183 1587 y Fg(Upp)q(er)k(Bound)183
1668 y Ft(An)e(upp)q(er)h(b)q(ound)g(for)f(the)h(omission)d(probabilit)
o(y)h(is)h(deriv)o(ed)h(in)f(the)g(app)q(endix)h(yielding)441
1769 y Fk(p)462 1775 y Fj(om)519 1769 y Fi(\024)j Ft(^)-25
b Fk(p)584 1775 y Fj(om)642 1769 y Ft(:=)702 1741 y(1)p
702 1759 21 2 v 706 1797 a Fk(l)744 1769 y Ft([)o(\()p
Fk(m)10 b Ft(+)g(1\))d([)p Fk(H)950 1775 y Fs(m)p Fj(+1)1031
1769 y Fi(\000)j Fk(H)1108 1775 y Fs(m)p Fh(\000)p Fs(n)p
Fj(+1)1227 1769 y Ft(])f Fi(\000)h Fk(n)p Ft(])27 b Fk(:)184
b Ft(\(13\))183 1903 y Fg(Sim)o(ulat)o(ion)12 b(Results)183
1983 y Ft(W)m(e)17 b(wrote)g(a)g(sim)o(ulator)f(for)h(the)g
(probabilistic)g(v)o(eri\014cation)g(sc)o(heme)g(to)g(assess)i(if)e
(the)183 2033 y(theoretical)h(results)i(for)e(the)g(omission)f
(probabilit)o(y)f(can)j(b)q(e)f(ac)o(hiev)o(ed)h(in)f(a)g(practical)183
2083 y(implem)o(en)o(tation.)9 b(Here,)j(w)o(e)h(only)e(sho)o(w)h
(results)h(for)f(an)f(example)g(with)h(a)g(small)d(n)o(um)o(b)q(er)183
2133 y(of)16 b(slots)g(in)g(the)h(hash)g(table.)f(Results)h(running)f
(the)h(real)g(v)o(eri\014er)g(on)f(larger)g(examples)183
2183 y(can)e(b)q(e)g(found)g(in)f(Sect.)8 b(6.)245 2232
y(One)16 b Fm(exp)n(eriment)i Ft(of)d(the)g(sim)o(ulator)e(consists)j
(of)f(generating)d Fk(n)j Ft(states)h(with)f(a)g(ran-)183
2282 y(dom)g(n)o(um)o(b)q(er)g(generator)j(and)e(inserting)h(the)g
(compressed)g(v)n(alues)f(in)o(to)g(a)g(hash)h(table.)183
2332 y(The)d(exp)q(erimen)o(t)g(is)g(rep)q(eated)h Fk(N)k
Ft(times)13 b(with)h(di\013eren)o(t)h(states.)g(Finally)m(,)d(the)j
(omission)183 2382 y(probabilit)o(y)10 b(is)h(calculated)h(as)f(the)i
(n)o(um)o(b)q(er)d(of)h(exp)q(erimen)o(ts)h(where)h(omissions)d(o)q
(ccurred)183 2432 y(divided)j(b)o(y)f Fk(N)5 b Ft(.)893
2556 y(9)p eop
%%Page: 10 10
10 9 bop 403 194 a Ft(The)13 b(sim)o(ulation)d(results)k(discussed)h
(in)d(the)h(follo)o(wing)e(w)o(ere)i(obtained)g(b)o(y)g(rep)q(eating)
340 244 y(eac)o(h)k(exp)q(erimen)o(t)e Fk(N)20 b Ft(=)15
b(10)h(milli)o(on)d(times,)h(using)i(a)f(hash)h(table)g(with)g
Fk(m)f Ft(=)g(199)g(slots)340 293 y(and)d(using)f Fk(b)g
Ft(=)h(10)f(bits)g(for)g(the)h(compressed)g(v)n(alues.)f(The)h(n)o(um)o
(b)q(er)e(of)h(states)j Fk(n)d Ft(inserted)340 343 y(in)o(to)19
b(the)h(table)f(w)o(as)h(used)g(as)f(a)g(parameter.)g(Sim)o(ulation)d
(runs)k(w)o(ere)h(p)q(erformed)e(for)340 393 y Fk(n)12
b Ft(=)g(19)p Fk(;)7 b Ft(39)p Fk(;)g(:)g(:)f(:)t(;)h
Ft(199.)385 562 y
 21351200 10893473 0 15787622 40258437 36311531 startTexFig
 385 562 a
%%BeginDocument: math.pro
%
% Original name of this file: mathematica2.1.pro
%
% This prolog was derived the output of 'psfix'.  To properly use it,
% the line 'Mathdict begin' must be placed just before the line
% 'MathPictureStart' in the Encapsulated PostScript file.
%
% All alterations made by me are noted by comments beginning '%T%'
%
%						-- Tony Guzzi [26-Jan-93]

/Mathdict 150 dict def
Mathdict begin
  /Mlmarg	1.0 72 mul def
  /Mrmarg	1.0 72 mul def
  /Mbmarg	1.0 72 mul def
  /Mtmarg	1.0 72 mul def
  /Mwidth	8.5 72 mul def
  /Mheight	11 72 mul def
  /Mtransform	{  } bind def
  /Mnodistort	true def
  /Mfixwid	true	def
  /Mfixdash	false def
  /Mrot		0	def
  /Mpstart { MathPictureStart } bind def
  /Mpend { MathPictureEnd } bind def
  /Mscale { 0 1 0 1 5 -1 roll MathScale } bind def
  /ISOLatin1Encoding dup where
  { pop pop }
  {
   [
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash
    /zero /one /two /three /four /five /six /seven
    /eight /nine /colon /semicolon /less /equal /greater /question
    /at /A /B /C /D /E /F /G
    /H /I /J /K /L /M /N /O
    /P /Q /R /S /T /U /V /W
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
    /quoteleft /a /b /c /d /e /f /g
    /h /i /j /k /l /m /n /o
    /p /q /r /s /t /u /v /w
    /x /y /z /braceleft /bar /braceright /asciitilde /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
    /dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section
    /dieresis /copyright /ordfeminine /guillemotleft
    /logicalnot /hyphen /registered /macron
    /degree /plusminus /twosuperior /threesuperior
    /acute /mu /paragraph /periodcentered
    /cedilla /onesuperior /ordmasculine /guillemotright
    /onequarter /onehalf /threequarters /questiondown
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
   ] def
  } ifelse
  /MFontDict 50 dict def
  /MStrCat {
    exch
    dup length
    2 index length add
    string
    dup 3 1 roll
    copy
    length
    exch dup
    4 2 roll exch
    putinterval
  } def
  /MCreateEncoding
  {
    1 index
    255 string cvs
    (-) MStrCat
    1 index MStrCat
    cvn exch
    (Encoding) MStrCat
    cvn dup where
    { exch get } { pop StandardEncoding } ifelse
    3 1 roll
    dup MFontDict exch known not
    {
      1 index findfont
      dup length dict
      begin
       {1 index /FID ne {def} {pop pop} ifelse } forall
       /Encoding 3 index def
       currentdict
      end
      1 index exch definefont pop
      MFontDict 1 index
      null put
    }
    if
    exch pop
    exch pop
  } def
  /ISOLatin1 { (ISOLatin1) MCreateEncoding } def
  /ISO8859 { (ISOLatin1) MCreateEncoding } def
  /Mcopyfont {
    dup
    maxlength
    dict
    exch
    { 1 index /FID eq { pop pop } { 2 index 3 1 roll put } ifelse } forall
  } def
  /Plain	/Courier findfont Mcopyfont definefont pop
  /Bold	/Courier-Bold findfont Mcopyfont definefont pop
  /Italic /Courier-Oblique findfont Mcopyfont definefont pop
  /MathPictureStart {
    gsave
    Mtransform
    Mlmarg
    Mbmarg
    translate
    Mwidth
    Mlmarg Mrmarg add
    sub
    /Mwidth exch def
    Mheight
    Mbmarg Mtmarg add
    sub
    /Mheight exch def
    /Mtmatrix matrix currentmatrix def
    /Mgmatrix matrix currentmatrix def
  } bind def
  /MathPictureEnd { grestore
		    %T% Next line added by Tony [26-Jan-93]
		    end
		    } bind def
  /MFill { 0 0 moveto
	   Mwidth 0 lineto
	   Mwidth Mheight lineto
	   0 Mheight lineto
           fill
          } bind def
  /MPlotRegion {
    3 index
    Mwidth mul
    2 index
    Mheight mul
    translate
    exch sub
    Mheight mul
    /Mheight exch def
    exch sub
    Mwidth mul
    /Mwidth exch def
  } bind def
  /MathSubStart {
    Momatrix
    Mgmatrix Mtmatrix
    Mwidth Mheight
    7 -2 roll
    moveto
    Mtmatrix setmatrix
    currentpoint
    Mgmatrix setmatrix
    9 -2 roll
    moveto
    Mtmatrix setmatrix
    currentpoint
    2 copy translate
    /Mtmatrix matrix currentmatrix def
    3 -1 roll
    exch sub
    /Mheight exch def
    sub
    /Mwidth exch def
  } bind def
  /MathSubEnd {
    /Mheight exch def
    /Mwidth exch def
    /Mtmatrix exch def
    dup setmatrix
    /Mgmatrix exch def
    /Momatrix exch def
  } bind def
  /Mdot    { moveto 0 0 rlineto stroke } bind def
  /Mtetra  { moveto lineto lineto lineto fill } bind def
  /Metetra { moveto lineto lineto lineto closepath
    	     gsave fill grestore 0 setgray stroke } bind def
  /Mistroke {
    flattenpath
    0 0 0
    { 4 2 roll pop pop }
    {
     4 -1 roll
     2 index
     sub dup mul
     4 -1 roll
     2 index
     sub dup mul
     add sqrt
     4 -1 roll
     add
     3 1 roll
    }
    { stop }
    { stop }
    pathforall
    pop pop
    currentpoint
    stroke
    moveto
    currentdash
    3 -1 roll
    add
    setdash
  } bind def
  /Mfstroke { stroke currentdash pop 0 setdash } bind def
  /Mrotsboxa {
    gsave
    dup
    /Mrot exch def
    Mrotcheck
    Mtmatrix
    dup
    setmatrix
    7 1 roll
    4 index
    4 index
    translate
    rotate
    3 index
    -1 mul
    3 index
    -1 mul
    translate
    /Mtmatrix matrix currentmatrix def
    grestore
    Msboxa
    3  -1 roll
    /Mtmatrix exch def
    /Mrot 0 def
  } bind def
  /Msboxa {
    newpath
    5 -1 roll
    Mvboxa
    pop
    Mboxout
    6 -1 roll
    5 -1 roll
    4 -1 roll
    Msboxa1
    5 -3 roll
    Msboxa1
    Mboxrot
    [
      7 -2 roll 2 copy
      [ 3 1 roll 10 -1 roll 9 -1 roll ]
      6 1 roll 5 -2 roll
    ]
  } bind def
  /Msboxa1 {
    sub
    2 div
    dup
    2 index
    1 add
    mul
    3 -1 roll
    -1 add
    3 -1 roll
    mul
  } bind def
  /Mvboxa {
    Mfixwid
    { Mvboxa1 }
    {
     dup
     Mwidthcal
     0 exch
     { add }
     forall
     exch
     Mvboxa1
     4 index
     7 -1 roll
     add
     4 -1 roll
     pop
     3 1 roll
    }
    ifelse
  } bind def
  /Mvboxa1 {
    gsave
    newpath
    [
      true
      3 -1 roll
      {
       Mbbox
       5 -1 roll
       { 0 5 1 roll }
       {
        7 -1 roll
        exch sub
        (m) stringwidth pop
        .3 mul
        sub
        7 1 roll
        6 -1 roll
        4 -1 roll
        Mmin
        3 -1 roll
        5 index
        add
        5 -1 roll
        4 -1 roll
        Mmax
        4 -1 roll
       }
       ifelse
       false
      }
      forall
      { stop } if
      counttomark
      1 add
      4 roll
    ]
    grestore
  } bind def
  /Mbbox {
    1 dict begin
    0 0 moveto
    /temp (T) def
    { gsave
      currentpoint newpath moveto
      temp 0 3 -1 roll put temp
      false charpath flattenpath currentpoint
      pathbbox
      grestore moveto lineto moveto
    } forall
    pathbbox
    newpath
    end
  } bind def
  /Mmin { 2 copy gt { exch } if pop } bind def
  /Mmax { 2 copy lt { exch } if pop } bind def
  /Mrotshowa {
    dup
    /Mrot exch def
    Mrotcheck
    Mtmatrix
    dup
    setmatrix
    7 1 roll
    4 index
    4 index
    translate
    rotate
    3 index
    -1 mul
    3 index
    -1 mul
    translate
    /Mtmatrix matrix currentmatrix def
    Mgmatrix setmatrix
    Mshowa
    /Mtmatrix exch def
    /Mrot 0 def
  } bind def
  /Mshowa {
    4 -2 roll
    moveto
    2 index
    Mtmatrix setmatrix
    Mvboxa
    7 1 roll
    Mboxout
    6 -1 roll
    5 -1 roll
    4 -1 roll
    Mshowa1
    4 1 roll
    Mshowa1
    rmoveto
    currentpoint
    Mfixwid
    { Mshowax }
    { Mshoway }
    ifelse
    pop pop pop pop
    Mgmatrix setmatrix
  } bind def
  /Mshowax {	
    0 1
    4 index length
    -1 add
    {
     2 index
     4 index
     2 index
     get
     3 index
     add
     moveto
     4 index
     exch get
     Mfixdash { Mfixdashp } if
     show
    } for
  } bind def
  /Mfixdashp {
    dup
    length
    1
    gt
    1 index
    true exch
    { 45 eq and } forall
    and
    {
     gsave
     (--) stringwidth pop
     (-)  stringwidth pop
     sub
     2 div
     0 rmoveto
     dup
     length
     1 sub
     { (-) show } repeat
    grestore
    }
    if
  } bind def	
  /Mshoway {
    3 index
    Mwidthcal
    5 1 roll
    0 1
    4 index length
    -1 add
    {
      2 index
      4 index
      2 index
      get
      3 index
      add
      moveto
      4 index
      exch get
      [
        6 index
        aload
        length
        2 add
        -1 roll
        {
          pop
          Strform
          stringwidth
          pop
          neg 
          exch
          add
          0 rmoveto
        }
        exch
        kshow
        cleartomark
        } for
        pop	
  } bind def
  /Mwidthcal {
    [ exch { Mwidthcal1 } forall ]
    [
     exch
     dup
     Maxlen
     -1 add
     0 1
     3 -1 roll
     {
     [
      exch
      2 index
      { 1 index Mget exch } forall		
      pop
      Maxget
      exch
     }
     for
     pop
     ]
     Mreva
  } bind def
  /Mreva { [ exch aload length -1 1 {1 roll} for ] } bind def
  /Mget	{
    1 index
    length
    -1 add
    1 index
    ge { get } { pop pop 0 } ifelse
  } bind def
  /Maxlen	{ [ exch { length } forall Maxget } bind def
  /Maxget	{ counttomark -1 add 1 1 3 -1 roll { pop Mmax } for exch pop } bind def
  /Mwidthcal1 { [ exch { Strform stringwidth pop } forall ] } bind def
  /Strform { /tem (x) def tem 0 3 -1 roll put tem } bind def
  /Mshowa1 { 2 copy add 4 1 roll sub mul sub -2 div } bind def
  /MathScale {
    Mwidth
    Mheight
    Mlp
    translate
    scale
    /yscale exch def
    /ybias exch def
    /xscale exch def
    /xbias exch def
    /Momatrix
    xscale yscale matrix scale
    xbias ybias matrix translate
    matrix concatmatrix def
    /Mgmatrix
    matrix currentmatrix
    def
  } bind def
  /Mlp {
    3 copy
    Mlpfirst
    {
      Mnodistort { Mmin dup } if
      4 index
      2 index
      2 index
      Mlprun
      11 index
      11 -1 roll
      10 -4 roll
      Mlp1
      8 index
      9 -5 roll
      Mlp1
      4 -1 roll
      and
      { exit } if
      3 -1 roll
      pop pop
    } loop
    exch
    3 1 roll
    7 -3 roll
    pop pop pop
  } bind def
  /Mlpfirst {
    3 -1 roll
    dup length
    2 copy
    -2 add
    get
    aload
    pop pop pop
    4 -2 roll
    -1 add
    get
    aload
    pop pop pop
    6 -1 roll
    3 -1 roll
    5 -1 roll
    sub
    div
    4 1 roll
    exch sub
    div
  } bind def
  /Mlprun {
    2 copy
    4 index
    0 get
    dup
    4 1 roll
    Mlprun1
    3 copy
    8 -2 roll
    9 -1 roll
    {
      3 copy
      Mlprun1
      3 copy
      11 -3 roll
      /gt Mlpminmax
      8 3 roll
      11 -3 roll
      /lt Mlpminmax
      8 3 roll
    } forall
    pop pop pop pop
    3 1 roll
    pop pop
    aload pop
    5 -1 roll
    aload pop
    exch
    6 -1 roll
    Mlprun2
    8 2 roll
    4 -1 roll
    Mlprun2
    6 2 roll
    3 -1 roll
    Mlprun2
    4 2 roll
    exch
    Mlprun2
    6 2 roll
  } bind def
  /Mlprun1 {
    aload pop
    exch
    6 -1 roll
    5 -1 roll
    mul add
    4 -2 roll
    mul
    3 -1 roll
    add
  } bind def
  /Mlprun2 { 2 copy add 2 div 3 1 roll exch sub } bind def
  /Mlpminmax {
    cvx
    2 index
    6 index
    2 index
    exec { 7 -3 roll 4 -1 roll } if
    1 index
    5 index
    3 -1 roll
    exec
    { 4  1 roll pop
      5 -1 roll
      aload
      pop pop
      4 -1 roll
      aload pop
      [
       8 -2 roll pop
       5 -2 roll pop
       6 -2 roll pop
       5 -1 roll
      ]
      4 1 roll pop
    }
    { pop pop pop }
    ifelse
  } bind def
  /Mlp1 {
    5 index
    3 index	sub
    5 index
    2 index mul
    1 index
    le
    1 index
    0 le
    or
    dup
    not
    { 1 index 3 index div .99999 mul 8 -1 roll pop 7 1 roll } if
    8 -1 roll
    2 div
    7 -2 roll
    pop sub
    5 index
    6 -3 roll
    pop pop
    mul sub
    exch
  } bind def
  /intop 0 def
  /inrht 0 def
  /inflag 0 def
  /outflag 0 def
  /xadrht 0 def
  /xadlft 0 def
  /yadtop 0 def
  /yadbot 0 def
  /Minner {
    outflag 1 eq { /outflag 0 def /intop 0 def /inrht 0 def } if		
    5 index
    gsave
    Mtmatrix setmatrix
    Mvboxa pop
    grestore
    3 -1 roll
    pop
    dup
    intop gt { /intop exch def } { pop } ifelse
    dup
    inrht gt { /inrht exch def } { pop } ifelse
    pop
    /inflag 1 def
  } bind def
  /Mouter {
    /xadrht 0 def
    /xadlft 0 def
    /yadtop 0 def
    /yadbot 0 def
    inflag
    1 eq
    {
     dup 0 lt { dup intop mul neg /yadtop exch def } if
     dup 0 gt { dup intop mul /yadbot exch def } if
     pop
     dup 0 lt { dup inrht mul neg /xadrht exch def } if
     dup 0 gt { dup inrht mul /xadlft exch def } if
     pop
     /outflag 1 def
    }
    { pop pop}
    ifelse
    /inflag 0 def
    /inrht 0 def
    /intop 0 def
  } bind def	
  /Mboxout {
    outflag
    1 eq {
     4 -1 roll
     xadlft
     leadjust
     add
     sub
     4 1 roll
     3 -1
     roll
     yadbot
     leadjust
     add
     sub
     3 1 roll
     exch
     xadrht
     leadjust
     add
     add
     exch
     yadtop
     leadjust
     add
     add
     /outflag 0 def
     /xadlft 0 def
     /yadbot 0 def
     /xadrht 0 def
     /yadtop 0 def
    } if
  } bind def
  /leadjust { (m) stringwidth pop .5 mul } bind def
  /Mrotcheck {
    dup
    90
    eq
    {
     yadbot
     /yadbot xadrht def	
     /xadrht yadtop def
     /yadtop xadlft def
     /xadlft exch def
    } if
    dup
    cos
    1 index
    sin
    Checkaux
    dup
    cos
    1 index
    sin neg
    exch
    Checkaux
    3 1 roll
    pop pop
  } bind def
  /Checkaux { 4 index exch 4 index mul 3 1 roll mul add 4 1 roll } bind def
  /Mboxrot {
    Mrot
    90 eq  { brotaux 4 2 roll } if
    Mrot
    180 eq { 4 2 roll brotaux 4 2 roll brotaux }	if
    Mrot
    270 eq { 4 2 roll brotaux } if
  } bind def
  /brotaux { neg exch neg } bind def
  /Mabsproc {
    0
    matrix defaultmatrix
    dtransform idtransform
    dup mul exch
    dup mul
    add sqrt
  } bind def
  /Mabswid { Mabsproc setlinewidth	} bind def
  /Mabsdash {
    exch
    [ exch { Mabsproc } forall ]
    exch
    setdash
  } bind def
  /MBeginOrig { Momatrix concat} bind def
  /MEndOrig { Mgmatrix setmatrix} bind def
  /sampledsound where
  { pop}
  { /sampledsound {
      exch
      pop
      exch
      5 1 roll
      mul
      4 idiv
      mul
      2 idiv
      exch pop
      exch
      /Mtempproc exch def
      { Mtempproc pop} repeat
    } bind def
  } ifelse
  /g { setgray} bind def
  /k { setcmykcolor} bind def
  /m { moveto} bind def
  /p { gsave} bind def
  /r { setrgbcolor} bind def
  /w { setlinewidth} bind def
  /C { curveto} bind def
  /F { fill} bind def
  /L { lineto} bind def
  /P { grestore} bind def
  /s { stroke} bind def
  /setcmykcolor where
  { pop}
  { /setcmykcolor {
      4 1 roll
      [ 4 1 roll ]
      {
       1 index sub
       1 sub neg
       dup
       0 lt { pop 0 } if
       dup
       1 gt { pop 1 } if
       exch
      } forall
      pop
      setrgbcolor
    } bind def
  } ifelse
  /Mcharproc { currentfile (x) readhexstring pop 0 get exch div } bind def
  /Mshadeproc {
    dup
    3 1
    roll
    { dup Mcharproc 3 1 roll } repeat
    1 eq { setgray }
         { 3 eq { setrgbcolor }
  	      { setcmykcolor }
  	      ifelse
         }
         ifelse
  } bind def
  /Mrectproc {
    3 index 2 index moveto
    2 index 3 -1 roll lineto
    dup 3 1 roll lineto
    lineto
    fill
  } bind def
  /Mcolorimage
  {
    7 1
    roll
    pop
    pop
    matrix
    invertmatrix
    concat
    2 exch exp
    1 sub
    3 1 roll
    1 1
    2 index
    {
      1 1
      4 index
      {
        dup 1 sub exch 2 index
        dup 1 sub exch 7 index
        9 index
        Mshadeproc
        Mrectproc
      } for
      pop
    } for
    pop pop pop pop
  } bind def
  /Mimage
  {
    pop
    matrix
    invertmatrix
    concat
    2 exch exp
    1 sub
    3 1 roll
    1 1
    2 index
    {
      1 1
      4 index
      {
        dup 1 sub exch 2 index
        dup 1 sub exch 7 index
        Mcharproc
        setgray
        Mrectproc
      } for
      pop
    } for
    pop pop pop
  } bind def
%T% Next line added by Tony [26-Jan-93]
end
%%EndDocument
 385 562 a
%%BeginDocument: fi:SimComp1.eps
Mathdict begin
MathPictureStart
/Courier findfont 13  scalefont  setfont
% Scaling calculations
0.0238095 0.00478583 0.0147151 0.588604 [
[(0)] .02381 0 0 2 0 Minner Mrotsboxa
[(50)] .2631 0 0 2 0 Minner Mrotsboxa
[(100)] .50239 0 0 2 0 Minner Mrotsboxa
[(150)] .74168 0 0 2 0 Minner Mrotsboxa
[(200)] .98098 0 0 2 0 Minner Mrotsboxa
[(number of states \(n\))] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(0)] -0.0125 .01472 1 0 0 Minner Mrotsboxa
[(0.2)] -0.0125 .13244 1 0 0 Minner Mrotsboxa
[(0.4)] -0.0125 .25016 1 0 0 Minner Mrotsboxa
[(0.6)] -0.0125 .36788 1 0 0 Minner Mrotsboxa
[(0.8)] -0.0125 .4856 1 0 0 Minner Mrotsboxa
[(1)] -0.0125 .60332 1 0 0 Minner Mrotsboxa
[(omission probability)] -0.0125 .30902 1 0 90 -1 0 Mouter Mrotsboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.02381 0 m
.02381 .00625 L
s
P
[(0)] .02381 0 0 2 0 Minner Mrotshowa
p
.002 w
.2631 0 m
.2631 .00625 L
s
P
[(50)] .2631 0 0 2 0 Minner Mrotshowa
p
.002 w
.50239 0 m
.50239 .00625 L
s
P
[(100)] .50239 0 0 2 0 Minner Mrotshowa
p
.002 w
.74168 0 m
.74168 .00625 L
s
P
[(150)] .74168 0 0 2 0 Minner Mrotshowa
p
.002 w
.98098 0 m
.98098 .00625 L
s
P
[(200)] .98098 0 0 2 0 Minner Mrotshowa
p
.001 w
.07167 0 m
.07167 .00375 L
s
P
p
.001 w
.11953 0 m
.11953 .00375 L
s
P
p
.001 w
.16738 0 m
.16738 .00375 L
s
P
p
.001 w
.21524 0 m
.21524 .00375 L
s
P
p
.001 w
.31096 0 m
.31096 .00375 L
s
P
p
.001 w
.35882 0 m
.35882 .00375 L
s
P
p
.001 w
.40668 0 m
.40668 .00375 L
s
P
p
.001 w
.45453 0 m
.45453 .00375 L
s
P
p
.001 w
.55025 0 m
.55025 .00375 L
s
P
p
.001 w
.59811 0 m
.59811 .00375 L
s
P
p
.001 w
.64597 0 m
.64597 .00375 L
s
P
p
.001 w
.69383 0 m
.69383 .00375 L
s
P
p
.001 w
.78954 0 m
.78954 .00375 L
s
P
p
.001 w
.8374 0 m
.8374 .00375 L
s
P
p
.001 w
.88526 0 m
.88526 .00375 L
s
P
p
.001 w
.93312 0 m
.93312 .00375 L
s
P
[(number of states \(n\))] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .01472 m
.00625 .01472 L
s
P
[(0)] -0.0125 .01472 1 0 0 Minner Mrotshowa
p
.002 w
0 .13244 m
.00625 .13244 L
s
P
[(0.2)] -0.0125 .13244 1 0 0 Minner Mrotshowa
p
.002 w
0 .25016 m
.00625 .25016 L
s
P
[(0.4)] -0.0125 .25016 1 0 0 Minner Mrotshowa
p
.002 w
0 .36788 m
.00625 .36788 L
s
P
[(0.6)] -0.0125 .36788 1 0 0 Minner Mrotshowa
p
.002 w
0 .4856 m
.00625 .4856 L
s
P
[(0.8)] -0.0125 .4856 1 0 0 Minner Mrotshowa
p
.002 w
0 .60332 m
.00625 .60332 L
s
P
[(1)] -0.0125 .60332 1 0 0 Minner Mrotshowa
p
.001 w
0 .03826 m
.00375 .03826 L
s
P
p
.001 w
0 .0618 m
.00375 .0618 L
s
P
p
.001 w
0 .08535 m
.00375 .08535 L
s
P
p
.001 w
0 .10889 m
.00375 .10889 L
s
P
p
.001 w
0 .15598 m
.00375 .15598 L
s
P
p
.001 w
0 .17952 m
.00375 .17952 L
s
P
p
.001 w
0 .20307 m
.00375 .20307 L
s
P
p
.001 w
0 .22661 m
.00375 .22661 L
s
P
p
.001 w
0 .2737 m
.00375 .2737 L
s
P
p
.001 w
0 .29724 m
.00375 .29724 L
s
P
p
.001 w
0 .32079 m
.00375 .32079 L
s
P
p
.001 w
0 .34433 m
.00375 .34433 L
s
P
p
.001 w
0 .39142 m
.00375 .39142 L
s
P
p
.001 w
0 .41497 m
.00375 .41497 L
s
P
p
.001 w
0 .43851 m
.00375 .43851 L
s
P
p
.001 w
0 .46205 m
.00375 .46205 L
s
P
p
.001 w
0 .50914 m
.00375 .50914 L
s
P
p
.001 w
0 .53269 m
.00375 .53269 L
s
P
p
.001 w
0 .55623 m
.00375 .55623 L
s
P
p
.001 w
0 .57977 m
.00375 .57977 L
s
P
[(omission probability)] -0.0125 .30902 1 0 90 -1 0 Mouter Mrotshowa
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.02381 .61178 m
.02381 .61803 L
s
P
p
.002 w
.2631 .61178 m
.2631 .61803 L
s
P
p
.002 w
.50239 .61178 m
.50239 .61803 L
s
P
p
.002 w
.74168 .61178 m
.74168 .61803 L
s
P
p
.002 w
.98098 .61178 m
.98098 .61803 L
s
P
p
.001 w
.07167 .61428 m
.07167 .61803 L
s
P
p
.001 w
.11953 .61428 m
.11953 .61803 L
s
P
p
.001 w
.16738 .61428 m
.16738 .61803 L
s
P
p
.001 w
.21524 .61428 m
.21524 .61803 L
s
P
p
.001 w
.31096 .61428 m
.31096 .61803 L
s
P
p
.001 w
.35882 .61428 m
.35882 .61803 L
s
P
p
.001 w
.40668 .61428 m
.40668 .61803 L
s
P
p
.001 w
.45453 .61428 m
.45453 .61803 L
s
P
p
.001 w
.55025 .61428 m
.55025 .61803 L
s
P
p
.001 w
.59811 .61428 m
.59811 .61803 L
s
P
p
.001 w
.64597 .61428 m
.64597 .61803 L
s
P
p
.001 w
.69383 .61428 m
.69383 .61803 L
s
P
p
.001 w
.78954 .61428 m
.78954 .61803 L
s
P
p
.001 w
.8374 .61428 m
.8374 .61803 L
s
P
p
.001 w
.88526 .61428 m
.88526 .61803 L
s
P
p
.001 w
.93312 .61428 m
.93312 .61803 L
s
P
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 .01472 m
1 .01472 L
s
P
p
.002 w
.99375 .13244 m
1 .13244 L
s
P
p
.002 w
.99375 .25016 m
1 .25016 L
s
P
p
.002 w
.99375 .36788 m
1 .36788 L
s
P
p
.002 w
.99375 .4856 m
1 .4856 L
s
P
p
.002 w
.99375 .60332 m
1 .60332 L
s
P
p
.001 w
.99625 .03826 m
1 .03826 L
s
P
p
.001 w
.99625 .0618 m
1 .0618 L
s
P
p
.001 w
.99625 .08535 m
1 .08535 L
s
P
p
.001 w
.99625 .10889 m
1 .10889 L
s
P
p
.001 w
.99625 .15598 m
1 .15598 L
s
P
p
.001 w
.99625 .17952 m
1 .17952 L
s
P
p
.001 w
.99625 .20307 m
1 .20307 L
s
P
p
.001 w
.99625 .22661 m
1 .22661 L
s
P
p
.001 w
.99625 .2737 m
1 .2737 L
s
P
p
.001 w
.99625 .29724 m
1 .29724 L
s
P
p
.001 w
.99625 .32079 m
1 .32079 L
s
P
p
.001 w
.99625 .34433 m
1 .34433 L
s
P
p
.001 w
.99625 .39142 m
1 .39142 L
s
P
p
.001 w
.99625 .41497 m
1 .41497 L
s
P
p
.001 w
.99625 .43851 m
1 .43851 L
s
P
p
.001 w
.99625 .46205 m
1 .46205 L
s
P
p
.001 w
.99625 .50914 m
1 .50914 L
s
P
p
.001 w
.99625 .53269 m
1 .53269 L
s
P
p
.001 w
.99625 .55623 m
1 .55623 L
s
P
p
.001 w
.99625 .57977 m
1 .57977 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
[ .005 .02 ] 0 setdash
.004 w
.11474 .10574 m
.21046 .32048 L
.30617 .49618 L
.40189 .5765 L
.49761 .59892 L
.59332 .60285 L
.68904 .60329 L
.78476 .60332 L
.88047 .60332 L
.97619 .60332 L
s
P
.004 w
.11474 .01524 m
.21046 .01715 L
.30617 .02084 L
.40189 .02675 L
.49761 .03565 L
.59332 .04875 L
.68904 .06815 L
.78476 .09789 L
.88047 .15001 L
.97619 .32627 L
s
p
[ .02 .02 ] 0 setdash
.11474 .01524 m
.21046 .01717 L
.30617 .02087 L
.40189 .0269 L
.49761 .03608 L
.59332 .04982 L
.68904 .0707 L
.78476 .10444 L
.88047 .16857 L
.97619 .46204 L
s
P
P
% End of Graphics
MathPictureEnd
%%EndDocument

 endTexFig
 340 1310 a Fp(Fig.)g(2.)13 b Fr(Omissions)i(probabiliti)q(es)g
(obtained)g(from)d(the)h(sim)o(ulation)i(\(solid\),)f(the)f(upp)q(er)h
(b)q(ound)340 1355 y(\(dashed\))g(and)g(W)m(olp)q(er)h(and)e(Lero)o
(y's)g(form)o(ula)h(\(dotted\))403 1568 y Ft(Fig.)5 b(2)18
b(compares)f(the)i(omission)c(probabilities)i(for)g(W)m(olp)q(er)h(and)
f(Lero)o(y's)h(form)o(ula)340 1618 y(and)11 b(our)g(upp)q(er)h(b)q
(ound)f(\(13\))g(with)f(the)i(sim)o(ulation)c(results.)j(Observ)o(e)i
(that)e(the)g(omission)340 1667 y(probabilit)o(y)j(rises)j(as)e(the)h
(table)g(\014lls)f(up.)g(W)m(olp)q(er)f(and)i(Lero)o(y's)f(form)o(ula)e
(clearly)i(o)o(v)o(er-)340 1717 y(estimates)f(the)h(omission)e
(probabilit)o(y)m(,)f(and)i(the)h(upp)q(er)g(b)q(ound)f(b)q(ecomes)h
(less)g(accurate)340 1767 y(for)f(larger)f(v)n(alues)h(of)f(the)h
(omission)e(probabilit)o(y)m(.)f(Both,)i(our)h(\014nal)f(appro)o
(ximation)d(\(12\))340 1817 y(and)j(the)g Fk(O)q Ft(\()p
Fk(n)564 1802 y Fj(3)582 1817 y Ft(\))g(form)o(ula)d(\(5\))i(yield)g(v)
n(alues)g(that)g(are)h(so)g(close)g(to)f(the)h(sim)o(ulation)d(v)n
(alues)340 1867 y(for)k(the)g(omission)e(probabilit)o(y)h(that)g(the)i
(graphs)f(coincide)g(in)g(Fig.)5 b(2.)403 1950 y(Therefore,)14
b(in)f(Fig.)6 b(3)13 b(the)h Fm(r)n(elative)g(err)n(ors)e
Ft(of)h(the)h(omission)e(probabilities)h(obtained)340
2000 y(b)o(y)h(the)g Fk(O)q Ft(\()p Fk(n)543 1985 y Fj(3)562
2000 y Ft(\))g(form)o(ula)d(and)j(the)g(\014nal)f(appro)o(ximation)e
(are)j(sho)o(wn.)f(F)m(urthermore,)h(the)340 2050 y(relativ)o(e)i
(errors)h(of)e(the)h(90\045)e(con\014dence)k(in)o(terv)n(als)d(of)g
(the)h(omission)d(probabilities)i(are)340 2099 y(graphed.)e(All)e
(relativ)o(e)h(errors)i(w)o(ere)f(calculated)g(using)f(the)h(sim)o
(ulation)d(results)j(as)g(exact)340 2149 y(v)n(alues.)e(Both,)f
(\014nal)h(appro)o(ximation)d(and)i Fk(O)q Ft(\()p Fk(n)1099
2134 y Fj(3)1118 2149 y Ft(\))h(form)o(ula)d(yield)j(relativ)o(e)g
(errors)h(smaller)340 2199 y(then)j(0.8\045.)403 2282
y(Observ)o(e)f(that)e(the)i(v)n(alues)e(from)f(the)i(\014nal)f(appro)o
(ximation)d(are)k(alw)o(a)o(ys)f(bigger)g(than)340 2332
y(the)i(ones)g(from)d(the)i Fk(O)q Ft(\()p Fk(n)744 2317
y Fj(3)763 2332 y Ft(\))g(form)o(ula)e(while)h(still)g(b)q(eing)h(v)o
(ery)g(close)h(to)f(the)g(exact)h(v)n(alues.)340 2382
y(As)21 b(discussed)h(b)q(efore,)f(the)g Fk(O)q Ft(\()p
Fk(n)890 2367 y Fj(3)908 2382 y Ft(\))g(form)o(ula)c(sligh)o(tly)i
(underestimates)i(the)g(omission)340 2432 y(probabilit)o(y)m(.)1040
2556 y(10)p eop
%%Page: 11 11
11 10 bop 227 152 a
 21351200 10893473 0 15787622 40258437 36311531 startTexFig
 227 152 a
%%BeginDocument: math.pro
%
% Original name of this file: mathematica2.1.pro
%
% This prolog was derived the output of 'psfix'.  To properly use it,
% the line 'Mathdict begin' must be placed just before the line
% 'MathPictureStart' in the Encapsulated PostScript file.
%
% All alterations made by me are noted by comments beginning '%T%'
%
%						-- Tony Guzzi [26-Jan-93]

/Mathdict 150 dict def
Mathdict begin
  /Mlmarg	1.0 72 mul def
  /Mrmarg	1.0 72 mul def
  /Mbmarg	1.0 72 mul def
  /Mtmarg	1.0 72 mul def
  /Mwidth	8.5 72 mul def
  /Mheight	11 72 mul def
  /Mtransform	{  } bind def
  /Mnodistort	true def
  /Mfixwid	true	def
  /Mfixdash	false def
  /Mrot		0	def
  /Mpstart { MathPictureStart } bind def
  /Mpend { MathPictureEnd } bind def
  /Mscale { 0 1 0 1 5 -1 roll MathScale } bind def
  /ISOLatin1Encoding dup where
  { pop pop }
  {
   [
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash
    /zero /one /two /three /four /five /six /seven
    /eight /nine /colon /semicolon /less /equal /greater /question
    /at /A /B /C /D /E /F /G
    /H /I /J /K /L /M /N /O
    /P /Q /R /S /T /U /V /W
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
    /quoteleft /a /b /c /d /e /f /g
    /h /i /j /k /l /m /n /o
    /p /q /r /s /t /u /v /w
    /x /y /z /braceleft /bar /braceright /asciitilde /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
    /dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section
    /dieresis /copyright /ordfeminine /guillemotleft
    /logicalnot /hyphen /registered /macron
    /degree /plusminus /twosuperior /threesuperior
    /acute /mu /paragraph /periodcentered
    /cedilla /onesuperior /ordmasculine /guillemotright
    /onequarter /onehalf /threequarters /questiondown
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
   ] def
  } ifelse
  /MFontDict 50 dict def
  /MStrCat {
    exch
    dup length
    2 index length add
    string
    dup 3 1 roll
    copy
    length
    exch dup
    4 2 roll exch
    putinterval
  } def
  /MCreateEncoding
  {
    1 index
    255 string cvs
    (-) MStrCat
    1 index MStrCat
    cvn exch
    (Encoding) MStrCat
    cvn dup where
    { exch get } { pop StandardEncoding } ifelse
    3 1 roll
    dup MFontDict exch known not
    {
      1 index findfont
      dup length dict
      begin
       {1 index /FID ne {def} {pop pop} ifelse } forall
       /Encoding 3 index def
       currentdict
      end
      1 index exch definefont pop
      MFontDict 1 index
      null put
    }
    if
    exch pop
    exch pop
  } def
  /ISOLatin1 { (ISOLatin1) MCreateEncoding } def
  /ISO8859 { (ISOLatin1) MCreateEncoding } def
  /Mcopyfont {
    dup
    maxlength
    dict
    exch
    { 1 index /FID eq { pop pop } { 2 index 3 1 roll put } ifelse } forall
  } def
  /Plain	/Courier findfont Mcopyfont definefont pop
  /Bold	/Courier-Bold findfont Mcopyfont definefont pop
  /Italic /Courier-Oblique findfont Mcopyfont definefont pop
  /MathPictureStart {
    gsave
    Mtransform
    Mlmarg
    Mbmarg
    translate
    Mwidth
    Mlmarg Mrmarg add
    sub
    /Mwidth exch def
    Mheight
    Mbmarg Mtmarg add
    sub
    /Mheight exch def
    /Mtmatrix matrix currentmatrix def
    /Mgmatrix matrix currentmatrix def
  } bind def
  /MathPictureEnd { grestore
		    %T% Next line added by Tony [26-Jan-93]
		    end
		    } bind def
  /MFill { 0 0 moveto
	   Mwidth 0 lineto
	   Mwidth Mheight lineto
	   0 Mheight lineto
           fill
          } bind def
  /MPlotRegion {
    3 index
    Mwidth mul
    2 index
    Mheight mul
    translate
    exch sub
    Mheight mul
    /Mheight exch def
    exch sub
    Mwidth mul
    /Mwidth exch def
  } bind def
  /MathSubStart {
    Momatrix
    Mgmatrix Mtmatrix
    Mwidth Mheight
    7 -2 roll
    moveto
    Mtmatrix setmatrix
    currentpoint
    Mgmatrix setmatrix
    9 -2 roll
    moveto
    Mtmatrix setmatrix
    currentpoint
    2 copy translate
    /Mtmatrix matrix currentmatrix def
    3 -1 roll
    exch sub
    /Mheight exch def
    sub
    /Mwidth exch def
  } bind def
  /MathSubEnd {
    /Mheight exch def
    /Mwidth exch def
    /Mtmatrix exch def
    dup setmatrix
    /Mgmatrix exch def
    /Momatrix exch def
  } bind def
  /Mdot    { moveto 0 0 rlineto stroke } bind def
  /Mtetra  { moveto lineto lineto lineto fill } bind def
  /Metetra { moveto lineto lineto lineto closepath
    	     gsave fill grestore 0 setgray stroke } bind def
  /Mistroke {
    flattenpath
    0 0 0
    { 4 2 roll pop pop }
    {
     4 -1 roll
     2 index
     sub dup mul
     4 -1 roll
     2 index
     sub dup mul
     add sqrt
     4 -1 roll
     add
     3 1 roll
    }
    { stop }
    { stop }
    pathforall
    pop pop
    currentpoint
    stroke
    moveto
    currentdash
    3 -1 roll
    add
    setdash
  } bind def
  /Mfstroke { stroke currentdash pop 0 setdash } bind def
  /Mrotsboxa {
    gsave
    dup
    /Mrot exch def
    Mrotcheck
    Mtmatrix
    dup
    setmatrix
    7 1 roll
    4 index
    4 index
    translate
    rotate
    3 index
    -1 mul
    3 index
    -1 mul
    translate
    /Mtmatrix matrix currentmatrix def
    grestore
    Msboxa
    3  -1 roll
    /Mtmatrix exch def
    /Mrot 0 def
  } bind def
  /Msboxa {
    newpath
    5 -1 roll
    Mvboxa
    pop
    Mboxout
    6 -1 roll
    5 -1 roll
    4 -1 roll
    Msboxa1
    5 -3 roll
    Msboxa1
    Mboxrot
    [
      7 -2 roll 2 copy
      [ 3 1 roll 10 -1 roll 9 -1 roll ]
      6 1 roll 5 -2 roll
    ]
  } bind def
  /Msboxa1 {
    sub
    2 div
    dup
    2 index
    1 add
    mul
    3 -1 roll
    -1 add
    3 -1 roll
    mul
  } bind def
  /Mvboxa {
    Mfixwid
    { Mvboxa1 }
    {
     dup
     Mwidthcal
     0 exch
     { add }
     forall
     exch
     Mvboxa1
     4 index
     7 -1 roll
     add
     4 -1 roll
     pop
     3 1 roll
    }
    ifelse
  } bind def
  /Mvboxa1 {
    gsave
    newpath
    [
      true
      3 -1 roll
      {
       Mbbox
       5 -1 roll
       { 0 5 1 roll }
       {
        7 -1 roll
        exch sub
        (m) stringwidth pop
        .3 mul
        sub
        7 1 roll
        6 -1 roll
        4 -1 roll
        Mmin
        3 -1 roll
        5 index
        add
        5 -1 roll
        4 -1 roll
        Mmax
        4 -1 roll
       }
       ifelse
       false
      }
      forall
      { stop } if
      counttomark
      1 add
      4 roll
    ]
    grestore
  } bind def
  /Mbbox {
    1 dict begin
    0 0 moveto
    /temp (T) def
    { gsave
      currentpoint newpath moveto
      temp 0 3 -1 roll put temp
      false charpath flattenpath currentpoint
      pathbbox
      grestore moveto lineto moveto
    } forall
    pathbbox
    newpath
    end
  } bind def
  /Mmin { 2 copy gt { exch } if pop } bind def
  /Mmax { 2 copy lt { exch } if pop } bind def
  /Mrotshowa {
    dup
    /Mrot exch def
    Mrotcheck
    Mtmatrix
    dup
    setmatrix
    7 1 roll
    4 index
    4 index
    translate
    rotate
    3 index
    -1 mul
    3 index
    -1 mul
    translate
    /Mtmatrix matrix currentmatrix def
    Mgmatrix setmatrix
    Mshowa
    /Mtmatrix exch def
    /Mrot 0 def
  } bind def
  /Mshowa {
    4 -2 roll
    moveto
    2 index
    Mtmatrix setmatrix
    Mvboxa
    7 1 roll
    Mboxout
    6 -1 roll
    5 -1 roll
    4 -1 roll
    Mshowa1
    4 1 roll
    Mshowa1
    rmoveto
    currentpoint
    Mfixwid
    { Mshowax }
    { Mshoway }
    ifelse
    pop pop pop pop
    Mgmatrix setmatrix
  } bind def
  /Mshowax {	
    0 1
    4 index length
    -1 add
    {
     2 index
     4 index
     2 index
     get
     3 index
     add
     moveto
     4 index
     exch get
     Mfixdash { Mfixdashp } if
     show
    } for
  } bind def
  /Mfixdashp {
    dup
    length
    1
    gt
    1 index
    true exch
    { 45 eq and } forall
    and
    {
     gsave
     (--) stringwidth pop
     (-)  stringwidth pop
     sub
     2 div
     0 rmoveto
     dup
     length
     1 sub
     { (-) show } repeat
    grestore
    }
    if
  } bind def	
  /Mshoway {
    3 index
    Mwidthcal
    5 1 roll
    0 1
    4 index length
    -1 add
    {
      2 index
      4 index
      2 index
      get
      3 index
      add
      moveto
      4 index
      exch get
      [
        6 index
        aload
        length
        2 add
        -1 roll
        {
          pop
          Strform
          stringwidth
          pop
          neg 
          exch
          add
          0 rmoveto
        }
        exch
        kshow
        cleartomark
        } for
        pop	
  } bind def
  /Mwidthcal {
    [ exch { Mwidthcal1 } forall ]
    [
     exch
     dup
     Maxlen
     -1 add
     0 1
     3 -1 roll
     {
     [
      exch
      2 index
      { 1 index Mget exch } forall		
      pop
      Maxget
      exch
     }
     for
     pop
     ]
     Mreva
  } bind def
  /Mreva { [ exch aload length -1 1 {1 roll} for ] } bind def
  /Mget	{
    1 index
    length
    -1 add
    1 index
    ge { get } { pop pop 0 } ifelse
  } bind def
  /Maxlen	{ [ exch { length } forall Maxget } bind def
  /Maxget	{ counttomark -1 add 1 1 3 -1 roll { pop Mmax } for exch pop } bind def
  /Mwidthcal1 { [ exch { Strform stringwidth pop } forall ] } bind def
  /Strform { /tem (x) def tem 0 3 -1 roll put tem } bind def
  /Mshowa1 { 2 copy add 4 1 roll sub mul sub -2 div } bind def
  /MathScale {
    Mwidth
    Mheight
    Mlp
    translate
    scale
    /yscale exch def
    /ybias exch def
    /xscale exch def
    /xbias exch def
    /Momatrix
    xscale yscale matrix scale
    xbias ybias matrix translate
    matrix concatmatrix def
    /Mgmatrix
    matrix currentmatrix
    def
  } bind def
  /Mlp {
    3 copy
    Mlpfirst
    {
      Mnodistort { Mmin dup } if
      4 index
      2 index
      2 index
      Mlprun
      11 index
      11 -1 roll
      10 -4 roll
      Mlp1
      8 index
      9 -5 roll
      Mlp1
      4 -1 roll
      and
      { exit } if
      3 -1 roll
      pop pop
    } loop
    exch
    3 1 roll
    7 -3 roll
    pop pop pop
  } bind def
  /Mlpfirst {
    3 -1 roll
    dup length
    2 copy
    -2 add
    get
    aload
    pop pop pop
    4 -2 roll
    -1 add
    get
    aload
    pop pop pop
    6 -1 roll
    3 -1 roll
    5 -1 roll
    sub
    div
    4 1 roll
    exch sub
    div
  } bind def
  /Mlprun {
    2 copy
    4 index
    0 get
    dup
    4 1 roll
    Mlprun1
    3 copy
    8 -2 roll
    9 -1 roll
    {
      3 copy
      Mlprun1
      3 copy
      11 -3 roll
      /gt Mlpminmax
      8 3 roll
      11 -3 roll
      /lt Mlpminmax
      8 3 roll
    } forall
    pop pop pop pop
    3 1 roll
    pop pop
    aload pop
    5 -1 roll
    aload pop
    exch
    6 -1 roll
    Mlprun2
    8 2 roll
    4 -1 roll
    Mlprun2
    6 2 roll
    3 -1 roll
    Mlprun2
    4 2 roll
    exch
    Mlprun2
    6 2 roll
  } bind def
  /Mlprun1 {
    aload pop
    exch
    6 -1 roll
    5 -1 roll
    mul add
    4 -2 roll
    mul
    3 -1 roll
    add
  } bind def
  /Mlprun2 { 2 copy add 2 div 3 1 roll exch sub } bind def
  /Mlpminmax {
    cvx
    2 index
    6 index
    2 index
    exec { 7 -3 roll 4 -1 roll } if
    1 index
    5 index
    3 -1 roll
    exec
    { 4  1 roll pop
      5 -1 roll
      aload
      pop pop
      4 -1 roll
      aload pop
      [
       8 -2 roll pop
       5 -2 roll pop
       6 -2 roll pop
       5 -1 roll
      ]
      4 1 roll pop
    }
    { pop pop pop }
    ifelse
  } bind def
  /Mlp1 {
    5 index
    3 index	sub
    5 index
    2 index mul
    1 index
    le
    1 index
    0 le
    or
    dup
    not
    { 1 index 3 index div .99999 mul 8 -1 roll pop 7 1 roll } if
    8 -1 roll
    2 div
    7 -2 roll
    pop sub
    5 index
    6 -3 roll
    pop pop
    mul sub
    exch
  } bind def
  /intop 0 def
  /inrht 0 def
  /inflag 0 def
  /outflag 0 def
  /xadrht 0 def
  /xadlft 0 def
  /yadtop 0 def
  /yadbot 0 def
  /Minner {
    outflag 1 eq { /outflag 0 def /intop 0 def /inrht 0 def } if		
    5 index
    gsave
    Mtmatrix setmatrix
    Mvboxa pop
    grestore
    3 -1 roll
    pop
    dup
    intop gt { /intop exch def } { pop } ifelse
    dup
    inrht gt { /inrht exch def } { pop } ifelse
    pop
    /inflag 1 def
  } bind def
  /Mouter {
    /xadrht 0 def
    /xadlft 0 def
    /yadtop 0 def
    /yadbot 0 def
    inflag
    1 eq
    {
     dup 0 lt { dup intop mul neg /yadtop exch def } if
     dup 0 gt { dup intop mul /yadbot exch def } if
     pop
     dup 0 lt { dup inrht mul neg /xadrht exch def } if
     dup 0 gt { dup inrht mul /xadlft exch def } if
     pop
     /outflag 1 def
    }
    { pop pop}
    ifelse
    /inflag 0 def
    /inrht 0 def
    /intop 0 def
  } bind def	
  /Mboxout {
    outflag
    1 eq {
     4 -1 roll
     xadlft
     leadjust
     add
     sub
     4 1 roll
     3 -1
     roll
     yadbot
     leadjust
     add
     sub
     3 1 roll
     exch
     xadrht
     leadjust
     add
     add
     exch
     yadtop
     leadjust
     add
     add
     /outflag 0 def
     /xadlft 0 def
     /yadbot 0 def
     /xadrht 0 def
     /yadtop 0 def
    } if
  } bind def
  /leadjust { (m) stringwidth pop .5 mul } bind def
  /Mrotcheck {
    dup
    90
    eq
    {
     yadbot
     /yadbot xadrht def	
     /xadrht yadtop def
     /yadtop xadlft def
     /xadlft exch def
    } if
    dup
    cos
    1 index
    sin
    Checkaux
    dup
    cos
    1 index
    sin neg
    exch
    Checkaux
    3 1 roll
    pop pop
  } bind def
  /Checkaux { 4 index exch 4 index mul 3 1 roll mul add 4 1 roll } bind def
  /Mboxrot {
    Mrot
    90 eq  { brotaux 4 2 roll } if
    Mrot
    180 eq { 4 2 roll brotaux 4 2 roll brotaux }	if
    Mrot
    270 eq { 4 2 roll brotaux } if
  } bind def
  /brotaux { neg exch neg } bind def
  /Mabsproc {
    0
    matrix defaultmatrix
    dtransform idtransform
    dup mul exch
    dup mul
    add sqrt
  } bind def
  /Mabswid { Mabsproc setlinewidth	} bind def
  /Mabsdash {
    exch
    [ exch { Mabsproc } forall ]
    exch
    setdash
  } bind def
  /MBeginOrig { Momatrix concat} bind def
  /MEndOrig { Mgmatrix setmatrix} bind def
  /sampledsound where
  { pop}
  { /sampledsound {
      exch
      pop
      exch
      5 1 roll
      mul
      4 idiv
      mul
      2 idiv
      exch pop
      exch
      /Mtempproc exch def
      { Mtempproc pop} repeat
    } bind def
  } ifelse
  /g { setgray} bind def
  /k { setcmykcolor} bind def
  /m { moveto} bind def
  /p { gsave} bind def
  /r { setrgbcolor} bind def
  /w { setlinewidth} bind def
  /C { curveto} bind def
  /F { fill} bind def
  /L { lineto} bind def
  /P { grestore} bind def
  /s { stroke} bind def
  /setcmykcolor where
  { pop}
  { /setcmykcolor {
      4 1 roll
      [ 4 1 roll ]
      {
       1 index sub
       1 sub neg
       dup
       0 lt { pop 0 } if
       dup
       1 gt { pop 1 } if
       exch
      } forall
      pop
      setrgbcolor
    } bind def
  } ifelse
  /Mcharproc { currentfile (x) readhexstring pop 0 get exch div } bind def
  /Mshadeproc {
    dup
    3 1
    roll
    { dup Mcharproc 3 1 roll } repeat
    1 eq { setgray }
         { 3 eq { setrgbcolor }
  	      { setcmykcolor }
  	      ifelse
         }
         ifelse
  } bind def
  /Mrectproc {
    3 index 2 index moveto
    2 index 3 -1 roll lineto
    dup 3 1 roll lineto
    lineto
    fill
  } bind def
  /Mcolorimage
  {
    7 1
    roll
    pop
    pop
    matrix
    invertmatrix
    concat
    2 exch exp
    1 sub
    3 1 roll
    1 1
    2 index
    {
      1 1
      4 index
      {
        dup 1 sub exch 2 index
        dup 1 sub exch 7 index
        9 index
        Mshadeproc
        Mrectproc
      } for
      pop
    } for
    pop pop pop pop
  } bind def
  /Mimage
  {
    pop
    matrix
    invertmatrix
    concat
    2 exch exp
    1 sub
    3 1 roll
    1 1
    2 index
    {
      1 1
      4 index
      {
        dup 1 sub exch 2 index
        dup 1 sub exch 7 index
        Mcharproc
        setgray
        Mrectproc
      } for
      pop
    } for
    pop pop pop
  } bind def
%T% Next line added by Tony [26-Jan-93]
end
%%EndDocument
 227 152 a
%%BeginDocument: fi:SimComp2.eps
Mathdict begin
MathPictureStart
/Courier findfont 13  scalefont  setfont
% Scaling calculations
0.0238095 0.00478583 0.309017 16.8266 [
[(0)] .02381 0 0 2 0 Minner Mrotsboxa
[(50)] .2631 0 0 2 0 Minner Mrotsboxa
[(100)] .50239 0 0 2 0 Minner Mrotsboxa
[(150)] .74168 0 0 2 0 Minner Mrotsboxa
[(200)] .98098 0 0 2 0 Minner Mrotsboxa
[(number of states \(n\))] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(-0.015)] -0.0125 .05662 1 0 0 Minner Mrotsboxa
[(-0.01)] -0.0125 .14075 1 0 0 Minner Mrotsboxa
[(-0.005)] -0.0125 .22488 1 0 0 Minner Mrotsboxa
[(0)] -0.0125 .30902 1 0 0 Minner Mrotsboxa
[(0.005)] -0.0125 .39315 1 0 0 Minner Mrotsboxa
[(0.01)] -0.0125 .47728 1 0 0 Minner Mrotsboxa
[(0.015)] -0.0125 .56142 1 0 0 Minner Mrotsboxa
[(relative error)] -0.0125 .30902 1 0 90 -1 0 Mouter Mrotsboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.02381 0 m
.02381 .00625 L
s
P
[(0)] .02381 0 0 2 0 Minner Mrotshowa
p
.002 w
.2631 0 m
.2631 .00625 L
s
P
[(50)] .2631 0 0 2 0 Minner Mrotshowa
p
.002 w
.50239 0 m
.50239 .00625 L
s
P
[(100)] .50239 0 0 2 0 Minner Mrotshowa
p
.002 w
.74168 0 m
.74168 .00625 L
s
P
[(150)] .74168 0 0 2 0 Minner Mrotshowa
p
.002 w
.98098 0 m
.98098 .00625 L
s
P
[(200)] .98098 0 0 2 0 Minner Mrotshowa
p
.001 w
.07167 0 m
.07167 .00375 L
s
P
p
.001 w
.11953 0 m
.11953 .00375 L
s
P
p
.001 w
.16738 0 m
.16738 .00375 L
s
P
p
.001 w
.21524 0 m
.21524 .00375 L
s
P
p
.001 w
.31096 0 m
.31096 .00375 L
s
P
p
.001 w
.35882 0 m
.35882 .00375 L
s
P
p
.001 w
.40668 0 m
.40668 .00375 L
s
P
p
.001 w
.45453 0 m
.45453 .00375 L
s
P
p
.001 w
.55025 0 m
.55025 .00375 L
s
P
p
.001 w
.59811 0 m
.59811 .00375 L
s
P
p
.001 w
.64597 0 m
.64597 .00375 L
s
P
p
.001 w
.69383 0 m
.69383 .00375 L
s
P
p
.001 w
.78954 0 m
.78954 .00375 L
s
P
p
.001 w
.8374 0 m
.8374 .00375 L
s
P
p
.001 w
.88526 0 m
.88526 .00375 L
s
P
p
.001 w
.93312 0 m
.93312 .00375 L
s
P
[(number of states \(n\))] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .05662 m
.00625 .05662 L
s
P
[(-0.015)] -0.0125 .05662 1 0 0 Minner Mrotshowa
p
.002 w
0 .14075 m
.00625 .14075 L
s
P
[(-0.01)] -0.0125 .14075 1 0 0 Minner Mrotshowa
p
.002 w
0 .22488 m
.00625 .22488 L
s
P
[(-0.005)] -0.0125 .22488 1 0 0 Minner Mrotshowa
p
.002 w
0 .30902 m
.00625 .30902 L
s
P
[(0)] -0.0125 .30902 1 0 0 Minner Mrotshowa
p
.002 w
0 .39315 m
.00625 .39315 L
s
P
[(0.005)] -0.0125 .39315 1 0 0 Minner Mrotshowa
p
.002 w
0 .47728 m
.00625 .47728 L
s
P
[(0.01)] -0.0125 .47728 1 0 0 Minner Mrotshowa
p
.002 w
0 .56142 m
.00625 .56142 L
s
P
[(0.015)] -0.0125 .56142 1 0 0 Minner Mrotshowa
p
.001 w
0 .07344 m
.00375 .07344 L
s
P
p
.001 w
0 .09027 m
.00375 .09027 L
s
P
p
.001 w
0 .1071 m
.00375 .1071 L
s
P
p
.001 w
0 .12392 m
.00375 .12392 L
s
P
p
.001 w
0 .15758 m
.00375 .15758 L
s
P
p
.001 w
0 .1744 m
.00375 .1744 L
s
P
p
.001 w
0 .19123 m
.00375 .19123 L
s
P
p
.001 w
0 .20806 m
.00375 .20806 L
s
P
p
.001 w
0 .24171 m
.00375 .24171 L
s
P
p
.001 w
0 .25854 m
.00375 .25854 L
s
P
p
.001 w
0 .27536 m
.00375 .27536 L
s
P
p
.001 w
0 .29219 m
.00375 .29219 L
s
P
p
.001 w
0 .32584 m
.00375 .32584 L
s
P
p
.001 w
0 .34267 m
.00375 .34267 L
s
P
p
.001 w
0 .3595 m
.00375 .3595 L
s
P
p
.001 w
0 .37632 m
.00375 .37632 L
s
P
p
.001 w
0 .40998 m
.00375 .40998 L
s
P
p
.001 w
0 .4268 m
.00375 .4268 L
s
P
p
.001 w
0 .44363 m
.00375 .44363 L
s
P
p
.001 w
0 .46046 m
.00375 .46046 L
s
P
p
.001 w
0 .49411 m
.00375 .49411 L
s
P
p
.001 w
0 .51094 m
.00375 .51094 L
s
P
p
.001 w
0 .52776 m
.00375 .52776 L
s
P
p
.001 w
0 .54459 m
.00375 .54459 L
s
P
p
.001 w
0 .03979 m
.00375 .03979 L
s
P
p
.001 w
0 .02296 m
.00375 .02296 L
s
P
p
.001 w
0 .00614 m
.00375 .00614 L
s
P
p
.001 w
0 .57824 m
.00375 .57824 L
s
P
p
.001 w
0 .59507 m
.00375 .59507 L
s
P
p
.001 w
0 .6119 m
.00375 .6119 L
s
P
[(relative error)] -0.0125 .30902 1 0 90 -1 0 Mouter Mrotshowa
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.02381 .61178 m
.02381 .61803 L
s
P
p
.002 w
.2631 .61178 m
.2631 .61803 L
s
P
p
.002 w
.50239 .61178 m
.50239 .61803 L
s
P
p
.002 w
.74168 .61178 m
.74168 .61803 L
s
P
p
.002 w
.98098 .61178 m
.98098 .61803 L
s
P
p
.001 w
.07167 .61428 m
.07167 .61803 L
s
P
p
.001 w
.11953 .61428 m
.11953 .61803 L
s
P
p
.001 w
.16738 .61428 m
.16738 .61803 L
s
P
p
.001 w
.21524 .61428 m
.21524 .61803 L
s
P
p
.001 w
.31096 .61428 m
.31096 .61803 L
s
P
p
.001 w
.35882 .61428 m
.35882 .61803 L
s
P
p
.001 w
.40668 .61428 m
.40668 .61803 L
s
P
p
.001 w
.45453 .61428 m
.45453 .61803 L
s
P
p
.001 w
.55025 .61428 m
.55025 .61803 L
s
P
p
.001 w
.59811 .61428 m
.59811 .61803 L
s
P
p
.001 w
.64597 .61428 m
.64597 .61803 L
s
P
p
.001 w
.69383 .61428 m
.69383 .61803 L
s
P
p
.001 w
.78954 .61428 m
.78954 .61803 L
s
P
p
.001 w
.8374 .61428 m
.8374 .61803 L
s
P
p
.001 w
.88526 .61428 m
.88526 .61803 L
s
P
p
.001 w
.93312 .61428 m
.93312 .61803 L
s
P
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 .05662 m
1 .05662 L
s
P
p
.002 w
.99375 .14075 m
1 .14075 L
s
P
p
.002 w
.99375 .22488 m
1 .22488 L
s
P
p
.002 w
.99375 .30902 m
1 .30902 L
s
P
p
.002 w
.99375 .39315 m
1 .39315 L
s
P
p
.002 w
.99375 .47728 m
1 .47728 L
s
P
p
.002 w
.99375 .56142 m
1 .56142 L
s
P
p
.001 w
.99625 .07344 m
1 .07344 L
s
P
p
.001 w
.99625 .09027 m
1 .09027 L
s
P
p
.001 w
.99625 .1071 m
1 .1071 L
s
P
p
.001 w
.99625 .12392 m
1 .12392 L
s
P
p
.001 w
.99625 .15758 m
1 .15758 L
s
P
p
.001 w
.99625 .1744 m
1 .1744 L
s
P
p
.001 w
.99625 .19123 m
1 .19123 L
s
P
p
.001 w
.99625 .20806 m
1 .20806 L
s
P
p
.001 w
.99625 .24171 m
1 .24171 L
s
P
p
.001 w
.99625 .25854 m
1 .25854 L
s
P
p
.001 w
.99625 .27536 m
1 .27536 L
s
P
p
.001 w
.99625 .29219 m
1 .29219 L
s
P
p
.001 w
.99625 .32584 m
1 .32584 L
s
P
p
.001 w
.99625 .34267 m
1 .34267 L
s
P
p
.001 w
.99625 .3595 m
1 .3595 L
s
P
p
.001 w
.99625 .37632 m
1 .37632 L
s
P
p
.001 w
.99625 .40998 m
1 .40998 L
s
P
p
.001 w
.99625 .4268 m
1 .4268 L
s
P
p
.001 w
.99625 .44363 m
1 .44363 L
s
P
p
.001 w
.99625 .46046 m
1 .46046 L
s
P
p
.001 w
.99625 .49411 m
1 .49411 L
s
P
p
.001 w
.99625 .51094 m
1 .51094 L
s
P
p
.001 w
.99625 .52776 m
1 .52776 L
s
P
p
.001 w
.99625 .54459 m
1 .54459 L
s
P
p
.001 w
.99625 .03979 m
1 .03979 L
s
P
p
.001 w
.99625 .02296 m
1 .02296 L
s
P
p
.001 w
.99625 .00614 m
1 .00614 L
s
P
p
.001 w
.99625 .57824 m
1 .57824 L
s
P
p
.001 w
.99625 .59507 m
1 .59507 L
s
P
p
.001 w
.99625 .6119 m
1 .6119 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
p
.002 w
0 .30902 m
1 .30902 L
s
P
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
.004 w
.11474 .42487 m
.21046 .39369 L
.30617 .29865 L
.40189 .33059 L
.49761 .3339 L
.59332 .31467 L
.68904 .28303 L
.78476 .29615 L
.88047 .29023 L
.97619 .29334 L
s
p
[ .02 .02 ] 0 setdash
.11474 .60332 m
.21046 .4449 L
.30617 .39439 L
.40189 .36961 L
.49761 .3546 L
.59332 .34435 L
.68904 .33672 L
.78476 .33059 L
.88047 .32504 L
.97619 .31727 L
s
P
p
[ .02 .02 ] 0 setdash
.11474 .01472 m
.21046 .17313 L
.30617 .22364 L
.40189 .24842 L
.49761 .26344 L
.59332 .27369 L
.68904 .28132 L
.78476 .28744 L
.88047 .29299 L
.97619 .30076 L
s
P
p
[ .005 .015 ] 0 setdash
.11474 .43361 m
.21046 .40309 L
.30617 .30882 L
.40189 .34179 L
.49761 .34641 L
.59332 .32894 L
.68904 .29986 L
.78476 .31735 L
.88047 .32102 L
.97619 .40479 L
s
P
P
% End of Graphics
MathPictureEnd
%%EndDocument

 endTexFig
 183 899 a Fp(Fig.)6 b(3.)18 b Fr(Relativ)o(e)h(errors)f(of)f(the)g
(omission)j(probabiliti)q(es)g(obtained)g(b)o(y)d(the)h
Fb(O)q Fr(\()p Fb(n)1446 883 y Fa(3)1463 899 y Fr(\))g(form)o(ula)183
945 y(\(solid\))13 b(and)f(the)g(\014nal)h(appro)o(ximation)i
(\(dotted\))d(and)h(of)e(the)h(90\045)g(con\014dence)h(in)o(terv)n(als)
h(of)d(the)183 991 y(omission)k(probabiliti)q(es)h(\(dashed\))183
1140 y Fn(4)56 b(Cho)r(osing)18 b(the)h(Num)n(b)r(er)e(of)h(Bits)g(p)r
(er)g(State)183 1251 y Ft(W)m(e)g(no)o(w)f(address)j(the)f(question)g
(of)e(ho)o(w)h(one)h(should)f(c)o(ho)q(ose)h(the)g(n)o(um)o(b)q(er)f
(of)f(bits)c Fk(b)183 1301 y Ft(in)h(the)i(compressed)g(v)n(alues.)e
(First,)h(w)o(e)g(depict)h(the)g(omission)d(probabilities)h(for)h(5-b)o
(yte)183 1351 y(\(i.e.)e(40-bit\))h(and)g(4-b)o(yte)h(compression)f
(using)g(a)h(large)f(hash)h(table)f(of)g(size)h(400)f(million)183
1401 y(b)o(ytes)h(and)g(presen)o(t)h(a)e(table)h(sho)o(wing)f(the)h(n)o
(um)o(b)q(er)f(of)g(bits)h(in)f(the)h(compressed)h(v)n(alues)183
1450 y(dep)q(enden)o(t)e(on)e(hash)h(table)g(size)g(and)g(maxim)n(um)8
b(omission)j(probabilit)o(y)m(.)f(Finally)m(,)g(a)i(rule)183
1500 y(of)h(th)o(um)o(b)f(for)i(the)g(maxim)o(um)9 b(omission)j
(probabilit)o(y)g(is)i(deriv)o(ed.)183 1636 y Fg(5-b)o(yte)g(and)h(4-b)
o(yte)g(Compression)183 1730 y Ft(As)j(men)o(tioned)f(b)q(efore,)h(for)
f(the)h(follo)o(wing)d(t)o(w)o(o)j(examples)f(a)g(hash)h(table)g(size)g
(of)f(400)183 1780 y(milli)o(on)10 b(b)o(ytes)k(w)o(as)f(c)o(hosen.)h
(Not)f(coinciden)o(tally)m(,)e(this)i(n)o(um)o(b)q(er)f(corresp)q(onds)
j(w)o(ell)e(with)183 1830 y(the)h(a)o(v)n(ailable)e(DRAM)h(on)h(our)g
(largest)g(mac)o(hine.)e(Our)j(hash)f(table)g(of)f(size)i(400)e
(million)183 1879 y(b)o(ytes)j(has)h Fk(m)e Ft(=)h(80)f(millio)o(n)f
(slots)i(using)f(5-b)o(yte)h(compression)g(and)g Fk(m)f
Ft(=)h(100)f(million)183 1929 y(slots)f(emplo)o(ying)d(4-b)o(yte)j
(compression.)245 1981 y(Figures)7 b(4)16 b(and)d(5)j(sho)o(w)g(the)g
(omission)f(probabilities)g(for)h(5-b)o(yte)g(and)g(4-b)o(yte)g(com-)
183 2031 y(pression,)g(resp)q(ectiv)o(ely)m(,)g(while)f(the)h(n)o(um)o
(b)q(er)f(of)g(states)f Fk(n)h Ft(inserted)i(in)o(to)e(the)h(table)g(w)
o(as)183 2081 y(v)n(aried.)8 b(Ev)o(en)j(if)d(the)j(table)e(\014lls)g
(up)h(completely)m(,)d(the)k(omission)c(probabilit)o(y)h(sta)o(ys)i
(smaller)183 2131 y(than)k(0.13\045)e(for)h(5-b)o(yte)h(compression)g
(and)f(b)q(elo)o(w)h(33\045)f(for)g(4-b)o(yte)h(compression.)245
2183 y(F)m(or)j(b)q(oth)g(\014gures,)h(the)g(omission)d(probabilities)i
(w)o(ere)h(calculated)f(using)g(the)h(\014nal)183 2232
y(appro)o(ximation)9 b(\(12\).)14 b(The)h(upp)q(er)g(b)q(ound)g(\(13\))
f(yields)g(v)n(alues)g(for)g(the)h(omission)e(prob-)183
2282 y(abilities)i(that)h(are)h(usually)f(quite)g(close)h(to)f(the)h
(ones)g(from)d(the)j(\014nal)f(appro)o(ximation.)183
2332 y(The)f(biggest)g(di\013erence)i(o)q(ccurs)f(when)g(the)f(table)g
(\014lls)f(up)h(completely)m(.)e(Then,)i(the)h(up-)183
2382 y(p)q(er)h(b)q(ound)f(v)n(alues)g(ha)o(v)o(e)g(relativ)o(e)g
(errors)i(of)d(0.06\045)g(and)h(21\045)f(for)h(5-b)o(yte)h(and)f(4-b)o
(yte)183 2432 y(compression,)d(resp)q(ectiv)o(ely)m(.)882
2556 y(11)p eop
%%Page: 12 12
12 11 bop 355 152 a
 22279424 11367059 0 15787622 40258437 36311531 startTexFig
 355 152 a
%%BeginDocument: math.pro
%
% Original name of this file: mathematica2.1.pro
%
% This prolog was derived the output of 'psfix'.  To properly use it,
% the line 'Mathdict begin' must be placed just before the line
% 'MathPictureStart' in the Encapsulated PostScript file.
%
% All alterations made by me are noted by comments beginning '%T%'
%
%						-- Tony Guzzi [26-Jan-93]

/Mathdict 150 dict def
Mathdict begin
  /Mlmarg	1.0 72 mul def
  /Mrmarg	1.0 72 mul def
  /Mbmarg	1.0 72 mul def
  /Mtmarg	1.0 72 mul def
  /Mwidth	8.5 72 mul def
  /Mheight	11 72 mul def
  /Mtransform	{  } bind def
  /Mnodistort	true def
  /Mfixwid	true	def
  /Mfixdash	false def
  /Mrot		0	def
  /Mpstart { MathPictureStart } bind def
  /Mpend { MathPictureEnd } bind def
  /Mscale { 0 1 0 1 5 -1 roll MathScale } bind def
  /ISOLatin1Encoding dup where
  { pop pop }
  {
   [
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash
    /zero /one /two /three /four /five /six /seven
    /eight /nine /colon /semicolon /less /equal /greater /question
    /at /A /B /C /D /E /F /G
    /H /I /J /K /L /M /N /O
    /P /Q /R /S /T /U /V /W
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
    /quoteleft /a /b /c /d /e /f /g
    /h /i /j /k /l /m /n /o
    /p /q /r /s /t /u /v /w
    /x /y /z /braceleft /bar /braceright /asciitilde /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
    /dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section
    /dieresis /copyright /ordfeminine /guillemotleft
    /logicalnot /hyphen /registered /macron
    /degree /plusminus /twosuperior /threesuperior
    /acute /mu /paragraph /periodcentered
    /cedilla /onesuperior /ordmasculine /guillemotright
    /onequarter /onehalf /threequarters /questiondown
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
   ] def
  } ifelse
  /MFontDict 50 dict def
  /MStrCat {
    exch
    dup length
    2 index length add
    string
    dup 3 1 roll
    copy
    length
    exch dup
    4 2 roll exch
    putinterval
  } def
  /MCreateEncoding
  {
    1 index
    255 string cvs
    (-) MStrCat
    1 index MStrCat
    cvn exch
    (Encoding) MStrCat
    cvn dup where
    { exch get } { pop StandardEncoding } ifelse
    3 1 roll
    dup MFontDict exch known not
    {
      1 index findfont
      dup length dict
      begin
       {1 index /FID ne {def} {pop pop} ifelse } forall
       /Encoding 3 index def
       currentdict
      end
      1 index exch definefont pop
      MFontDict 1 index
      null put
    }
    if
    exch pop
    exch pop
  } def
  /ISOLatin1 { (ISOLatin1) MCreateEncoding } def
  /ISO8859 { (ISOLatin1) MCreateEncoding } def
  /Mcopyfont {
    dup
    maxlength
    dict
    exch
    { 1 index /FID eq { pop pop } { 2 index 3 1 roll put } ifelse } forall
  } def
  /Plain	/Courier findfont Mcopyfont definefont pop
  /Bold	/Courier-Bold findfont Mcopyfont definefont pop
  /Italic /Courier-Oblique findfont Mcopyfont definefont pop
  /MathPictureStart {
    gsave
    Mtransform
    Mlmarg
    Mbmarg
    translate
    Mwidth
    Mlmarg Mrmarg add
    sub
    /Mwidth exch def
    Mheight
    Mbmarg Mtmarg add
    sub
    /Mheight exch def
    /Mtmatrix matrix currentmatrix def
    /Mgmatrix matrix currentmatrix def
  } bind def
  /MathPictureEnd { grestore
		    %T% Next line added by Tony [26-Jan-93]
		    end
		    } bind def
  /MFill { 0 0 moveto
	   Mwidth 0 lineto
	   Mwidth Mheight lineto
	   0 Mheight lineto
           fill
          } bind def
  /MPlotRegion {
    3 index
    Mwidth mul
    2 index
    Mheight mul
    translate
    exch sub
    Mheight mul
    /Mheight exch def
    exch sub
    Mwidth mul
    /Mwidth exch def
  } bind def
  /MathSubStart {
    Momatrix
    Mgmatrix Mtmatrix
    Mwidth Mheight
    7 -2 roll
    moveto
    Mtmatrix setmatrix
    currentpoint
    Mgmatrix setmatrix
    9 -2 roll
    moveto
    Mtmatrix setmatrix
    currentpoint
    2 copy translate
    /Mtmatrix matrix currentmatrix def
    3 -1 roll
    exch sub
    /Mheight exch def
    sub
    /Mwidth exch def
  } bind def
  /MathSubEnd {
    /Mheight exch def
    /Mwidth exch def
    /Mtmatrix exch def
    dup setmatrix
    /Mgmatrix exch def
    /Momatrix exch def
  } bind def
  /Mdot    { moveto 0 0 rlineto stroke } bind def
  /Mtetra  { moveto lineto lineto lineto fill } bind def
  /Metetra { moveto lineto lineto lineto closepath
    	     gsave fill grestore 0 setgray stroke } bind def
  /Mistroke {
    flattenpath
    0 0 0
    { 4 2 roll pop pop }
    {
     4 -1 roll
     2 index
     sub dup mul
     4 -1 roll
     2 index
     sub dup mul
     add sqrt
     4 -1 roll
     add
     3 1 roll
    }
    { stop }
    { stop }
    pathforall
    pop pop
    currentpoint
    stroke
    moveto
    currentdash
    3 -1 roll
    add
    setdash
  } bind def
  /Mfstroke { stroke currentdash pop 0 setdash } bind def
  /Mrotsboxa {
    gsave
    dup
    /Mrot exch def
    Mrotcheck
    Mtmatrix
    dup
    setmatrix
    7 1 roll
    4 index
    4 index
    translate
    rotate
    3 index
    -1 mul
    3 index
    -1 mul
    translate
    /Mtmatrix matrix currentmatrix def
    grestore
    Msboxa
    3  -1 roll
    /Mtmatrix exch def
    /Mrot 0 def
  } bind def
  /Msboxa {
    newpath
    5 -1 roll
    Mvboxa
    pop
    Mboxout
    6 -1 roll
    5 -1 roll
    4 -1 roll
    Msboxa1
    5 -3 roll
    Msboxa1
    Mboxrot
    [
      7 -2 roll 2 copy
      [ 3 1 roll 10 -1 roll 9 -1 roll ]
      6 1 roll 5 -2 roll
    ]
  } bind def
  /Msboxa1 {
    sub
    2 div
    dup
    2 index
    1 add
    mul
    3 -1 roll
    -1 add
    3 -1 roll
    mul
  } bind def
  /Mvboxa {
    Mfixwid
    { Mvboxa1 }
    {
     dup
     Mwidthcal
     0 exch
     { add }
     forall
     exch
     Mvboxa1
     4 index
     7 -1 roll
     add
     4 -1 roll
     pop
     3 1 roll
    }
    ifelse
  } bind def
  /Mvboxa1 {
    gsave
    newpath
    [
      true
      3 -1 roll
      {
       Mbbox
       5 -1 roll
       { 0 5 1 roll }
       {
        7 -1 roll
        exch sub
        (m) stringwidth pop
        .3 mul
        sub
        7 1 roll
        6 -1 roll
        4 -1 roll
        Mmin
        3 -1 roll
        5 index
        add
        5 -1 roll
        4 -1 roll
        Mmax
        4 -1 roll
       }
       ifelse
       false
      }
      forall
      { stop } if
      counttomark
      1 add
      4 roll
    ]
    grestore
  } bind def
  /Mbbox {
    1 dict begin
    0 0 moveto
    /temp (T) def
    { gsave
      currentpoint newpath moveto
      temp 0 3 -1 roll put temp
      false charpath flattenpath currentpoint
      pathbbox
      grestore moveto lineto moveto
    } forall
    pathbbox
    newpath
    end
  } bind def
  /Mmin { 2 copy gt { exch } if pop } bind def
  /Mmax { 2 copy lt { exch } if pop } bind def
  /Mrotshowa {
    dup
    /Mrot exch def
    Mrotcheck
    Mtmatrix
    dup
    setmatrix
    7 1 roll
    4 index
    4 index
    translate
    rotate
    3 index
    -1 mul
    3 index
    -1 mul
    translate
    /Mtmatrix matrix currentmatrix def
    Mgmatrix setmatrix
    Mshowa
    /Mtmatrix exch def
    /Mrot 0 def
  } bind def
  /Mshowa {
    4 -2 roll
    moveto
    2 index
    Mtmatrix setmatrix
    Mvboxa
    7 1 roll
    Mboxout
    6 -1 roll
    5 -1 roll
    4 -1 roll
    Mshowa1
    4 1 roll
    Mshowa1
    rmoveto
    currentpoint
    Mfixwid
    { Mshowax }
    { Mshoway }
    ifelse
    pop pop pop pop
    Mgmatrix setmatrix
  } bind def
  /Mshowax {	
    0 1
    4 index length
    -1 add
    {
     2 index
     4 index
     2 index
     get
     3 index
     add
     moveto
     4 index
     exch get
     Mfixdash { Mfixdashp } if
     show
    } for
  } bind def
  /Mfixdashp {
    dup
    length
    1
    gt
    1 index
    true exch
    { 45 eq and } forall
    and
    {
     gsave
     (--) stringwidth pop
     (-)  stringwidth pop
     sub
     2 div
     0 rmoveto
     dup
     length
     1 sub
     { (-) show } repeat
    grestore
    }
    if
  } bind def	
  /Mshoway {
    3 index
    Mwidthcal
    5 1 roll
    0 1
    4 index length
    -1 add
    {
      2 index
      4 index
      2 index
      get
      3 index
      add
      moveto
      4 index
      exch get
      [
        6 index
        aload
        length
        2 add
        -1 roll
        {
          pop
          Strform
          stringwidth
          pop
          neg 
          exch
          add
          0 rmoveto
        }
        exch
        kshow
        cleartomark
        } for
        pop	
  } bind def
  /Mwidthcal {
    [ exch { Mwidthcal1 } forall ]
    [
     exch
     dup
     Maxlen
     -1 add
     0 1
     3 -1 roll
     {
     [
      exch
      2 index
      { 1 index Mget exch } forall		
      pop
      Maxget
      exch
     }
     for
     pop
     ]
     Mreva
  } bind def
  /Mreva { [ exch aload length -1 1 {1 roll} for ] } bind def
  /Mget	{
    1 index
    length
    -1 add
    1 index
    ge { get } { pop pop 0 } ifelse
  } bind def
  /Maxlen	{ [ exch { length } forall Maxget } bind def
  /Maxget	{ counttomark -1 add 1 1 3 -1 roll { pop Mmax } for exch pop } bind def
  /Mwidthcal1 { [ exch { Strform stringwidth pop } forall ] } bind def
  /Strform { /tem (x) def tem 0 3 -1 roll put tem } bind def
  /Mshowa1 { 2 copy add 4 1 roll sub mul sub -2 div } bind def
  /MathScale {
    Mwidth
    Mheight
    Mlp
    translate
    scale
    /yscale exch def
    /ybias exch def
    /xscale exch def
    /xbias exch def
    /Momatrix
    xscale yscale matrix scale
    xbias ybias matrix translate
    matrix concatmatrix def
    /Mgmatrix
    matrix currentmatrix
    def
  } bind def
  /Mlp {
    3 copy
    Mlpfirst
    {
      Mnodistort { Mmin dup } if
      4 index
      2 index
      2 index
      Mlprun
      11 index
      11 -1 roll
      10 -4 roll
      Mlp1
      8 index
      9 -5 roll
      Mlp1
      4 -1 roll
      and
      { exit } if
      3 -1 roll
      pop pop
    } loop
    exch
    3 1 roll
    7 -3 roll
    pop pop pop
  } bind def
  /Mlpfirst {
    3 -1 roll
    dup length
    2 copy
    -2 add
    get
    aload
    pop pop pop
    4 -2 roll
    -1 add
    get
    aload
    pop pop pop
    6 -1 roll
    3 -1 roll
    5 -1 roll
    sub
    div
    4 1 roll
    exch sub
    div
  } bind def
  /Mlprun {
    2 copy
    4 index
    0 get
    dup
    4 1 roll
    Mlprun1
    3 copy
    8 -2 roll
    9 -1 roll
    {
      3 copy
      Mlprun1
      3 copy
      11 -3 roll
      /gt Mlpminmax
      8 3 roll
      11 -3 roll
      /lt Mlpminmax
      8 3 roll
    } forall
    pop pop pop pop
    3 1 roll
    pop pop
    aload pop
    5 -1 roll
    aload pop
    exch
    6 -1 roll
    Mlprun2
    8 2 roll
    4 -1 roll
    Mlprun2
    6 2 roll
    3 -1 roll
    Mlprun2
    4 2 roll
    exch
    Mlprun2
    6 2 roll
  } bind def
  /Mlprun1 {
    aload pop
    exch
    6 -1 roll
    5 -1 roll
    mul add
    4 -2 roll
    mul
    3 -1 roll
    add
  } bind def
  /Mlprun2 { 2 copy add 2 div 3 1 roll exch sub } bind def
  /Mlpminmax {
    cvx
    2 index
    6 index
    2 index
    exec { 7 -3 roll 4 -1 roll } if
    1 index
    5 index
    3 -1 roll
    exec
    { 4  1 roll pop
      5 -1 roll
      aload
      pop pop
      4 -1 roll
      aload pop
      [
       8 -2 roll pop
       5 -2 roll pop
       6 -2 roll pop
       5 -1 roll
      ]
      4 1 roll pop
    }
    { pop pop pop }
    ifelse
  } bind def
  /Mlp1 {
    5 index
    3 index	sub
    5 index
    2 index mul
    1 index
    le
    1 index
    0 le
    or
    dup
    not
    { 1 index 3 index div .99999 mul 8 -1 roll pop 7 1 roll } if
    8 -1 roll
    2 div
    7 -2 roll
    pop sub
    5 index
    6 -3 roll
    pop pop
    mul sub
    exch
  } bind def
  /intop 0 def
  /inrht 0 def
  /inflag 0 def
  /outflag 0 def
  /xadrht 0 def
  /xadlft 0 def
  /yadtop 0 def
  /yadbot 0 def
  /Minner {
    outflag 1 eq { /outflag 0 def /intop 0 def /inrht 0 def } if		
    5 index
    gsave
    Mtmatrix setmatrix
    Mvboxa pop
    grestore
    3 -1 roll
    pop
    dup
    intop gt { /intop exch def } { pop } ifelse
    dup
    inrht gt { /inrht exch def } { pop } ifelse
    pop
    /inflag 1 def
  } bind def
  /Mouter {
    /xadrht 0 def
    /xadlft 0 def
    /yadtop 0 def
    /yadbot 0 def
    inflag
    1 eq
    {
     dup 0 lt { dup intop mul neg /yadtop exch def } if
     dup 0 gt { dup intop mul /yadbot exch def } if
     pop
     dup 0 lt { dup inrht mul neg /xadrht exch def } if
     dup 0 gt { dup inrht mul /xadlft exch def } if
     pop
     /outflag 1 def
    }
    { pop pop}
    ifelse
    /inflag 0 def
    /inrht 0 def
    /intop 0 def
  } bind def	
  /Mboxout {
    outflag
    1 eq {
     4 -1 roll
     xadlft
     leadjust
     add
     sub
     4 1 roll
     3 -1
     roll
     yadbot
     leadjust
     add
     sub
     3 1 roll
     exch
     xadrht
     leadjust
     add
     add
     exch
     yadtop
     leadjust
     add
     add
     /outflag 0 def
     /xadlft 0 def
     /yadbot 0 def
     /xadrht 0 def
     /yadtop 0 def
    } if
  } bind def
  /leadjust { (m) stringwidth pop .5 mul } bind def
  /Mrotcheck {
    dup
    90
    eq
    {
     yadbot
     /yadbot xadrht def	
     /xadrht yadtop def
     /yadtop xadlft def
     /xadlft exch def
    } if
    dup
    cos
    1 index
    sin
    Checkaux
    dup
    cos
    1 index
    sin neg
    exch
    Checkaux
    3 1 roll
    pop pop
  } bind def
  /Checkaux { 4 index exch 4 index mul 3 1 roll mul add 4 1 roll } bind def
  /Mboxrot {
    Mrot
    90 eq  { brotaux 4 2 roll } if
    Mrot
    180 eq { 4 2 roll brotaux 4 2 roll brotaux }	if
    Mrot
    270 eq { 4 2 roll brotaux } if
  } bind def
  /brotaux { neg exch neg } bind def
  /Mabsproc {
    0
    matrix defaultmatrix
    dtransform idtransform
    dup mul exch
    dup mul
    add sqrt
  } bind def
  /Mabswid { Mabsproc setlinewidth	} bind def
  /Mabsdash {
    exch
    [ exch { Mabsproc } forall ]
    exch
    setdash
  } bind def
  /MBeginOrig { Momatrix concat} bind def
  /MEndOrig { Mgmatrix setmatrix} bind def
  /sampledsound where
  { pop}
  { /sampledsound {
      exch
      pop
      exch
      5 1 roll
      mul
      4 idiv
      mul
      2 idiv
      exch pop
      exch
      /Mtempproc exch def
      { Mtempproc pop} repeat
    } bind def
  } ifelse
  /g { setgray} bind def
  /k { setcmykcolor} bind def
  /m { moveto} bind def
  /p { gsave} bind def
  /r { setrgbcolor} bind def
  /w { setlinewidth} bind def
  /C { curveto} bind def
  /F { fill} bind def
  /L { lineto} bind def
  /P { grestore} bind def
  /s { stroke} bind def
  /setcmykcolor where
  { pop}
  { /setcmykcolor {
      4 1 roll
      [ 4 1 roll ]
      {
       1 index sub
       1 sub neg
       dup
       0 lt { pop 0 } if
       dup
       1 gt { pop 1 } if
       exch
      } forall
      pop
      setrgbcolor
    } bind def
  } ifelse
  /Mcharproc { currentfile (x) readhexstring pop 0 get exch div } bind def
  /Mshadeproc {
    dup
    3 1
    roll
    { dup Mcharproc 3 1 roll } repeat
    1 eq { setgray }
         { 3 eq { setrgbcolor }
  	      { setcmykcolor }
  	      ifelse
         }
         ifelse
  } bind def
  /Mrectproc {
    3 index 2 index moveto
    2 index 3 -1 roll lineto
    dup 3 1 roll lineto
    lineto
    fill
  } bind def
  /Mcolorimage
  {
    7 1
    roll
    pop
    pop
    matrix
    invertmatrix
    concat
    2 exch exp
    1 sub
    3 1 roll
    1 1
    2 index
    {
      1 1
      4 index
      {
        dup 1 sub exch 2 index
        dup 1 sub exch 7 index
        9 index
        Mshadeproc
        Mrectproc
      } for
      pop
    } for
    pop pop pop pop
  } bind def
  /Mimage
  {
    pop
    matrix
    invertmatrix
    concat
    2 exch exp
    1 sub
    3 1 roll
    1 1
    2 index
    {
      1 1
      4 index
      {
        dup 1 sub exch 2 index
        dup 1 sub exch 7 index
        Mcharproc
        setgray
        Mrectproc
      } for
      pop
    } for
    pop pop pop
  } bind def
%T% Next line added by Tony [26-Jan-93]
end
%%EndDocument
 355 152 a
%%BeginDocument: fi:ProbApprox5.eps
Mathdict begin
MathPictureStart
/Courier findfont 12  scalefont  setfont
% Scaling calculations
0.0238095 1.19048e-08 0 457.803 [
[(0)] .02381 0 0 2 0 Minner Mrotsboxa
[(     7)(2. 10)] .2619 0 0 2 0 Minner Mrotsboxa
[(     7)(4. 10)] .5 0 0 2 0 Minner Mrotsboxa
[(     7)(6. 10)] .7381 0 0 2 0 Minner Mrotsboxa
[(     7)(8. 10)] .97619 0 0 2 0 Minner Mrotsboxa
[(0)] -0.0125 0 1 0 0 Minner Mrotsboxa
[(0.0002)] -0.0125 .09156 1 0 0 Minner Mrotsboxa
[(0.0004)] -0.0125 .18312 1 0 0 Minner Mrotsboxa
[(0.0006)] -0.0125 .27468 1 0 0 Minner Mrotsboxa
[(0.0008)] -0.0125 .36624 1 0 0 Minner Mrotsboxa
[(0.001)] -0.0125 .4578 1 0 0 Minner Mrotsboxa
[(0.0012)] -0.0125 .54936 1 0 0 Minner Mrotsboxa
[(omission probability)] -0.0125 .30902 1 0 90 -1 0 Mouter Mrotsboxa
[(n)] 1.025 0 -1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.02381 0 m
.02381 .00625 L
s
P
[(0)] .02381 0 0 2 0 Minner Mrotshowa
p
.002 w
.2619 0 m
.2619 .00625 L
s
P
[(     7)(2. 10)] .2619 0 0 2 0 Minner Mrotshowa
p
.002 w
.5 0 m
.5 .00625 L
s
P
[(     7)(4. 10)] .5 0 0 2 0 Minner Mrotshowa
p
.002 w
.7381 0 m
.7381 .00625 L
s
P
[(     7)(6. 10)] .7381 0 0 2 0 Minner Mrotshowa
p
.002 w
.97619 0 m
.97619 .00625 L
s
P
[(     7)(8. 10)] .97619 0 0 2 0 Minner Mrotshowa
p
.001 w
.07143 0 m
.07143 .00375 L
s
P
p
.001 w
.11905 0 m
.11905 .00375 L
s
P
p
.001 w
.16667 0 m
.16667 .00375 L
s
P
p
.001 w
.21429 0 m
.21429 .00375 L
s
P
p
.001 w
.30952 0 m
.30952 .00375 L
s
P
p
.001 w
.35714 0 m
.35714 .00375 L
s
P
p
.001 w
.40476 0 m
.40476 .00375 L
s
P
p
.001 w
.45238 0 m
.45238 .00375 L
s
P
p
.001 w
.54762 0 m
.54762 .00375 L
s
P
p
.001 w
.59524 0 m
.59524 .00375 L
s
P
p
.001 w
.64286 0 m
.64286 .00375 L
s
P
p
.001 w
.69048 0 m
.69048 .00375 L
s
P
p
.001 w
.78571 0 m
.78571 .00375 L
s
P
p
.001 w
.83333 0 m
.83333 .00375 L
s
P
p
.001 w
.88095 0 m
.88095 .00375 L
s
P
p
.001 w
.92857 0 m
.92857 .00375 L
s
P
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 0 m
.00625 0 L
s
P
[(0)] -0.0125 0 1 0 0 Minner Mrotshowa
p
.002 w
0 .09156 m
.00625 .09156 L
s
P
[(0.0002)] -0.0125 .09156 1 0 0 Minner Mrotshowa
p
.002 w
0 .18312 m
.00625 .18312 L
s
P
[(0.0004)] -0.0125 .18312 1 0 0 Minner Mrotshowa
p
.002 w
0 .27468 m
.00625 .27468 L
s
P
[(0.0006)] -0.0125 .27468 1 0 0 Minner Mrotshowa
p
.002 w
0 .36624 m
.00625 .36624 L
s
P
[(0.0008)] -0.0125 .36624 1 0 0 Minner Mrotshowa
p
.002 w
0 .4578 m
.00625 .4578 L
s
P
[(0.001)] -0.0125 .4578 1 0 0 Minner Mrotshowa
p
.002 w
0 .54936 m
.00625 .54936 L
s
P
[(0.0012)] -0.0125 .54936 1 0 0 Minner Mrotshowa
p
.001 w
0 .01831 m
.00375 .01831 L
s
P
p
.001 w
0 .03662 m
.00375 .03662 L
s
P
p
.001 w
0 .05494 m
.00375 .05494 L
s
P
p
.001 w
0 .07325 m
.00375 .07325 L
s
P
p
.001 w
0 .10987 m
.00375 .10987 L
s
P
p
.001 w
0 .12818 m
.00375 .12818 L
s
P
p
.001 w
0 .1465 m
.00375 .1465 L
s
P
p
.001 w
0 .16481 m
.00375 .16481 L
s
P
p
.001 w
0 .20143 m
.00375 .20143 L
s
P
p
.001 w
0 .21975 m
.00375 .21975 L
s
P
p
.001 w
0 .23806 m
.00375 .23806 L
s
P
p
.001 w
0 .25637 m
.00375 .25637 L
s
P
p
.001 w
0 .29299 m
.00375 .29299 L
s
P
p
.001 w
0 .31131 m
.00375 .31131 L
s
P
p
.001 w
0 .32962 m
.00375 .32962 L
s
P
p
.001 w
0 .34793 m
.00375 .34793 L
s
P
p
.001 w
0 .38455 m
.00375 .38455 L
s
P
p
.001 w
0 .40287 m
.00375 .40287 L
s
P
p
.001 w
0 .42118 m
.00375 .42118 L
s
P
p
.001 w
0 .43949 m
.00375 .43949 L
s
P
p
.001 w
0 .47612 m
.00375 .47612 L
s
P
p
.001 w
0 .49443 m
.00375 .49443 L
s
P
p
.001 w
0 .51274 m
.00375 .51274 L
s
P
p
.001 w
0 .53105 m
.00375 .53105 L
s
P
p
.001 w
0 .56768 m
.00375 .56768 L
s
P
p
.001 w
0 .58599 m
.00375 .58599 L
s
P
p
.001 w
0 .6043 m
.00375 .6043 L
s
P
[(omission probability)] -0.0125 .30902 1 0 90 -1 0 Mouter Mrotshowa
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.02381 .61178 m
.02381 .61803 L
s
P
p
.002 w
.2619 .61178 m
.2619 .61803 L
s
P
p
.002 w
.5 .61178 m
.5 .61803 L
s
P
p
.002 w
.7381 .61178 m
.7381 .61803 L
s
P
p
.002 w
.97619 .61178 m
.97619 .61803 L
s
P
p
.001 w
.07143 .61428 m
.07143 .61803 L
s
P
p
.001 w
.11905 .61428 m
.11905 .61803 L
s
P
p
.001 w
.16667 .61428 m
.16667 .61803 L
s
P
p
.001 w
.21429 .61428 m
.21429 .61803 L
s
P
p
.001 w
.30952 .61428 m
.30952 .61803 L
s
P
p
.001 w
.35714 .61428 m
.35714 .61803 L
s
P
p
.001 w
.40476 .61428 m
.40476 .61803 L
s
P
p
.001 w
.45238 .61428 m
.45238 .61803 L
s
P
p
.001 w
.54762 .61428 m
.54762 .61803 L
s
P
p
.001 w
.59524 .61428 m
.59524 .61803 L
s
P
p
.001 w
.64286 .61428 m
.64286 .61803 L
s
P
p
.001 w
.69048 .61428 m
.69048 .61803 L
s
P
p
.001 w
.78571 .61428 m
.78571 .61803 L
s
P
p
.001 w
.83333 .61428 m
.83333 .61803 L
s
P
p
.001 w
.88095 .61428 m
.88095 .61803 L
s
P
p
.001 w
.92857 .61428 m
.92857 .61803 L
s
P
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 0 m
1 0 L
s
P
p
.002 w
.99375 .09156 m
1 .09156 L
s
P
p
.002 w
.99375 .18312 m
1 .18312 L
s
P
p
.002 w
.99375 .27468 m
1 .27468 L
s
P
p
.002 w
.99375 .36624 m
1 .36624 L
s
P
p
.002 w
.99375 .4578 m
1 .4578 L
s
P
p
.002 w
.99375 .54936 m
1 .54936 L
s
P
p
.001 w
.99625 .01831 m
1 .01831 L
s
P
p
.001 w
.99625 .03662 m
1 .03662 L
s
P
p
.001 w
.99625 .05494 m
1 .05494 L
s
P
p
.001 w
.99625 .07325 m
1 .07325 L
s
P
p
.001 w
.99625 .10987 m
1 .10987 L
s
P
p
.001 w
.99625 .12818 m
1 .12818 L
s
P
p
.001 w
.99625 .1465 m
1 .1465 L
s
P
p
.001 w
.99625 .16481 m
1 .16481 L
s
P
p
.001 w
.99625 .20143 m
1 .20143 L
s
P
p
.001 w
.99625 .21975 m
1 .21975 L
s
P
p
.001 w
.99625 .23806 m
1 .23806 L
s
P
p
.001 w
.99625 .25637 m
1 .25637 L
s
P
p
.001 w
.99625 .29299 m
1 .29299 L
s
P
p
.001 w
.99625 .31131 m
1 .31131 L
s
P
p
.001 w
.99625 .32962 m
1 .32962 L
s
P
p
.001 w
.99625 .34793 m
1 .34793 L
s
P
p
.001 w
.99625 .38455 m
1 .38455 L
s
P
p
.001 w
.99625 .40287 m
1 .40287 L
s
P
p
.001 w
.99625 .42118 m
1 .42118 L
s
P
p
.001 w
.99625 .43949 m
1 .43949 L
s
P
p
.001 w
.99625 .47612 m
1 .47612 L
s
P
p
.001 w
.99625 .49443 m
1 .49443 L
s
P
p
.001 w
.99625 .51274 m
1 .51274 L
s
P
p
.001 w
.99625 .53105 m
1 .53105 L
s
P
p
.001 w
.99625 .56768 m
1 .56768 L
s
P
p
.001 w
.99625 .58599 m
1 .58599 L
s
P
p
.001 w
.99625 .6043 m
1 .6043 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
[(n)] 1.025 0 -1 0 Mshowa
p
.002 w
0 0 m
1 0 L
s
P
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
.004 w
.02381 0 m
.02505 0 L
.02629 0 L
.02753 0 L
.02877 0 L
.03125 0 L
.03373 0 L
.03621 0 L
.03869 0 L
.04365 1e-05 L
.04861 1e-05 L
.05357 2e-05 L
.06349 3e-05 L
.07341 5e-05 L
.08333 7e-05 L
.10317 .00012 L
.12302 .00019 L
.14286 .00028 L
.18254 .00052 L
.22222 .00084 L
.2619 .00126 L
.30159 .00177 L
.34127 .0024 L
.38095 .00316 L
.42063 .00407 L
.46032 .00516 L
.5 .00643 L
.53968 .00794 L
.57937 .00973 L
.61905 .01185 L
.65873 .01439 L
.69841 .01745 L
.7381 .02119 L
.77778 .02588 L
.81746 .03192 L
.8373 .03568 L
.85714 .04012 L
.87698 .0455 L
.89683 .05223 L
.91667 .06112 L
.92659 .06685 L
.93651 .07393 L
.94643 .08317 L
.95139 .08906 L
.95635 .09632 L
.96131 .10573 L
.96379 .11171 L
.96627 .11906 L
.96875 .12855 L
.96999 .13458 L
Mistroke
.97123 .14197 L
.97247 .1515 L
.97371 .16496 L
.97495 .188 L
.97619 .55862 L
Mfstroke
P
P
% End of Graphics
MathPictureEnd
%%EndDocument

 endTexFig
 625 884 a Fp(Fig.)7 b(4.)13 b Fr(Omission)i(probabilit)o(y)h(for)d
(5-b)o(yte)g(compression)355 948 y
 22279424 11367059 0 15787622 40258437 36311531 startTexFig
 355 948 a
%%BeginDocument: math.pro
%
% Original name of this file: mathematica2.1.pro
%
% This prolog was derived the output of 'psfix'.  To properly use it,
% the line 'Mathdict begin' must be placed just before the line
% 'MathPictureStart' in the Encapsulated PostScript file.
%
% All alterations made by me are noted by comments beginning '%T%'
%
%						-- Tony Guzzi [26-Jan-93]

/Mathdict 150 dict def
Mathdict begin
  /Mlmarg	1.0 72 mul def
  /Mrmarg	1.0 72 mul def
  /Mbmarg	1.0 72 mul def
  /Mtmarg	1.0 72 mul def
  /Mwidth	8.5 72 mul def
  /Mheight	11 72 mul def
  /Mtransform	{  } bind def
  /Mnodistort	true def
  /Mfixwid	true	def
  /Mfixdash	false def
  /Mrot		0	def
  /Mpstart { MathPictureStart } bind def
  /Mpend { MathPictureEnd } bind def
  /Mscale { 0 1 0 1 5 -1 roll MathScale } bind def
  /ISOLatin1Encoding dup where
  { pop pop }
  {
   [
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash
    /zero /one /two /three /four /five /six /seven
    /eight /nine /colon /semicolon /less /equal /greater /question
    /at /A /B /C /D /E /F /G
    /H /I /J /K /L /M /N /O
    /P /Q /R /S /T /U /V /W
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
    /quoteleft /a /b /c /d /e /f /g
    /h /i /j /k /l /m /n /o
    /p /q /r /s /t /u /v /w
    /x /y /z /braceleft /bar /braceright /asciitilde /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
    /dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section
    /dieresis /copyright /ordfeminine /guillemotleft
    /logicalnot /hyphen /registered /macron
    /degree /plusminus /twosuperior /threesuperior
    /acute /mu /paragraph /periodcentered
    /cedilla /onesuperior /ordmasculine /guillemotright
    /onequarter /onehalf /threequarters /questiondown
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
   ] def
  } ifelse
  /MFontDict 50 dict def
  /MStrCat {
    exch
    dup length
    2 index length add
    string
    dup 3 1 roll
    copy
    length
    exch dup
    4 2 roll exch
    putinterval
  } def
  /MCreateEncoding
  {
    1 index
    255 string cvs
    (-) MStrCat
    1 index MStrCat
    cvn exch
    (Encoding) MStrCat
    cvn dup where
    { exch get } { pop StandardEncoding } ifelse
    3 1 roll
    dup MFontDict exch known not
    {
      1 index findfont
      dup length dict
      begin
       {1 index /FID ne {def} {pop pop} ifelse } forall
       /Encoding 3 index def
       currentdict
      end
      1 index exch definefont pop
      MFontDict 1 index
      null put
    }
    if
    exch pop
    exch pop
  } def
  /ISOLatin1 { (ISOLatin1) MCreateEncoding } def
  /ISO8859 { (ISOLatin1) MCreateEncoding } def
  /Mcopyfont {
    dup
    maxlength
    dict
    exch
    { 1 index /FID eq { pop pop } { 2 index 3 1 roll put } ifelse } forall
  } def
  /Plain	/Courier findfont Mcopyfont definefont pop
  /Bold	/Courier-Bold findfont Mcopyfont definefont pop
  /Italic /Courier-Oblique findfont Mcopyfont definefont pop
  /MathPictureStart {
    gsave
    Mtransform
    Mlmarg
    Mbmarg
    translate
    Mwidth
    Mlmarg Mrmarg add
    sub
    /Mwidth exch def
    Mheight
    Mbmarg Mtmarg add
    sub
    /Mheight exch def
    /Mtmatrix matrix currentmatrix def
    /Mgmatrix matrix currentmatrix def
  } bind def
  /MathPictureEnd { grestore
		    %T% Next line added by Tony [26-Jan-93]
		    end
		    } bind def
  /MFill { 0 0 moveto
	   Mwidth 0 lineto
	   Mwidth Mheight lineto
	   0 Mheight lineto
           fill
          } bind def
  /MPlotRegion {
    3 index
    Mwidth mul
    2 index
    Mheight mul
    translate
    exch sub
    Mheight mul
    /Mheight exch def
    exch sub
    Mwidth mul
    /Mwidth exch def
  } bind def
  /MathSubStart {
    Momatrix
    Mgmatrix Mtmatrix
    Mwidth Mheight
    7 -2 roll
    moveto
    Mtmatrix setmatrix
    currentpoint
    Mgmatrix setmatrix
    9 -2 roll
    moveto
    Mtmatrix setmatrix
    currentpoint
    2 copy translate
    /Mtmatrix matrix currentmatrix def
    3 -1 roll
    exch sub
    /Mheight exch def
    sub
    /Mwidth exch def
  } bind def
  /MathSubEnd {
    /Mheight exch def
    /Mwidth exch def
    /Mtmatrix exch def
    dup setmatrix
    /Mgmatrix exch def
    /Momatrix exch def
  } bind def
  /Mdot    { moveto 0 0 rlineto stroke } bind def
  /Mtetra  { moveto lineto lineto lineto fill } bind def
  /Metetra { moveto lineto lineto lineto closepath
    	     gsave fill grestore 0 setgray stroke } bind def
  /Mistroke {
    flattenpath
    0 0 0
    { 4 2 roll pop pop }
    {
     4 -1 roll
     2 index
     sub dup mul
     4 -1 roll
     2 index
     sub dup mul
     add sqrt
     4 -1 roll
     add
     3 1 roll
    }
    { stop }
    { stop }
    pathforall
    pop pop
    currentpoint
    stroke
    moveto
    currentdash
    3 -1 roll
    add
    setdash
  } bind def
  /Mfstroke { stroke currentdash pop 0 setdash } bind def
  /Mrotsboxa {
    gsave
    dup
    /Mrot exch def
    Mrotcheck
    Mtmatrix
    dup
    setmatrix
    7 1 roll
    4 index
    4 index
    translate
    rotate
    3 index
    -1 mul
    3 index
    -1 mul
    translate
    /Mtmatrix matrix currentmatrix def
    grestore
    Msboxa
    3  -1 roll
    /Mtmatrix exch def
    /Mrot 0 def
  } bind def
  /Msboxa {
    newpath
    5 -1 roll
    Mvboxa
    pop
    Mboxout
    6 -1 roll
    5 -1 roll
    4 -1 roll
    Msboxa1
    5 -3 roll
    Msboxa1
    Mboxrot
    [
      7 -2 roll 2 copy
      [ 3 1 roll 10 -1 roll 9 -1 roll ]
      6 1 roll 5 -2 roll
    ]
  } bind def
  /Msboxa1 {
    sub
    2 div
    dup
    2 index
    1 add
    mul
    3 -1 roll
    -1 add
    3 -1 roll
    mul
  } bind def
  /Mvboxa {
    Mfixwid
    { Mvboxa1 }
    {
     dup
     Mwidthcal
     0 exch
     { add }
     forall
     exch
     Mvboxa1
     4 index
     7 -1 roll
     add
     4 -1 roll
     pop
     3 1 roll
    }
    ifelse
  } bind def
  /Mvboxa1 {
    gsave
    newpath
    [
      true
      3 -1 roll
      {
       Mbbox
       5 -1 roll
       { 0 5 1 roll }
       {
        7 -1 roll
        exch sub
        (m) stringwidth pop
        .3 mul
        sub
        7 1 roll
        6 -1 roll
        4 -1 roll
        Mmin
        3 -1 roll
        5 index
        add
        5 -1 roll
        4 -1 roll
        Mmax
        4 -1 roll
       }
       ifelse
       false
      }
      forall
      { stop } if
      counttomark
      1 add
      4 roll
    ]
    grestore
  } bind def
  /Mbbox {
    1 dict begin
    0 0 moveto
    /temp (T) def
    { gsave
      currentpoint newpath moveto
      temp 0 3 -1 roll put temp
      false charpath flattenpath currentpoint
      pathbbox
      grestore moveto lineto moveto
    } forall
    pathbbox
    newpath
    end
  } bind def
  /Mmin { 2 copy gt { exch } if pop } bind def
  /Mmax { 2 copy lt { exch } if pop } bind def
  /Mrotshowa {
    dup
    /Mrot exch def
    Mrotcheck
    Mtmatrix
    dup
    setmatrix
    7 1 roll
    4 index
    4 index
    translate
    rotate
    3 index
    -1 mul
    3 index
    -1 mul
    translate
    /Mtmatrix matrix currentmatrix def
    Mgmatrix setmatrix
    Mshowa
    /Mtmatrix exch def
    /Mrot 0 def
  } bind def
  /Mshowa {
    4 -2 roll
    moveto
    2 index
    Mtmatrix setmatrix
    Mvboxa
    7 1 roll
    Mboxout
    6 -1 roll
    5 -1 roll
    4 -1 roll
    Mshowa1
    4 1 roll
    Mshowa1
    rmoveto
    currentpoint
    Mfixwid
    { Mshowax }
    { Mshoway }
    ifelse
    pop pop pop pop
    Mgmatrix setmatrix
  } bind def
  /Mshowax {	
    0 1
    4 index length
    -1 add
    {
     2 index
     4 index
     2 index
     get
     3 index
     add
     moveto
     4 index
     exch get
     Mfixdash { Mfixdashp } if
     show
    } for
  } bind def
  /Mfixdashp {
    dup
    length
    1
    gt
    1 index
    true exch
    { 45 eq and } forall
    and
    {
     gsave
     (--) stringwidth pop
     (-)  stringwidth pop
     sub
     2 div
     0 rmoveto
     dup
     length
     1 sub
     { (-) show } repeat
    grestore
    }
    if
  } bind def	
  /Mshoway {
    3 index
    Mwidthcal
    5 1 roll
    0 1
    4 index length
    -1 add
    {
      2 index
      4 index
      2 index
      get
      3 index
      add
      moveto
      4 index
      exch get
      [
        6 index
        aload
        length
        2 add
        -1 roll
        {
          pop
          Strform
          stringwidth
          pop
          neg 
          exch
          add
          0 rmoveto
        }
        exch
        kshow
        cleartomark
        } for
        pop	
  } bind def
  /Mwidthcal {
    [ exch { Mwidthcal1 } forall ]
    [
     exch
     dup
     Maxlen
     -1 add
     0 1
     3 -1 roll
     {
     [
      exch
      2 index
      { 1 index Mget exch } forall		
      pop
      Maxget
      exch
     }
     for
     pop
     ]
     Mreva
  } bind def
  /Mreva { [ exch aload length -1 1 {1 roll} for ] } bind def
  /Mget	{
    1 index
    length
    -1 add
    1 index
    ge { get } { pop pop 0 } ifelse
  } bind def
  /Maxlen	{ [ exch { length } forall Maxget } bind def
  /Maxget	{ counttomark -1 add 1 1 3 -1 roll { pop Mmax } for exch pop } bind def
  /Mwidthcal1 { [ exch { Strform stringwidth pop } forall ] } bind def
  /Strform { /tem (x) def tem 0 3 -1 roll put tem } bind def
  /Mshowa1 { 2 copy add 4 1 roll sub mul sub -2 div } bind def
  /MathScale {
    Mwidth
    Mheight
    Mlp
    translate
    scale
    /yscale exch def
    /ybias exch def
    /xscale exch def
    /xbias exch def
    /Momatrix
    xscale yscale matrix scale
    xbias ybias matrix translate
    matrix concatmatrix def
    /Mgmatrix
    matrix currentmatrix
    def
  } bind def
  /Mlp {
    3 copy
    Mlpfirst
    {
      Mnodistort { Mmin dup } if
      4 index
      2 index
      2 index
      Mlprun
      11 index
      11 -1 roll
      10 -4 roll
      Mlp1
      8 index
      9 -5 roll
      Mlp1
      4 -1 roll
      and
      { exit } if
      3 -1 roll
      pop pop
    } loop
    exch
    3 1 roll
    7 -3 roll
    pop pop pop
  } bind def
  /Mlpfirst {
    3 -1 roll
    dup length
    2 copy
    -2 add
    get
    aload
    pop pop pop
    4 -2 roll
    -1 add
    get
    aload
    pop pop pop
    6 -1 roll
    3 -1 roll
    5 -1 roll
    sub
    div
    4 1 roll
    exch sub
    div
  } bind def
  /Mlprun {
    2 copy
    4 index
    0 get
    dup
    4 1 roll
    Mlprun1
    3 copy
    8 -2 roll
    9 -1 roll
    {
      3 copy
      Mlprun1
      3 copy
      11 -3 roll
      /gt Mlpminmax
      8 3 roll
      11 -3 roll
      /lt Mlpminmax
      8 3 roll
    } forall
    pop pop pop pop
    3 1 roll
    pop pop
    aload pop
    5 -1 roll
    aload pop
    exch
    6 -1 roll
    Mlprun2
    8 2 roll
    4 -1 roll
    Mlprun2
    6 2 roll
    3 -1 roll
    Mlprun2
    4 2 roll
    exch
    Mlprun2
    6 2 roll
  } bind def
  /Mlprun1 {
    aload pop
    exch
    6 -1 roll
    5 -1 roll
    mul add
    4 -2 roll
    mul
    3 -1 roll
    add
  } bind def
  /Mlprun2 { 2 copy add 2 div 3 1 roll exch sub } bind def
  /Mlpminmax {
    cvx
    2 index
    6 index
    2 index
    exec { 7 -3 roll 4 -1 roll } if
    1 index
    5 index
    3 -1 roll
    exec
    { 4  1 roll pop
      5 -1 roll
      aload
      pop pop
      4 -1 roll
      aload pop
      [
       8 -2 roll pop
       5 -2 roll pop
       6 -2 roll pop
       5 -1 roll
      ]
      4 1 roll pop
    }
    { pop pop pop }
    ifelse
  } bind def
  /Mlp1 {
    5 index
    3 index	sub
    5 index
    2 index mul
    1 index
    le
    1 index
    0 le
    or
    dup
    not
    { 1 index 3 index div .99999 mul 8 -1 roll pop 7 1 roll } if
    8 -1 roll
    2 div
    7 -2 roll
    pop sub
    5 index
    6 -3 roll
    pop pop
    mul sub
    exch
  } bind def
  /intop 0 def
  /inrht 0 def
  /inflag 0 def
  /outflag 0 def
  /xadrht 0 def
  /xadlft 0 def
  /yadtop 0 def
  /yadbot 0 def
  /Minner {
    outflag 1 eq { /outflag 0 def /intop 0 def /inrht 0 def } if		
    5 index
    gsave
    Mtmatrix setmatrix
    Mvboxa pop
    grestore
    3 -1 roll
    pop
    dup
    intop gt { /intop exch def } { pop } ifelse
    dup
    inrht gt { /inrht exch def } { pop } ifelse
    pop
    /inflag 1 def
  } bind def
  /Mouter {
    /xadrht 0 def
    /xadlft 0 def
    /yadtop 0 def
    /yadbot 0 def
    inflag
    1 eq
    {
     dup 0 lt { dup intop mul neg /yadtop exch def } if
     dup 0 gt { dup intop mul /yadbot exch def } if
     pop
     dup 0 lt { dup inrht mul neg /xadrht exch def } if
     dup 0 gt { dup inrht mul /xadlft exch def } if
     pop
     /outflag 1 def
    }
    { pop pop}
    ifelse
    /inflag 0 def
    /inrht 0 def
    /intop 0 def
  } bind def	
  /Mboxout {
    outflag
    1 eq {
     4 -1 roll
     xadlft
     leadjust
     add
     sub
     4 1 roll
     3 -1
     roll
     yadbot
     leadjust
     add
     sub
     3 1 roll
     exch
     xadrht
     leadjust
     add
     add
     exch
     yadtop
     leadjust
     add
     add
     /outflag 0 def
     /xadlft 0 def
     /yadbot 0 def
     /xadrht 0 def
     /yadtop 0 def
    } if
  } bind def
  /leadjust { (m) stringwidth pop .5 mul } bind def
  /Mrotcheck {
    dup
    90
    eq
    {
     yadbot
     /yadbot xadrht def	
     /xadrht yadtop def
     /yadtop xadlft def
     /xadlft exch def
    } if
    dup
    cos
    1 index
    sin
    Checkaux
    dup
    cos
    1 index
    sin neg
    exch
    Checkaux
    3 1 roll
    pop pop
  } bind def
  /Checkaux { 4 index exch 4 index mul 3 1 roll mul add 4 1 roll } bind def
  /Mboxrot {
    Mrot
    90 eq  { brotaux 4 2 roll } if
    Mrot
    180 eq { 4 2 roll brotaux 4 2 roll brotaux }	if
    Mrot
    270 eq { 4 2 roll brotaux } if
  } bind def
  /brotaux { neg exch neg } bind def
  /Mabsproc {
    0
    matrix defaultmatrix
    dtransform idtransform
    dup mul exch
    dup mul
    add sqrt
  } bind def
  /Mabswid { Mabsproc setlinewidth	} bind def
  /Mabsdash {
    exch
    [ exch { Mabsproc } forall ]
    exch
    setdash
  } bind def
  /MBeginOrig { Momatrix concat} bind def
  /MEndOrig { Mgmatrix setmatrix} bind def
  /sampledsound where
  { pop}
  { /sampledsound {
      exch
      pop
      exch
      5 1 roll
      mul
      4 idiv
      mul
      2 idiv
      exch pop
      exch
      /Mtempproc exch def
      { Mtempproc pop} repeat
    } bind def
  } ifelse
  /g { setgray} bind def
  /k { setcmykcolor} bind def
  /m { moveto} bind def
  /p { gsave} bind def
  /r { setrgbcolor} bind def
  /w { setlinewidth} bind def
  /C { curveto} bind def
  /F { fill} bind def
  /L { lineto} bind def
  /P { grestore} bind def
  /s { stroke} bind def
  /setcmykcolor where
  { pop}
  { /setcmykcolor {
      4 1 roll
      [ 4 1 roll ]
      {
       1 index sub
       1 sub neg
       dup
       0 lt { pop 0 } if
       dup
       1 gt { pop 1 } if
       exch
      } forall
      pop
      setrgbcolor
    } bind def
  } ifelse
  /Mcharproc { currentfile (x) readhexstring pop 0 get exch div } bind def
  /Mshadeproc {
    dup
    3 1
    roll
    { dup Mcharproc 3 1 roll } repeat
    1 eq { setgray }
         { 3 eq { setrgbcolor }
  	      { setcmykcolor }
  	      ifelse
         }
         ifelse
  } bind def
  /Mrectproc {
    3 index 2 index moveto
    2 index 3 -1 roll lineto
    dup 3 1 roll lineto
    lineto
    fill
  } bind def
  /Mcolorimage
  {
    7 1
    roll
    pop
    pop
    matrix
    invertmatrix
    concat
    2 exch exp
    1 sub
    3 1 roll
    1 1
    2 index
    {
      1 1
      4 index
      {
        dup 1 sub exch 2 index
        dup 1 sub exch 7 index
        9 index
        Mshadeproc
        Mrectproc
      } for
      pop
    } for
    pop pop pop pop
  } bind def
  /Mimage
  {
    pop
    matrix
    invertmatrix
    concat
    2 exch exp
    1 sub
    3 1 roll
    1 1
    2 index
    {
      1 1
      4 index
      {
        dup 1 sub exch 2 index
        dup 1 sub exch 7 index
        Mcharproc
        setgray
        Mrectproc
      } for
      pop
    } for
    pop pop pop
  } bind def
%T% Next line added by Tony [26-Jan-93]
end
%%EndDocument
 355 948 a
%%BeginDocument: fi:ProbApprox4.eps
Mathdict begin
MathPictureStart
/Courier findfont 12  scalefont  setfont
% Scaling calculations
0.0238095 9.52381e-09 0 1.71676 [
[(0)] .02381 0 0 2 0 Minner Mrotsboxa
[(     7)(2. 10)] .21429 0 0 2 0 Minner Mrotsboxa
[(     7)(4. 10)] .40476 0 0 2 0 Minner Mrotsboxa
[(     7)(6. 10)] .59524 0 0 2 0 Minner Mrotsboxa
[(     7)(8. 10)] .78571 0 0 2 0 Minner Mrotsboxa
[(     8)(1. 10)] .97619 0 0 2 0 Minner Mrotsboxa
[(0)] -0.0125 0 1 0 0 Minner Mrotsboxa
[(0.05)] -0.0125 .08584 1 0 0 Minner Mrotsboxa
[(0.1)] -0.0125 .17168 1 0 0 Minner Mrotsboxa
[(0.15)] -0.0125 .25751 1 0 0 Minner Mrotsboxa
[(0.2)] -0.0125 .34335 1 0 0 Minner Mrotsboxa
[(0.25)] -0.0125 .42919 1 0 0 Minner Mrotsboxa
[(0.3)] -0.0125 .51503 1 0 0 Minner Mrotsboxa
[(0.35)] -0.0125 .60087 1 0 0 Minner Mrotsboxa
[(omission probability)] -0.0125 .30902 1 0 90 -1 0 Mouter Mrotsboxa
[(n)] 1.025 0 -1 0 Msboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.02381 0 m
.02381 .00625 L
s
P
[(0)] .02381 0 0 2 0 Minner Mrotshowa
p
.002 w
.21429 0 m
.21429 .00625 L
s
P
[(     7)(2. 10)] .21429 0 0 2 0 Minner Mrotshowa
p
.002 w
.40476 0 m
.40476 .00625 L
s
P
[(     7)(4. 10)] .40476 0 0 2 0 Minner Mrotshowa
p
.002 w
.59524 0 m
.59524 .00625 L
s
P
[(     7)(6. 10)] .59524 0 0 2 0 Minner Mrotshowa
p
.002 w
.78571 0 m
.78571 .00625 L
s
P
[(     7)(8. 10)] .78571 0 0 2 0 Minner Mrotshowa
p
.002 w
.97619 0 m
.97619 .00625 L
s
P
[(     8)(1. 10)] .97619 0 0 2 0 Minner Mrotshowa
p
.001 w
.0619 0 m
.0619 .00375 L
s
P
p
.001 w
.1 0 m
.1 .00375 L
s
P
p
.001 w
.1381 0 m
.1381 .00375 L
s
P
p
.001 w
.17619 0 m
.17619 .00375 L
s
P
p
.001 w
.25238 0 m
.25238 .00375 L
s
P
p
.001 w
.29048 0 m
.29048 .00375 L
s
P
p
.001 w
.32857 0 m
.32857 .00375 L
s
P
p
.001 w
.36667 0 m
.36667 .00375 L
s
P
p
.001 w
.44286 0 m
.44286 .00375 L
s
P
p
.001 w
.48095 0 m
.48095 .00375 L
s
P
p
.001 w
.51905 0 m
.51905 .00375 L
s
P
p
.001 w
.55714 0 m
.55714 .00375 L
s
P
p
.001 w
.63333 0 m
.63333 .00375 L
s
P
p
.001 w
.67143 0 m
.67143 .00375 L
s
P
p
.001 w
.70952 0 m
.70952 .00375 L
s
P
p
.001 w
.74762 0 m
.74762 .00375 L
s
P
p
.001 w
.82381 0 m
.82381 .00375 L
s
P
p
.001 w
.8619 0 m
.8619 .00375 L
s
P
p
.001 w
.9 0 m
.9 .00375 L
s
P
p
.001 w
.9381 0 m
.9381 .00375 L
s
P
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 0 m
.00625 0 L
s
P
[(0)] -0.0125 0 1 0 0 Minner Mrotshowa
p
.002 w
0 .08584 m
.00625 .08584 L
s
P
[(0.05)] -0.0125 .08584 1 0 0 Minner Mrotshowa
p
.002 w
0 .17168 m
.00625 .17168 L
s
P
[(0.1)] -0.0125 .17168 1 0 0 Minner Mrotshowa
p
.002 w
0 .25751 m
.00625 .25751 L
s
P
[(0.15)] -0.0125 .25751 1 0 0 Minner Mrotshowa
p
.002 w
0 .34335 m
.00625 .34335 L
s
P
[(0.2)] -0.0125 .34335 1 0 0 Minner Mrotshowa
p
.002 w
0 .42919 m
.00625 .42919 L
s
P
[(0.25)] -0.0125 .42919 1 0 0 Minner Mrotshowa
p
.002 w
0 .51503 m
.00625 .51503 L
s
P
[(0.3)] -0.0125 .51503 1 0 0 Minner Mrotshowa
p
.002 w
0 .60087 m
.00625 .60087 L
s
P
[(0.35)] -0.0125 .60087 1 0 0 Minner Mrotshowa
p
.001 w
0 .01717 m
.00375 .01717 L
s
P
p
.001 w
0 .03434 m
.00375 .03434 L
s
P
p
.001 w
0 .0515 m
.00375 .0515 L
s
P
p
.001 w
0 .06867 m
.00375 .06867 L
s
P
p
.001 w
0 .10301 m
.00375 .10301 L
s
P
p
.001 w
0 .12017 m
.00375 .12017 L
s
P
p
.001 w
0 .13734 m
.00375 .13734 L
s
P
p
.001 w
0 .15451 m
.00375 .15451 L
s
P
p
.001 w
0 .18884 m
.00375 .18884 L
s
P
p
.001 w
0 .20601 m
.00375 .20601 L
s
P
p
.001 w
0 .22318 m
.00375 .22318 L
s
P
p
.001 w
0 .24035 m
.00375 .24035 L
s
P
p
.001 w
0 .27468 m
.00375 .27468 L
s
P
p
.001 w
0 .29185 m
.00375 .29185 L
s
P
p
.001 w
0 .30902 m
.00375 .30902 L
s
P
p
.001 w
0 .32618 m
.00375 .32618 L
s
P
p
.001 w
0 .36052 m
.00375 .36052 L
s
P
p
.001 w
0 .37769 m
.00375 .37769 L
s
P
p
.001 w
0 .39486 m
.00375 .39486 L
s
P
p
.001 w
0 .41202 m
.00375 .41202 L
s
P
p
.001 w
0 .44636 m
.00375 .44636 L
s
P
p
.001 w
0 .46353 m
.00375 .46353 L
s
P
p
.001 w
0 .48069 m
.00375 .48069 L
s
P
p
.001 w
0 .49786 m
.00375 .49786 L
s
P
p
.001 w
0 .5322 m
.00375 .5322 L
s
P
p
.001 w
0 .54936 m
.00375 .54936 L
s
P
p
.001 w
0 .56653 m
.00375 .56653 L
s
P
p
.001 w
0 .5837 m
.00375 .5837 L
s
P
[(omission probability)] -0.0125 .30902 1 0 90 -1 0 Mouter Mrotshowa
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.02381 .61178 m
.02381 .61803 L
s
P
p
.002 w
.21429 .61178 m
.21429 .61803 L
s
P
p
.002 w
.40476 .61178 m
.40476 .61803 L
s
P
p
.002 w
.59524 .61178 m
.59524 .61803 L
s
P
p
.002 w
.78571 .61178 m
.78571 .61803 L
s
P
p
.002 w
.97619 .61178 m
.97619 .61803 L
s
P
p
.001 w
.0619 .61428 m
.0619 .61803 L
s
P
p
.001 w
.1 .61428 m
.1 .61803 L
s
P
p
.001 w
.1381 .61428 m
.1381 .61803 L
s
P
p
.001 w
.17619 .61428 m
.17619 .61803 L
s
P
p
.001 w
.25238 .61428 m
.25238 .61803 L
s
P
p
.001 w
.29048 .61428 m
.29048 .61803 L
s
P
p
.001 w
.32857 .61428 m
.32857 .61803 L
s
P
p
.001 w
.36667 .61428 m
.36667 .61803 L
s
P
p
.001 w
.44286 .61428 m
.44286 .61803 L
s
P
p
.001 w
.48095 .61428 m
.48095 .61803 L
s
P
p
.001 w
.51905 .61428 m
.51905 .61803 L
s
P
p
.001 w
.55714 .61428 m
.55714 .61803 L
s
P
p
.001 w
.63333 .61428 m
.63333 .61803 L
s
P
p
.001 w
.67143 .61428 m
.67143 .61803 L
s
P
p
.001 w
.70952 .61428 m
.70952 .61803 L
s
P
p
.001 w
.74762 .61428 m
.74762 .61803 L
s
P
p
.001 w
.82381 .61428 m
.82381 .61803 L
s
P
p
.001 w
.8619 .61428 m
.8619 .61803 L
s
P
p
.001 w
.9 .61428 m
.9 .61803 L
s
P
p
.001 w
.9381 .61428 m
.9381 .61803 L
s
P
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 0 m
1 0 L
s
P
p
.002 w
.99375 .08584 m
1 .08584 L
s
P
p
.002 w
.99375 .17168 m
1 .17168 L
s
P
p
.002 w
.99375 .25751 m
1 .25751 L
s
P
p
.002 w
.99375 .34335 m
1 .34335 L
s
P
p
.002 w
.99375 .42919 m
1 .42919 L
s
P
p
.002 w
.99375 .51503 m
1 .51503 L
s
P
p
.002 w
.99375 .60087 m
1 .60087 L
s
P
p
.001 w
.99625 .01717 m
1 .01717 L
s
P
p
.001 w
.99625 .03434 m
1 .03434 L
s
P
p
.001 w
.99625 .0515 m
1 .0515 L
s
P
p
.001 w
.99625 .06867 m
1 .06867 L
s
P
p
.001 w
.99625 .10301 m
1 .10301 L
s
P
p
.001 w
.99625 .12017 m
1 .12017 L
s
P
p
.001 w
.99625 .13734 m
1 .13734 L
s
P
p
.001 w
.99625 .15451 m
1 .15451 L
s
P
p
.001 w
.99625 .18884 m
1 .18884 L
s
P
p
.001 w
.99625 .20601 m
1 .20601 L
s
P
p
.001 w
.99625 .22318 m
1 .22318 L
s
P
p
.001 w
.99625 .24035 m
1 .24035 L
s
P
p
.001 w
.99625 .27468 m
1 .27468 L
s
P
p
.001 w
.99625 .29185 m
1 .29185 L
s
P
p
.001 w
.99625 .30902 m
1 .30902 L
s
P
p
.001 w
.99625 .32618 m
1 .32618 L
s
P
p
.001 w
.99625 .36052 m
1 .36052 L
s
P
p
.001 w
.99625 .37769 m
1 .37769 L
s
P
p
.001 w
.99625 .39486 m
1 .39486 L
s
P
p
.001 w
.99625 .41202 m
1 .41202 L
s
P
p
.001 w
.99625 .44636 m
1 .44636 L
s
P
p
.001 w
.99625 .46353 m
1 .46353 L
s
P
p
.001 w
.99625 .48069 m
1 .48069 L
s
P
p
.001 w
.99625 .49786 m
1 .49786 L
s
P
p
.001 w
.99625 .5322 m
1 .5322 L
s
P
p
.001 w
.99625 .54936 m
1 .54936 L
s
P
p
.001 w
.99625 .56653 m
1 .56653 L
s
P
p
.001 w
.99625 .5837 m
1 .5837 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
[(n)] 1.025 0 -1 0 Mshowa
p
.002 w
0 0 m
1 0 L
s
P
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
.004 w
.02381 0 m
.02505 0 L
.02629 0 L
.02753 0 L
.02877 0 L
.03001 0 L
.03125 0 L
.03373 0 L
.03621 0 L
.03869 0 L
.04365 1e-05 L
.04861 1e-05 L
.05357 2e-05 L
.06349 4e-05 L
.07341 6e-05 L
.08333 8e-05 L
.10317 .00015 L
.12302 .00023 L
.14286 .00034 L
.18254 .00063 L
.22222 .00101 L
.2619 .00151 L
.30159 .00212 L
.34127 .00288 L
.38095 .00379 L
.42063 .00488 L
.46032 .00618 L
.5 .0077 L
.53968 .00951 L
.57937 .01164 L
.61905 .01416 L
.65873 .01718 L
.69841 .02081 L
.7381 .02525 L
.77778 .03078 L
.81746 .03789 L
.8373 .04228 L
.85714 .04747 L
.87698 .05374 L
.89683 .06155 L
.91667 .07181 L
.92659 .07838 L
.93651 .08647 L
.94643 .09696 L
.95139 .10363 L
.95635 .11179 L
.96131 .12231 L
.96379 .12897 L
.96627 .1371 L
.96875 .14755 L
Mistroke
.96999 .15415 L
.97123 .1622 L
.97247 .17253 L
.97371 .187 L
.97495 .21144 L
.97619 .56126 L
Mfstroke
P
P
% End of Graphics
MathPictureEnd
%%EndDocument

 endTexFig
 625 1680 a Fp(Fig.)7 b(5.)13 b Fr(Omission)i(probabilit)o(y)h(for)d
(4-b)o(yte)g(compression)403 1831 y Ft(In)c(b)q(oth,)h(5-b)o(yte)g(and)
f(4-b)o(yte)h(compression,)f(the)i(omission)c(probabilit)o(y)i(rises)h
(sharply)340 1880 y(immediately)15 b(b)q(efore)k(the)f(hash)g(table)g
(\014lls)g(up)g(completely)m(.)e(In)o(tuitiv)o(ely)m(,)f(this)j(can)h
(b)q(e)340 1930 y(explained)d(b)o(y)f(observing)g(that)h(when)g(w)o(e)f
(insert)i(a)e(compressed)h(state)g(in)o(to)f(an)g(almost)340
1980 y(full)h(table,)g(it)g(is)h(compared)f(against)g(man)o(y)f
(compressed)i(v)n(alues)g(un)o(til)e(an)i(empt)o(y)f(slot)340
2030 y(is)k(found.)e(Omissions)h(ma)o(y)e(o)q(ccur)k(in)e(an)o(y)g(of)f
(these)j(comparisons.)d(In)i(practice,)g(the)340 2080
y(c)o(haracteristic)d(shap)q(e)g(of)e(the)h(omission)d(probabilit)o(y)h
(curv)o(e)j(yields)e(a)h(nice)g(b)q(eha)o(vior)f(of)340
2129 y(our)i(probabilistic)f(v)o(eri\014cation)h(sc)o(heme.)g(If)g(the)
g(v)o(eri\014er)h(terminates)f(without)f(a)h(hash)340
2179 y(table)10 b(o)o(v)o(er\015o)o(w,)g(the)g(table)g(is)g(usually)g
(not)g(almost)e(completely)h(full)g(and)g(w)o(e)i(ha)o(v)o(e)f(a)f(m)o
(uc)o(h)340 2229 y(lo)o(w)o(er)16 b(omission)d(probabilit)o(y)i(than)g
(in)h(the)g(w)o(orst)g(case,)g(where)h(it)e(\014lls)h(up)f(completely)m
(.)340 2279 y(On)f(the)g(other)g(hand,)f(if)f(there)j(is)e(an)g(o)o(v)o
(er\015o)o(w)g(in)g(the)h(hash)g(table,)e(w)o(e)i(are)g(sure)g(to)f
(miss)340 2329 y(states.)i(So)f(the)g(\014nal)f(increase)j(in)d(the)h
(omission)e(probabilit)o(y)h(will)f(not)i(matter.)403
2382 y(T)m(able)6 b(1)13 b(sho)o(ws)h(the)g(required)h(n)o(um)o(b)q(er)
e(of)g(bits)g(for)h(the)g(compressed)g(v)n(alues)f({)h(giv)o(en)340
2432 y(the)h(size)g(of)e(the)i(hash)g(table)f(in)f(b)o(ytes)i(and)f
(the)h(maxim)n(um)10 b(omission)i(probabilit)o(y)g Fk(P)1724
2438 y Fj(om)1770 2432 y Ft(.)1040 2556 y(12)p eop
%%Page: 13 13
13 12 bop 183 194 a Ft(The)11 b(maxim)o(um)6 b(omission)k(probabilit)o
(y)f(o)q(ccurs)k(when)f(the)g(table)f(\014ll)f(up)h(completely)f
(\(i.e.)183 244 y Fk(n)5 b Ft(=)g Fk(m)p Ft(\).)12 b(Remem)o(b)q(er)f
(that)i(t)o(ypically)f(the)h(omission)e(probabilit)o(y)g(will)g(b)q(e)j
(m)o(uc)o(h)e(smaller.)183 293 y(T)m(able)6 b(1)13 b(w)o(as)h
(generated)h(b)o(y)f(solving)f(\(12\))h(n)o(umerically)m(.)245
343 y(F)m(or)f(example,)f(if)g(one)i(is)f(willing)e(to)j(tolerate)g(a)f
(maxim)n(um)c(omission)i(probabilit)o(y)h(of)183 393
y(50\045,)f(one)i(could)f(use)i(4-b)o(yte)e(compression)h(un)o(til)e
(the)j(hash)f(table)f(size)i(exceeds)g(roughly)183 443
y(700)f(milli)o(on)e(b)o(ytes.)183 618 y Fp(T)l(able)k(1.)f
Fr(Required)h(n)o(um)o(b)q(er)g(of)e(bits)i(for)e(the)h(compressed)h(v)
n(alues.)g(In)e(this)i(table,)f(1)7 b(M)g(=)f(10)1606
602 y Fa(6)183 663 y Fr(and)13 b(1)7 b(G)f(=)h(10)394
648 y Fa(9)411 663 y Fr(.)p 402 705 1003 2 v 401 751
2 46 v 508 751 V 516 751 V 516 751 V 773 737 a(hash)13
b(table)h(size)g(\(b)o(ytes\))p 1404 751 V 517 752 888
2 v 401 796 2 46 v 422 783 a Fb(P)447 787 y Fa(om)p 508
796 V 516 796 V 531 783 a Fr(100)7 b(M)27 b(200)7 b(M)28
b(500)7 b(M)50 b(1)6 b(G)72 b(2)6 b(G)71 b(5)7 b(G)62
b(10)6 b(G)p 1404 796 V 402 798 1003 2 v 402 806 V 401
852 2 46 v 415 838 a(0.1\045)p 508 852 V 516 852 V 50
w(38.2)59 b(39.3)g(40.6)g(41.6)f(42.6)h(44.0)g(45.0)p
1404 852 V 401 898 V 430 884 a(1\045)p 508 898 V 516
898 V 65 w(35.0)g(36.1)g(37.4)g(38.4)f(39.4)h(40.8)g(41.8)p
1404 898 V 401 943 V 420 930 a(10\045)p 508 943 V 516
943 V 56 w(31.8)g(32.8)g(34.2)g(35.2)f(36.2)h(37.5)g(38.5)p
1404 943 V 401 989 V 420 975 a(50\045)p 508 989 V 516
989 V 56 w(29.2)g(30.2)g(31.6)g(32.6)f(33.6)h(34.9)g(35.9)p
1404 989 V 401 1035 V 420 1021 a(99\045)p 508 1035 V
516 1035 V 56 w(26.6)g(27.6)g(29.0)g(30.0)f(31.0)h(32.3)g(33.3)p
1404 1035 V 402 1036 1003 2 v 183 1244 a Fg(A)16 b(Rule)e(of)h(Th)o(um)
o(b)183 1325 y Ft(In)10 b(the)h(follo)o(wing,)c(w)o(e)k(deriv)o(e)g(a)f
(rule)h(of)f(th)o(um)o(b)e(for)j(the)g(maxim)n(um)6 b(omission)i
(probabilit)o(y)183 1375 y Fk(P)210 1381 y Fj(om)255
1375 y Ft(,)14 b(that)g(o)q(ccurs)h(when)f(the)h(table)e(\014lls)h(up)g
(completely)m(.)245 1425 y(Assuming)20 b(that)g Fk(l)25
b Fi(\035)15 b Ft(1,)20 b(w)o(e)h(can)g(appro)o(ximate)e(\()1105
1409 y Fs(l)p Fh(\000)p Fj(1)p 1105 1416 54 2 v 1127
1439 a Fs(l)1163 1425 y Ft(\))24 b(=)f(1)14 b Fi(\000)1344
1409 y Fj(1)p 1344 1416 17 2 v 1347 1439 a Fs(l)1388
1425 y Fi(\031)24 b Fk(e)1463 1410 y Fh(\000)1494 1399
y Fc(1)p 1494 1404 15 2 v 1496 1420 a Fe(l)1536 1425
y Ft(since)183 1475 y Fk(e)202 1460 y Fs(x)234 1475 y
Fi(\031)12 b Ft(1)d(+)h Fk(x)j Ft(for)h Fi(j)5 b Fk(x)g
Fi(j)k(\034)i Ft(1.)j(By)g(plugging)e(this)i(appro)o(ximation)d(in)o
(to)i(\(8\),)g(w)o(e)i(obtain)621 1574 y(1)9 b Fi(\000)h
Fk(P)720 1580 y Fj(om)777 1574 y Fi(\031)i Fk(e)840 1554
y Fh(\000)866 1557 y Ft(\()887 1543 y Fc(1)p 887 1548
V 889 1564 a Fe(l)906 1557 y Ft(\))936 1526 y Ff(P)979
1536 y Fe(m)p Fd(\000)p Fc(1)979 1570 y Fe(k)p Fc(=0)1049
1554 y Ft(E[)p Fk(C)1119 1560 y Fs(k)1139 1554 y Ft(])1173
1574 y Fk(:)183 1658 y Ft(Using)18 b(\(10\),)g Fk(H)443
1664 y Fs(n)485 1658 y Fi(\031)i Ft(ln)7 b Fk(n)12 b
Ft(+)h Fk(\015)r Ft(,)19 b Fk(e)734 1642 y Fs(x)775 1658
y Fi(\031)i Ft(1)12 b(+)h Fk(x)18 b Ft(\(assuming)g(a)g(su\016cien)o
(tly)h(large)g Fk(l)q Ft(\))g(and)183 1707 y(assuming)12
b Fk(m)g Fi(\035)f Ft(1,)i(w)o(e)h(get)686 1808 y Fk(P)713
1814 y Fj(om)770 1808 y Fi(\031)827 1780 y Ft(1)p 819
1798 38 2 v 819 1836 a(2)840 1824 y Fs(b)870 1808 y Fk(m)p
Ft(\(ln)7 b Fk(m)j Fi(\000)f Ft(1\))21 b Fk(:)429 b Ft(\(14\))183
1903 y(Observ)o(e,)12 b(that)f(adding)g(just)g(one)h(bit)f(to)g(the)h
(compressed)g(v)n(alues)f(appro)o(ximately)e(halv)o(es)183
1953 y(the)14 b(maxim)n(um)c(omission)i(probabilit)o(y)m(.)183
2085 y Fn(5)56 b(Implem)o(en)n(tation)183 2183 y Ft(The)17
b(in)o(teresting)g(part)g(in)f(the)h(implemen)o(tation)c(of)j(the)i
(probabilistic)d(v)o(eri\014cation)h(al-)183 2232 y(gorithm)f(is)i(the)
g(calculation)f(of)h(the)g(hash)g(and)g(compressed)h(v)n(alues)f(out)g
(of)f(the)i(state)183 2282 y(descriptor.)i(This)g(calculation)f(w)o(as)
h(done)h(in)e(t)o(w)o(o)h(steps.)g(First,)g(a)g(96-bit)f(k)o(ey)h(v)n
(alue)183 2332 y(\(natural)14 b(n)o(um)o(b)q(er\))g(w)o(as)h
(calculated)g(from)e(the)j(\\arbitrary")e(long)g(state)h(descriptor)h
(us-)183 2382 y(ing)f(univ)o(ersal)g(hashing.)g(Second,)h(the)g(t)o(w)o
(o)f(hash)h(v)n(alues)f(for)h(double)f(hashing)g(and)h(the)183
2432 y(compressed)e(v)n(alue)g(w)o(ere)g(determined)g(from)e(this)i(k)o
(ey)m(.)882 2556 y(13)p eop
%%Page: 14 14
14 13 bop 403 194 a Ft(W)m(e)16 b(emplo)o(y)o(ed)f(the)j
Fk(H)773 200 y Fj(3)808 194 y Ft(univ)o(ersal)970 200
y Fj(2)1005 194 y Ft(class)f(of)g(hash)g(functions)12
b([3])k(to)h(calculate)g(the)340 244 y(k)o(ey)e(v)n(alue)f(from)e(the)j
(state)h(descriptor.)f(Assume)f(the)i(k)o(ey)e(v)n(alues)g(ha)o(v)o(e)f
Fk(k)i Ft(bits)f(and)h(the)340 293 y(state)d(descriptors)g(ha)o(v)o(e)g
Fk(d)e Ft(bits.)g(Then,)h(eac)o(h)g(function)f Fk(h)h
Fi(2)h Fk(H)1337 299 y Fj(3)1365 293 y Ft(corresp)q(onds)h(to)d(a)i
Fk(d)e Ft(b)o(y)i Fk(k)340 343 y Ft(Bo)q(olean)17 b(matrix)11
b Fk(m)17 b Ft(and)f Fk(H)808 349 y Fj(3)843 343 y Ft(corresp)q(onds)j
(to)d(the)h(set)h(of)e(all)g(those)h(matrices)f(\(whic)o(h)340
393 y(has)d(2)434 378 y Fs(dk)484 393 y Ft(elemen)o(ts\).)e(Let)i
Fk(m)788 399 y Fs(i)815 393 y Ft(b)q(e)g(the)f Fk(i)p
Ft(th)h(ro)o(w)f(of)g Fk(m)p Ft(,)g Fk(s)1208 399 y Fs(i)1235
393 y Ft(the)h Fk(i)p Ft(th)g(bit)f(of)f(state)j Fk(s)e
Ft(and)g(let)h Fi(\010)340 443 y Ft(denote)i(the)g(exclusiv)o(e)f(or)g
(op)q(erator.)g(Then,)g(the)g(hash)g(function)e Fk(h)i
Ft(is)g(calculated)g(as)738 537 y Fk(h)p Ft(\()p Fk(s)p
Ft(\))f(=)e Fk(s)888 543 y Fj(1)908 537 y Fk(m)944 543
y Fj(1)972 537 y Fi(\010)e Fk(s)1032 543 y Fj(2)1051
537 y Fk(m)1087 543 y Fj(2)1116 537 y Fi(\010)g Fk(:)e(:)g(:)h
Fi(\010)h Fk(s)1275 543 y Fs(d)1295 537 y Fk(m)1331 543
y Fs(d)1372 537 y Fk(;)340 632 y Ft(i.e.)h(the)i(bits)e(in)h(the)g
(state)h(descriptor)g(select)g(those)f(ro)o(ws)g(of)h
Fk(m)f Ft(that)g(are)g(to)g(b)q(e)h(com)o(bined)340 682
y(with)i(exclusiv)o(e)g(or.)403 733 y(Note)c(that)h(traditional)e
(metho)q(ds)g(for)h(calculating)g(k)o(eys)h(from)d(long)h(state)j
(descriptors)340 783 y(con)o(tain)j(some)f(pitfalls.)f(Simple)g(adding)
h(or)h(\\exclusiv)o(e)g(oring")f(all)f(w)o(ords)j(in)e(the)h(state)340
833 y(descriptor)c(yields)f(the)g(same)f(k)o(ey)h(v)n(alue)f(for)h(sev)
o(eral)g(kinds)g(of)f(symmetries.)f(F)m(or)h(example,)340
882 y(if)14 b(only)g(sums)g(and)g(\\exclusiv)o(e)g(ors")h(are)g(used,)g
(an)o(y)f(p)q(erm)o(utation)f(of)h(the)h(w)o(ords)g(in)f(the)340
932 y(state)h(descriptor)h(results)f(in)f(the)h(same)f(k)o(ey)g(v)n
(alue)f(and)i(therefore)g Fm(ne)n(c)n(essarily)f Ft(leads)g(to)340
982 y(omissions)c(in)g(the)i(v)o(eri\014cation)f(if)f(\\p)q(erm)o
(uted")h(states)h(o)q(ccur.)g(This)f(is)g(esp)q(ecially)g(sev)o(ere,)
340 1032 y(since)j(man)o(y)d(systems)h(con)o(tain)h(sev)o(eral)g(kinds)
f(of)g(symmetries.)f(These)j(problems)e(do)g(not)340
1082 y(o)q(ccur)j(in)f(the)g(univ)o(ersal)g(hashing-based)g
(calculation.)403 1133 y(W)m(e)d(used)i Fk(b)e Ft(of)g(the)i
Fk(k)f Ft(bits)g(of)e(the)i(k)o(ey)g(directly)f(as)h(compressed)g(v)n
(alue.)e(The)i(hash)g(v)n(al-)340 1183 y(ues)i(w)o(ere)f(calculated)f
(with)g(the)h(division)e(metho)q(d)h([4)o(])g(using)g(a)g(subset)i(of)d
(the)i(remaining)340 1233 y Fk(k)n Fi(\000)m Fk(b)f Ft(bits)f(of)g(the)
h(k)o(ey)f(to)h(ac)o(hiev)o(e)f(indep)q(endence)j(of)c(hash)i(and)f
(compressed)h(v)n(alues.)f(Note)340 1282 y(that)i(the)h(n)o(um)o(b)q
(er)e(of)h(slots)g Fk(m)g Ft(in)g(the)g(hash)h(table)e(can)i(b)q(e)f
(an)o(y)g(prime)f(n)o(um)o(b)q(er)g(since)i(w)o(e)340
1332 y(emplo)o(y)o(ed)f(the)h(division)f(metho)q(d.)340
1474 y Fn(6)56 b(Results)18 b(on)h(Larger)f(Examples)340
1582 y Ft(W)m(e)e(tested)h(the)g(probabilistic)d(v)o(eri\014cation)i
(sc)o(heme)g(on)f(three)i(examples)e({)h(P)o(eterson's)340
1632 y(algorithm)11 b(for)i(m)o(utual)e(exclusion)i(\()p
Fm(Peterson)p Ft(\),)g(an)g(industrial)g(cac)o(he)h(coherence)i(proto-)
340 1681 y(col)h(\()p Fm(c)n(ache3)6 b Ft(\))17 b(and)f(the)h(cac)o(he)
h(coherence)h(proto)q(col)d(of)g(the)h(Scalable)f(Coheren)o(t)i(In)o
(ter-)340 1731 y(face)13 b([11)o(])e(\()p Fm(SCI)c Ft(\).)k(The)i
(sizes)f(of)f(all)g(of)g(the)h(three)h(examples)e(are)h(scalable.)f
(That)h(explains)340 1781 y(the)j(di\013ering)f(n)o(um)o(b)q(ers)f(of)g
(reac)o(hable)i(states)g(for)e(the)i(SCI)f(example)e(in)i(the)g(follo)o
(wing.)403 1832 y(In)d(T)m(able)6 b(2,)k(the)i(three)g(examples)e(w)o
(ere)i(scaled)f(to)g(yield)g(h)o(uge)g(n)o(um)o(b)q(ers)f(of)h(reac)o
(hable)340 1882 y(states.)j(W)m(e)e(used)i(5-b)o(yte)e(compression)h
(for)f(all)g(of)g(the)h(three)h(examples)e(when)h(using)g(the)340
1932 y(probabilistic)e(v)o(eri\014cation)h(sc)o(heme.)g(In)g(the)h
(table,)e(the)i(run-time)e(of)g(the)i(classic)f(sc)o(heme)340
1982 y(is)j(compared)e(to)i(that)f(of)g(the)h(probabilistic)e(one.)h
(Observ)o(e)i(that)f(there)h(is)e(only)f(a)i(small)340
2032 y(increase)20 b(in)d(the)i(run-time)d(requiremen)o(ts)j(for)e(the)
i(probabilistic)d(sc)o(heme)j(due)f(to)g(the)340 2081
y(calculation)13 b(of)h(the)g(compressed)h(v)n(alues.)e(As)h(exp)q
(ected,)i(no)d(omissions)g(o)q(ccurred.)403 2133 y(In)i(the)h(next)g
(set)h(of)e(exp)q(erimen)o(ts,)g(w)o(e)h(used)g(the)g(SCI)g(example)e
(with)h Fk(n)f Ft(=)h(109)9 b(080)340 2183 y(states)16
b(and)e(a)f(hash)i(table)f(with)g Fk(m)e Ft(=)g(116)d(531)k(slots.)h(W)
m(e)g(v)n(aried)f(the)i(n)o(um)o(b)q(er)e(of)h(bits)f
Fk(b)340 2232 y Ft(in)19 b(the)g(compressed)g(v)n(alues.)f(F)m(or)g
(eac)o(h)i(v)n(alue)e(of)g Fk(b)p Ft(,)g(w)o(e)h(conducted)h(100)e
(runs)i(of)e(the)340 2282 y(v)o(eri\014er)h(with)e(randomly)e(c)o
(hosen)k(univ)o(ersal)e(hash)h(functions)f(and)h(coun)o(ted)g(the)g(n)o
(um-)340 2332 y(b)q(er)j(of)e(runs)i(in)e(whic)o(h)h(omissions)e(o)q
(ccurred.)k(Figure)7 b(6)19 b(compares)h(the)g(outcomes)g(of)340
2382 y(these)c(exp)q(erimen)o(ts)e(with)g(the)h(omission)d
(probabilities)h(from)g(our)h(\014nal)f(appro)o(ximation)340
2432 y(\(12\).)19 b(F)m(urthermore,)g(the)h(90\045)e(con\014dence)j(in)
o(terv)n(als)e(of)g(the)h(omission)d(probabilities)1040
2556 y(14)p eop
%%Page: 15 15
15 14 bop 513 220 a Fp(T)l(able)14 b(2.)f Fr(V)m(eri\014cation)i(with)f
(5-b)o(yte)f(compression)p 273 268 1260 2 v 272 314 2
46 v 454 314 V 462 314 V 481 300 a(state)g(descriptor)p
760 314 V 948 314 V 948 314 V 331 w(run-time)p 1337 314
V 1532 314 V 949 316 390 2 v 272 360 2 46 v 292 346 a(example)p
454 360 V 462 360 V 138 w(\(bits\))p 760 360 V 149 w(states)p
948 360 V 67 w(classic)p 1093 360 V 40 w(probabili)q(stic)p
1337 360 V 40 w(omissions)p 1532 360 V 273 361 1260 2
v 273 370 V 272 415 2 46 v 292 402 a(P)o(eterson)p 454
415 V 462 415 V 157 w(69)p 760 415 V 148 w(6)c(698)g(326)p
948 415 V 37 w(3)f(187)i(s)p 1093 415 V 85 w(3)f(232)g(s)p
1337 415 V 126 w(none)p 1532 415 V 272 461 V 292 447
a(SCI)p 454 461 V 462 461 V 228 w(320)p 760 461 V 139
w(1)g(179)g(942)p 948 461 V 37 w(4)f(254)i(s)p 1093 461
V 85 w(4)f(396)g(s)p 1337 461 V 126 w(none)p 1532 461
V 272 507 V 292 493 a(cac)o(he3)p 454 507 V 462 507 V
182 w(179)p 760 507 V 139 w(2)g(093)g(231)p 948 507 V
37 w(4)f(303)i(s)p 1093 507 V 85 w(4)f(436)g(s)p 1337
507 V 126 w(none)p 1532 507 V 273 508 1260 2 v 227 559
a
 21351200 10893473 0 15787622 40258437 36311531 startTexFig
 227 559 a
%%BeginDocument: math.pro
%
% Original name of this file: mathematica2.1.pro
%
% This prolog was derived the output of 'psfix'.  To properly use it,
% the line 'Mathdict begin' must be placed just before the line
% 'MathPictureStart' in the Encapsulated PostScript file.
%
% All alterations made by me are noted by comments beginning '%T%'
%
%						-- Tony Guzzi [26-Jan-93]

/Mathdict 150 dict def
Mathdict begin
  /Mlmarg	1.0 72 mul def
  /Mrmarg	1.0 72 mul def
  /Mbmarg	1.0 72 mul def
  /Mtmarg	1.0 72 mul def
  /Mwidth	8.5 72 mul def
  /Mheight	11 72 mul def
  /Mtransform	{  } bind def
  /Mnodistort	true def
  /Mfixwid	true	def
  /Mfixdash	false def
  /Mrot		0	def
  /Mpstart { MathPictureStart } bind def
  /Mpend { MathPictureEnd } bind def
  /Mscale { 0 1 0 1 5 -1 roll MathScale } bind def
  /ISOLatin1Encoding dup where
  { pop pop }
  {
   [
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash
    /zero /one /two /three /four /five /six /seven
    /eight /nine /colon /semicolon /less /equal /greater /question
    /at /A /B /C /D /E /F /G
    /H /I /J /K /L /M /N /O
    /P /Q /R /S /T /U /V /W
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
    /quoteleft /a /b /c /d /e /f /g
    /h /i /j /k /l /m /n /o
    /p /q /r /s /t /u /v /w
    /x /y /z /braceleft /bar /braceright /asciitilde /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
    /dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section
    /dieresis /copyright /ordfeminine /guillemotleft
    /logicalnot /hyphen /registered /macron
    /degree /plusminus /twosuperior /threesuperior
    /acute /mu /paragraph /periodcentered
    /cedilla /onesuperior /ordmasculine /guillemotright
    /onequarter /onehalf /threequarters /questiondown
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
   ] def
  } ifelse
  /MFontDict 50 dict def
  /MStrCat {
    exch
    dup length
    2 index length add
    string
    dup 3 1 roll
    copy
    length
    exch dup
    4 2 roll exch
    putinterval
  } def
  /MCreateEncoding
  {
    1 index
    255 string cvs
    (-) MStrCat
    1 index MStrCat
    cvn exch
    (Encoding) MStrCat
    cvn dup where
    { exch get } { pop StandardEncoding } ifelse
    3 1 roll
    dup MFontDict exch known not
    {
      1 index findfont
      dup length dict
      begin
       {1 index /FID ne {def} {pop pop} ifelse } forall
       /Encoding 3 index def
       currentdict
      end
      1 index exch definefont pop
      MFontDict 1 index
      null put
    }
    if
    exch pop
    exch pop
  } def
  /ISOLatin1 { (ISOLatin1) MCreateEncoding } def
  /ISO8859 { (ISOLatin1) MCreateEncoding } def
  /Mcopyfont {
    dup
    maxlength
    dict
    exch
    { 1 index /FID eq { pop pop } { 2 index 3 1 roll put } ifelse } forall
  } def
  /Plain	/Courier findfont Mcopyfont definefont pop
  /Bold	/Courier-Bold findfont Mcopyfont definefont pop
  /Italic /Courier-Oblique findfont Mcopyfont definefont pop
  /MathPictureStart {
    gsave
    Mtransform
    Mlmarg
    Mbmarg
    translate
    Mwidth
    Mlmarg Mrmarg add
    sub
    /Mwidth exch def
    Mheight
    Mbmarg Mtmarg add
    sub
    /Mheight exch def
    /Mtmatrix matrix currentmatrix def
    /Mgmatrix matrix currentmatrix def
  } bind def
  /MathPictureEnd { grestore
		    %T% Next line added by Tony [26-Jan-93]
		    end
		    } bind def
  /MFill { 0 0 moveto
	   Mwidth 0 lineto
	   Mwidth Mheight lineto
	   0 Mheight lineto
           fill
          } bind def
  /MPlotRegion {
    3 index
    Mwidth mul
    2 index
    Mheight mul
    translate
    exch sub
    Mheight mul
    /Mheight exch def
    exch sub
    Mwidth mul
    /Mwidth exch def
  } bind def
  /MathSubStart {
    Momatrix
    Mgmatrix Mtmatrix
    Mwidth Mheight
    7 -2 roll
    moveto
    Mtmatrix setmatrix
    currentpoint
    Mgmatrix setmatrix
    9 -2 roll
    moveto
    Mtmatrix setmatrix
    currentpoint
    2 copy translate
    /Mtmatrix matrix currentmatrix def
    3 -1 roll
    exch sub
    /Mheight exch def
    sub
    /Mwidth exch def
  } bind def
  /MathSubEnd {
    /Mheight exch def
    /Mwidth exch def
    /Mtmatrix exch def
    dup setmatrix
    /Mgmatrix exch def
    /Momatrix exch def
  } bind def
  /Mdot    { moveto 0 0 rlineto stroke } bind def
  /Mtetra  { moveto lineto lineto lineto fill } bind def
  /Metetra { moveto lineto lineto lineto closepath
    	     gsave fill grestore 0 setgray stroke } bind def
  /Mistroke {
    flattenpath
    0 0 0
    { 4 2 roll pop pop }
    {
     4 -1 roll
     2 index
     sub dup mul
     4 -1 roll
     2 index
     sub dup mul
     add sqrt
     4 -1 roll
     add
     3 1 roll
    }
    { stop }
    { stop }
    pathforall
    pop pop
    currentpoint
    stroke
    moveto
    currentdash
    3 -1 roll
    add
    setdash
  } bind def
  /Mfstroke { stroke currentdash pop 0 setdash } bind def
  /Mrotsboxa {
    gsave
    dup
    /Mrot exch def
    Mrotcheck
    Mtmatrix
    dup
    setmatrix
    7 1 roll
    4 index
    4 index
    translate
    rotate
    3 index
    -1 mul
    3 index
    -1 mul
    translate
    /Mtmatrix matrix currentmatrix def
    grestore
    Msboxa
    3  -1 roll
    /Mtmatrix exch def
    /Mrot 0 def
  } bind def
  /Msboxa {
    newpath
    5 -1 roll
    Mvboxa
    pop
    Mboxout
    6 -1 roll
    5 -1 roll
    4 -1 roll
    Msboxa1
    5 -3 roll
    Msboxa1
    Mboxrot
    [
      7 -2 roll 2 copy
      [ 3 1 roll 10 -1 roll 9 -1 roll ]
      6 1 roll 5 -2 roll
    ]
  } bind def
  /Msboxa1 {
    sub
    2 div
    dup
    2 index
    1 add
    mul
    3 -1 roll
    -1 add
    3 -1 roll
    mul
  } bind def
  /Mvboxa {
    Mfixwid
    { Mvboxa1 }
    {
     dup
     Mwidthcal
     0 exch
     { add }
     forall
     exch
     Mvboxa1
     4 index
     7 -1 roll
     add
     4 -1 roll
     pop
     3 1 roll
    }
    ifelse
  } bind def
  /Mvboxa1 {
    gsave
    newpath
    [
      true
      3 -1 roll
      {
       Mbbox
       5 -1 roll
       { 0 5 1 roll }
       {
        7 -1 roll
        exch sub
        (m) stringwidth pop
        .3 mul
        sub
        7 1 roll
        6 -1 roll
        4 -1 roll
        Mmin
        3 -1 roll
        5 index
        add
        5 -1 roll
        4 -1 roll
        Mmax
        4 -1 roll
       }
       ifelse
       false
      }
      forall
      { stop } if
      counttomark
      1 add
      4 roll
    ]
    grestore
  } bind def
  /Mbbox {
    1 dict begin
    0 0 moveto
    /temp (T) def
    { gsave
      currentpoint newpath moveto
      temp 0 3 -1 roll put temp
      false charpath flattenpath currentpoint
      pathbbox
      grestore moveto lineto moveto
    } forall
    pathbbox
    newpath
    end
  } bind def
  /Mmin { 2 copy gt { exch } if pop } bind def
  /Mmax { 2 copy lt { exch } if pop } bind def
  /Mrotshowa {
    dup
    /Mrot exch def
    Mrotcheck
    Mtmatrix
    dup
    setmatrix
    7 1 roll
    4 index
    4 index
    translate
    rotate
    3 index
    -1 mul
    3 index
    -1 mul
    translate
    /Mtmatrix matrix currentmatrix def
    Mgmatrix setmatrix
    Mshowa
    /Mtmatrix exch def
    /Mrot 0 def
  } bind def
  /Mshowa {
    4 -2 roll
    moveto
    2 index
    Mtmatrix setmatrix
    Mvboxa
    7 1 roll
    Mboxout
    6 -1 roll
    5 -1 roll
    4 -1 roll
    Mshowa1
    4 1 roll
    Mshowa1
    rmoveto
    currentpoint
    Mfixwid
    { Mshowax }
    { Mshoway }
    ifelse
    pop pop pop pop
    Mgmatrix setmatrix
  } bind def
  /Mshowax {	
    0 1
    4 index length
    -1 add
    {
     2 index
     4 index
     2 index
     get
     3 index
     add
     moveto
     4 index
     exch get
     Mfixdash { Mfixdashp } if
     show
    } for
  } bind def
  /Mfixdashp {
    dup
    length
    1
    gt
    1 index
    true exch
    { 45 eq and } forall
    and
    {
     gsave
     (--) stringwidth pop
     (-)  stringwidth pop
     sub
     2 div
     0 rmoveto
     dup
     length
     1 sub
     { (-) show } repeat
    grestore
    }
    if
  } bind def	
  /Mshoway {
    3 index
    Mwidthcal
    5 1 roll
    0 1
    4 index length
    -1 add
    {
      2 index
      4 index
      2 index
      get
      3 index
      add
      moveto
      4 index
      exch get
      [
        6 index
        aload
        length
        2 add
        -1 roll
        {
          pop
          Strform
          stringwidth
          pop
          neg 
          exch
          add
          0 rmoveto
        }
        exch
        kshow
        cleartomark
        } for
        pop	
  } bind def
  /Mwidthcal {
    [ exch { Mwidthcal1 } forall ]
    [
     exch
     dup
     Maxlen
     -1 add
     0 1
     3 -1 roll
     {
     [
      exch
      2 index
      { 1 index Mget exch } forall		
      pop
      Maxget
      exch
     }
     for
     pop
     ]
     Mreva
  } bind def
  /Mreva { [ exch aload length -1 1 {1 roll} for ] } bind def
  /Mget	{
    1 index
    length
    -1 add
    1 index
    ge { get } { pop pop 0 } ifelse
  } bind def
  /Maxlen	{ [ exch { length } forall Maxget } bind def
  /Maxget	{ counttomark -1 add 1 1 3 -1 roll { pop Mmax } for exch pop } bind def
  /Mwidthcal1 { [ exch { Strform stringwidth pop } forall ] } bind def
  /Strform { /tem (x) def tem 0 3 -1 roll put tem } bind def
  /Mshowa1 { 2 copy add 4 1 roll sub mul sub -2 div } bind def
  /MathScale {
    Mwidth
    Mheight
    Mlp
    translate
    scale
    /yscale exch def
    /ybias exch def
    /xscale exch def
    /xbias exch def
    /Momatrix
    xscale yscale matrix scale
    xbias ybias matrix translate
    matrix concatmatrix def
    /Mgmatrix
    matrix currentmatrix
    def
  } bind def
  /Mlp {
    3 copy
    Mlpfirst
    {
      Mnodistort { Mmin dup } if
      4 index
      2 index
      2 index
      Mlprun
      11 index
      11 -1 roll
      10 -4 roll
      Mlp1
      8 index
      9 -5 roll
      Mlp1
      4 -1 roll
      and
      { exit } if
      3 -1 roll
      pop pop
    } loop
    exch
    3 1 roll
    7 -3 roll
    pop pop pop
  } bind def
  /Mlpfirst {
    3 -1 roll
    dup length
    2 copy
    -2 add
    get
    aload
    pop pop pop
    4 -2 roll
    -1 add
    get
    aload
    pop pop pop
    6 -1 roll
    3 -1 roll
    5 -1 roll
    sub
    div
    4 1 roll
    exch sub
    div
  } bind def
  /Mlprun {
    2 copy
    4 index
    0 get
    dup
    4 1 roll
    Mlprun1
    3 copy
    8 -2 roll
    9 -1 roll
    {
      3 copy
      Mlprun1
      3 copy
      11 -3 roll
      /gt Mlpminmax
      8 3 roll
      11 -3 roll
      /lt Mlpminmax
      8 3 roll
    } forall
    pop pop pop pop
    3 1 roll
    pop pop
    aload pop
    5 -1 roll
    aload pop
    exch
    6 -1 roll
    Mlprun2
    8 2 roll
    4 -1 roll
    Mlprun2
    6 2 roll
    3 -1 roll
    Mlprun2
    4 2 roll
    exch
    Mlprun2
    6 2 roll
  } bind def
  /Mlprun1 {
    aload pop
    exch
    6 -1 roll
    5 -1 roll
    mul add
    4 -2 roll
    mul
    3 -1 roll
    add
  } bind def
  /Mlprun2 { 2 copy add 2 div 3 1 roll exch sub } bind def
  /Mlpminmax {
    cvx
    2 index
    6 index
    2 index
    exec { 7 -3 roll 4 -1 roll } if
    1 index
    5 index
    3 -1 roll
    exec
    { 4  1 roll pop
      5 -1 roll
      aload
      pop pop
      4 -1 roll
      aload pop
      [
       8 -2 roll pop
       5 -2 roll pop
       6 -2 roll pop
       5 -1 roll
      ]
      4 1 roll pop
    }
    { pop pop pop }
    ifelse
  } bind def
  /Mlp1 {
    5 index
    3 index	sub
    5 index
    2 index mul
    1 index
    le
    1 index
    0 le
    or
    dup
    not
    { 1 index 3 index div .99999 mul 8 -1 roll pop 7 1 roll } if
    8 -1 roll
    2 div
    7 -2 roll
    pop sub
    5 index
    6 -3 roll
    pop pop
    mul sub
    exch
  } bind def
  /intop 0 def
  /inrht 0 def
  /inflag 0 def
  /outflag 0 def
  /xadrht 0 def
  /xadlft 0 def
  /yadtop 0 def
  /yadbot 0 def
  /Minner {
    outflag 1 eq { /outflag 0 def /intop 0 def /inrht 0 def } if		
    5 index
    gsave
    Mtmatrix setmatrix
    Mvboxa pop
    grestore
    3 -1 roll
    pop
    dup
    intop gt { /intop exch def } { pop } ifelse
    dup
    inrht gt { /inrht exch def } { pop } ifelse
    pop
    /inflag 1 def
  } bind def
  /Mouter {
    /xadrht 0 def
    /xadlft 0 def
    /yadtop 0 def
    /yadbot 0 def
    inflag
    1 eq
    {
     dup 0 lt { dup intop mul neg /yadtop exch def } if
     dup 0 gt { dup intop mul /yadbot exch def } if
     pop
     dup 0 lt { dup inrht mul neg /xadrht exch def } if
     dup 0 gt { dup inrht mul /xadlft exch def } if
     pop
     /outflag 1 def
    }
    { pop pop}
    ifelse
    /inflag 0 def
    /inrht 0 def
    /intop 0 def
  } bind def	
  /Mboxout {
    outflag
    1 eq {
     4 -1 roll
     xadlft
     leadjust
     add
     sub
     4 1 roll
     3 -1
     roll
     yadbot
     leadjust
     add
     sub
     3 1 roll
     exch
     xadrht
     leadjust
     add
     add
     exch
     yadtop
     leadjust
     add
     add
     /outflag 0 def
     /xadlft 0 def
     /yadbot 0 def
     /xadrht 0 def
     /yadtop 0 def
    } if
  } bind def
  /leadjust { (m) stringwidth pop .5 mul } bind def
  /Mrotcheck {
    dup
    90
    eq
    {
     yadbot
     /yadbot xadrht def	
     /xadrht yadtop def
     /yadtop xadlft def
     /xadlft exch def
    } if
    dup
    cos
    1 index
    sin
    Checkaux
    dup
    cos
    1 index
    sin neg
    exch
    Checkaux
    3 1 roll
    pop pop
  } bind def
  /Checkaux { 4 index exch 4 index mul 3 1 roll mul add 4 1 roll } bind def
  /Mboxrot {
    Mrot
    90 eq  { brotaux 4 2 roll } if
    Mrot
    180 eq { 4 2 roll brotaux 4 2 roll brotaux }	if
    Mrot
    270 eq { 4 2 roll brotaux } if
  } bind def
  /brotaux { neg exch neg } bind def
  /Mabsproc {
    0
    matrix defaultmatrix
    dtransform idtransform
    dup mul exch
    dup mul
    add sqrt
  } bind def
  /Mabswid { Mabsproc setlinewidth	} bind def
  /Mabsdash {
    exch
    [ exch { Mabsproc } forall ]
    exch
    setdash
  } bind def
  /MBeginOrig { Momatrix concat} bind def
  /MEndOrig { Mgmatrix setmatrix} bind def
  /sampledsound where
  { pop}
  { /sampledsound {
      exch
      pop
      exch
      5 1 roll
      mul
      4 idiv
      mul
      2 idiv
      exch pop
      exch
      /Mtempproc exch def
      { Mtempproc pop} repeat
    } bind def
  } ifelse
  /g { setgray} bind def
  /k { setcmykcolor} bind def
  /m { moveto} bind def
  /p { gsave} bind def
  /r { setrgbcolor} bind def
  /w { setlinewidth} bind def
  /C { curveto} bind def
  /F { fill} bind def
  /L { lineto} bind def
  /P { grestore} bind def
  /s { stroke} bind def
  /setcmykcolor where
  { pop}
  { /setcmykcolor {
      4 1 roll
      [ 4 1 roll ]
      {
       1 index sub
       1 sub neg
       dup
       0 lt { pop 0 } if
       dup
       1 gt { pop 1 } if
       exch
      } forall
      pop
      setrgbcolor
    } bind def
  } ifelse
  /Mcharproc { currentfile (x) readhexstring pop 0 get exch div } bind def
  /Mshadeproc {
    dup
    3 1
    roll
    { dup Mcharproc 3 1 roll } repeat
    1 eq { setgray }
         { 3 eq { setrgbcolor }
  	      { setcmykcolor }
  	      ifelse
         }
         ifelse
  } bind def
  /Mrectproc {
    3 index 2 index moveto
    2 index 3 -1 roll lineto
    dup 3 1 roll lineto
    lineto
    fill
  } bind def
  /Mcolorimage
  {
    7 1
    roll
    pop
    pop
    matrix
    invertmatrix
    concat
    2 exch exp
    1 sub
    3 1 roll
    1 1
    2 index
    {
      1 1
      4 index
      {
        dup 1 sub exch 2 index
        dup 1 sub exch 7 index
        9 index
        Mshadeproc
        Mrectproc
      } for
      pop
    } for
    pop pop pop pop
  } bind def
  /Mimage
  {
    pop
    matrix
    invertmatrix
    concat
    2 exch exp
    1 sub
    3 1 roll
    1 1
    2 index
    {
      1 1
      4 index
      {
        dup 1 sub exch 2 index
        dup 1 sub exch 7 index
        Mcharproc
        setgray
        Mrectproc
      } for
      pop
    } for
    pop pop pop
  } bind def
%T% Next line added by Tony [26-Jan-93]
end
%%EndDocument
 227 559 a
%%BeginDocument: fi:H3.eps
Mathdict begin
MathPictureStart
/Courier findfont 13  scalefont  setfont
% Scaling calculations
-0.690476 0.0595238 0.0147151 0.588604 [
[(12.5)] .05357 0 0 2 0 Minner Mrotsboxa
[(15)] .20238 0 0 2 0 Minner Mrotsboxa
[(17.5)] .35119 0 0 2 0 Minner Mrotsboxa
[(20)] .5 0 0 2 0 Minner Mrotsboxa
[(22.5)] .64881 0 0 2 0 Minner Mrotsboxa
[(25)] .79762 0 0 2 0 Minner Mrotsboxa
[(27.5)] .94643 0 0 2 0 Minner Mrotsboxa
[(number of bits \(b\))] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(0)] -0.0125 .01472 1 0 0 Minner Mrotsboxa
[(0.2)] -0.0125 .13244 1 0 0 Minner Mrotsboxa
[(0.4)] -0.0125 .25016 1 0 0 Minner Mrotsboxa
[(0.6)] -0.0125 .36788 1 0 0 Minner Mrotsboxa
[(0.8)] -0.0125 .4856 1 0 0 Minner Mrotsboxa
[(1)] -0.0125 .60332 1 0 0 Minner Mrotsboxa
[(omission probability)] -0.0125 .30902 1 0 90 -1 0 Mouter Mrotsboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.05357 0 m
.05357 .00625 L
s
P
[(12.5)] .05357 0 0 2 0 Minner Mrotshowa
p
.002 w
.20238 0 m
.20238 .00625 L
s
P
[(15)] .20238 0 0 2 0 Minner Mrotshowa
p
.002 w
.35119 0 m
.35119 .00625 L
s
P
[(17.5)] .35119 0 0 2 0 Minner Mrotshowa
p
.002 w
.5 0 m
.5 .00625 L
s
P
[(20)] .5 0 0 2 0 Minner Mrotshowa
p
.002 w
.64881 0 m
.64881 .00625 L
s
P
[(22.5)] .64881 0 0 2 0 Minner Mrotshowa
p
.002 w
.79762 0 m
.79762 .00625 L
s
P
[(25)] .79762 0 0 2 0 Minner Mrotshowa
p
.002 w
.94643 0 m
.94643 .00625 L
s
P
[(27.5)] .94643 0 0 2 0 Minner Mrotshowa
p
.001 w
.08333 0 m
.08333 .00375 L
s
P
p
.001 w
.1131 0 m
.1131 .00375 L
s
P
p
.001 w
.14286 0 m
.14286 .00375 L
s
P
p
.001 w
.17262 0 m
.17262 .00375 L
s
P
p
.001 w
.23214 0 m
.23214 .00375 L
s
P
p
.001 w
.2619 0 m
.2619 .00375 L
s
P
p
.001 w
.29167 0 m
.29167 .00375 L
s
P
p
.001 w
.32143 0 m
.32143 .00375 L
s
P
p
.001 w
.38095 0 m
.38095 .00375 L
s
P
p
.001 w
.41071 0 m
.41071 .00375 L
s
P
p
.001 w
.44048 0 m
.44048 .00375 L
s
P
p
.001 w
.47024 0 m
.47024 .00375 L
s
P
p
.001 w
.52976 0 m
.52976 .00375 L
s
P
p
.001 w
.55952 0 m
.55952 .00375 L
s
P
p
.001 w
.58929 0 m
.58929 .00375 L
s
P
p
.001 w
.61905 0 m
.61905 .00375 L
s
P
p
.001 w
.67857 0 m
.67857 .00375 L
s
P
p
.001 w
.70833 0 m
.70833 .00375 L
s
P
p
.001 w
.7381 0 m
.7381 .00375 L
s
P
p
.001 w
.76786 0 m
.76786 .00375 L
s
P
p
.001 w
.82738 0 m
.82738 .00375 L
s
P
p
.001 w
.85714 0 m
.85714 .00375 L
s
P
p
.001 w
.8869 0 m
.8869 .00375 L
s
P
p
.001 w
.91667 0 m
.91667 .00375 L
s
P
p
.001 w
.02381 0 m
.02381 .00375 L
s
P
p
.001 w
.97619 0 m
.97619 .00375 L
s
P
[(number of bits \(b\))] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .01472 m
.00625 .01472 L
s
P
[(0)] -0.0125 .01472 1 0 0 Minner Mrotshowa
p
.002 w
0 .13244 m
.00625 .13244 L
s
P
[(0.2)] -0.0125 .13244 1 0 0 Minner Mrotshowa
p
.002 w
0 .25016 m
.00625 .25016 L
s
P
[(0.4)] -0.0125 .25016 1 0 0 Minner Mrotshowa
p
.002 w
0 .36788 m
.00625 .36788 L
s
P
[(0.6)] -0.0125 .36788 1 0 0 Minner Mrotshowa
p
.002 w
0 .4856 m
.00625 .4856 L
s
P
[(0.8)] -0.0125 .4856 1 0 0 Minner Mrotshowa
p
.002 w
0 .60332 m
.00625 .60332 L
s
P
[(1)] -0.0125 .60332 1 0 0 Minner Mrotshowa
p
.001 w
0 .03826 m
.00375 .03826 L
s
P
p
.001 w
0 .0618 m
.00375 .0618 L
s
P
p
.001 w
0 .08535 m
.00375 .08535 L
s
P
p
.001 w
0 .10889 m
.00375 .10889 L
s
P
p
.001 w
0 .15598 m
.00375 .15598 L
s
P
p
.001 w
0 .17952 m
.00375 .17952 L
s
P
p
.001 w
0 .20307 m
.00375 .20307 L
s
P
p
.001 w
0 .22661 m
.00375 .22661 L
s
P
p
.001 w
0 .2737 m
.00375 .2737 L
s
P
p
.001 w
0 .29724 m
.00375 .29724 L
s
P
p
.001 w
0 .32079 m
.00375 .32079 L
s
P
p
.001 w
0 .34433 m
.00375 .34433 L
s
P
p
.001 w
0 .39142 m
.00375 .39142 L
s
P
p
.001 w
0 .41497 m
.00375 .41497 L
s
P
p
.001 w
0 .43851 m
.00375 .43851 L
s
P
p
.001 w
0 .46205 m
.00375 .46205 L
s
P
p
.001 w
0 .50914 m
.00375 .50914 L
s
P
p
.001 w
0 .53269 m
.00375 .53269 L
s
P
p
.001 w
0 .55623 m
.00375 .55623 L
s
P
p
.001 w
0 .57977 m
.00375 .57977 L
s
P
[(omission probability)] -0.0125 .30902 1 0 90 -1 0 Mouter Mrotshowa
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.05357 .61178 m
.05357 .61803 L
s
P
p
.002 w
.20238 .61178 m
.20238 .61803 L
s
P
p
.002 w
.35119 .61178 m
.35119 .61803 L
s
P
p
.002 w
.5 .61178 m
.5 .61803 L
s
P
p
.002 w
.64881 .61178 m
.64881 .61803 L
s
P
p
.002 w
.79762 .61178 m
.79762 .61803 L
s
P
p
.002 w
.94643 .61178 m
.94643 .61803 L
s
P
p
.001 w
.08333 .61428 m
.08333 .61803 L
s
P
p
.001 w
.1131 .61428 m
.1131 .61803 L
s
P
p
.001 w
.14286 .61428 m
.14286 .61803 L
s
P
p
.001 w
.17262 .61428 m
.17262 .61803 L
s
P
p
.001 w
.23214 .61428 m
.23214 .61803 L
s
P
p
.001 w
.2619 .61428 m
.2619 .61803 L
s
P
p
.001 w
.29167 .61428 m
.29167 .61803 L
s
P
p
.001 w
.32143 .61428 m
.32143 .61803 L
s
P
p
.001 w
.38095 .61428 m
.38095 .61803 L
s
P
p
.001 w
.41071 .61428 m
.41071 .61803 L
s
P
p
.001 w
.44048 .61428 m
.44048 .61803 L
s
P
p
.001 w
.47024 .61428 m
.47024 .61803 L
s
P
p
.001 w
.52976 .61428 m
.52976 .61803 L
s
P
p
.001 w
.55952 .61428 m
.55952 .61803 L
s
P
p
.001 w
.58929 .61428 m
.58929 .61803 L
s
P
p
.001 w
.61905 .61428 m
.61905 .61803 L
s
P
p
.001 w
.67857 .61428 m
.67857 .61803 L
s
P
p
.001 w
.70833 .61428 m
.70833 .61803 L
s
P
p
.001 w
.7381 .61428 m
.7381 .61803 L
s
P
p
.001 w
.76786 .61428 m
.76786 .61803 L
s
P
p
.001 w
.82738 .61428 m
.82738 .61803 L
s
P
p
.001 w
.85714 .61428 m
.85714 .61803 L
s
P
p
.001 w
.8869 .61428 m
.8869 .61803 L
s
P
p
.001 w
.91667 .61428 m
.91667 .61803 L
s
P
p
.001 w
.02381 .61428 m
.02381 .61803 L
s
P
p
.001 w
.97619 .61428 m
.97619 .61803 L
s
P
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 .01472 m
1 .01472 L
s
P
p
.002 w
.99375 .13244 m
1 .13244 L
s
P
p
.002 w
.99375 .25016 m
1 .25016 L
s
P
p
.002 w
.99375 .36788 m
1 .36788 L
s
P
p
.002 w
.99375 .4856 m
1 .4856 L
s
P
p
.002 w
.99375 .60332 m
1 .60332 L
s
P
p
.001 w
.99625 .03826 m
1 .03826 L
s
P
p
.001 w
.99625 .0618 m
1 .0618 L
s
P
p
.001 w
.99625 .08535 m
1 .08535 L
s
P
p
.001 w
.99625 .10889 m
1 .10889 L
s
P
p
.001 w
.99625 .15598 m
1 .15598 L
s
P
p
.001 w
.99625 .17952 m
1 .17952 L
s
P
p
.001 w
.99625 .20307 m
1 .20307 L
s
P
p
.001 w
.99625 .22661 m
1 .22661 L
s
P
p
.001 w
.99625 .2737 m
1 .2737 L
s
P
p
.001 w
.99625 .29724 m
1 .29724 L
s
P
p
.001 w
.99625 .32079 m
1 .32079 L
s
P
p
.001 w
.99625 .34433 m
1 .34433 L
s
P
p
.001 w
.99625 .39142 m
1 .39142 L
s
P
p
.001 w
.99625 .41497 m
1 .41497 L
s
P
p
.001 w
.99625 .43851 m
1 .43851 L
s
P
p
.001 w
.99625 .46205 m
1 .46205 L
s
P
p
.001 w
.99625 .50914 m
1 .50914 L
s
P
p
.001 w
.99625 .53269 m
1 .53269 L
s
P
p
.001 w
.99625 .55623 m
1 .55623 L
s
P
p
.001 w
.99625 .57977 m
1 .57977 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
.004 w
.02381 .60332 m
.08333 .60332 L
.14286 .60332 L
.20238 .60239 L
.2619 .57991 L
.32143 .48595 L
.38095 .34048 L
.44048 .20999 L
.5 .12216 L
.55952 .07114 L
.61905 .04364 L
.67857 .02936 L
.7381 .02208 L
.79762 .01841 L
.85714 .01657 L
.91667 .01564 L
.97619 .01518 L
s
p
[ .005 .015 ] 0 setdash
.02381 .60332 m
.08333 .60332 L
.14286 .60332 L
.20238 .60332 L
.2619 .568 L
.32143 .46205 L
.38095 .33845 L
.44048 .20895 L
.5 .13244 L
.55952 .07946 L
.61905 .0206 L
.67857 .02649 L
.7381 .02649 L
.79762 .01472 L
.85714 .0206 L
.91667 .0206 L
.97619 .01472 L
s
P
p
[ .02 .02 ] 0 setdash
.2619 .53564 m
.32143 .41461 L
.38095 .28717 L
.44048 .16322 L
.5 .09515 L
.55952 .05175 L
s
P
p
[ .02 .02 ] 0 setdash
.2619 .58775 m
.32143 .50246 L
.38095 .38838 L
.44048 .25925 L
.5 .17788 L
.55952 .11802 L
s
P
P
% End of Graphics
MathPictureEnd
%%EndDocument

 endTexFig
 183 1306 a Fp(Fig.)d(6.)k Fr(Omission)i(probabiliti)q(es)h(obtained)f
(from)d(the)h(exp)q(erimen)o(ts)i(\(dotted\))e(and)g(the)g(\014nal)h
(ap-)183 1352 y(pro)o(ximation)i(\(solid\))f(and)g(90\045)f
(con\014dence)h(in)o(terv)n(als)g(of)f(the)g(omission)i(probabiliti)q
(es)g(\(dashed\))183 1497 y Ft(are)j(sho)o(wn.)g(The)h(exp)q(erimen)o
(tal)e(results)j(in)d(the)i(\014gure)g(nicely)f(matc)o(h)f(the)i
(theoretical)183 1547 y(analysis.)245 1597 y(The)10 b(mean)f(n)o(um)o
(b)q(er)g(of)g(omitted)f(states)j(at,)e(for)h(example,)e(55\045)g
(omission)g(probabilit)o(y)183 1647 y(w)o(as)16 b(only)g(3.2,)f(out)i
(of)f(109)10 b(080)16 b(reac)o(hable)h(states.)g(The)g(90\045)f
(con\014dence)i(in)o(terv)n(al)e(for)183 1697 y(the)e(mean)e(n)o(um)o
(b)q(er)h(of)g(omitted)f(states)j(in)e(this)h(case)h(w)o(as)e(\(2.6,)6
b(3.8\).)12 b(Th)o(us,)i(co)o(v)o(erage)g(is)183 1747
y(exp)q(ected)i(to)d(degrade)i(v)o(ery)f(slo)o(wly)m(.)183
1882 y Fn(7)56 b(Conclusion)18 b(and)i(F)-5 b(uture)18
b(Researc)n(h)183 1983 y Ft(The)13 b(probabilistic)g(v)o(eri\014cation)
g(sc)o(heme)g(discussed)i(in)e(this)g(pap)q(er)h(w)o(ork)o(ed)g
(reliably)e(for)183 2033 y(sev)o(eral)g(large)g(v)o(eri\014cation)f
(examples.)g(A)h(small)e(probabilit)o(y)g(of)h(omitting)f(states)j
(during)183 2083 y(the)h(v)o(eri\014cation)g(pro)q(cess)h(seems)f
(negligible)f(in)g(comparison)f(with)i(the)g(other)g(inaccura-)183
2133 y(cies)e(incurred)h(b)o(y)e(making)e(v)o(eri\014cation)j(of)f
(large)g(systems)h(feasible.)f(Usually)m(,)f(one)i(has)g(to)183
2182 y(simplify)e(systems)j(of)f(industrial)h(size)g(\(e.g.)g(b)o(y)g
(do)o(wn-scaling)f(and)g(b)o(y)h(omitting)e(system)183
2232 y(parts\))i(b)q(efore)g(they)f(are)h(amenable)e(to)h(formal)e(v)o
(eri\014cation)i([14)o(].)f(This)h(simpli\014cation)e(is)183
2282 y(more)j(lik)o(ely)f(than)i(a)g(small)d(omission)h(probabilit)o(y)
h(to)g(lead)h(to)g(failures)f(in)h(detecting)h(all)183
2332 y(errors)g(in)e(the)i(system)e(under)i(v)o(eri\014cation.)245
2382 y(F)m(urthermore,)h(the)h(omission)d(probabilit)o(y)g(can)j(b)q(e)
g(con)o(trolled)f(b)o(y)g(the)h(user)g(of)f(the)183 2432
y(v)o(eri\014cation)11 b(system.)g(Our)h(rule)f(of)g(th)o(um)o(b)f
(\(14\))h(sho)o(ws)h(that)g(adding)e(just)i(one)g(bit)f(to)g(the)882
2556 y(15)p eop
%%Page: 16 16
16 15 bop 340 194 a Ft(compressed)14 b(v)n(alues)f(halv)o(es)g(the)h
(omission)d(probabilit)o(y)m(.)g(Th)o(us,)i(it)g(seems)g(adv)n(an)o
(tageous)340 244 y({)g(whenev)o(er)i(p)q(ossible)e({)g(to)g(add)f(a)h
(few)g(bits)g(to)g(the)h(compressed)g(v)n(alues)e(rather)i(than)f(to)
340 293 y(re-run)g(the)f(v)o(eri\014er)h(with)e(di\013eren)o(t)i(hash)f
(and)f(compression)g(functions.)h(In)f(practice,)i(for)340
343 y(large)h(hash)g(tables)g(with)g(on)f(the)i(order)f(of)g(500)f
(milli)o(on)e(b)o(ytes,)j(either)h(5-b)o(yte)f(or)f(4-b)o(yte)340
393 y(compression)e(is)h(recommended)e({)i(dep)q(ending)g(on)f(the)h
(maxim)n(um)7 b(omission)j(probabilit)o(y)340 443 y(one)k(is)g(willing)
e(to)i(tolerate.)403 494 y(While)d(space)i(w)o(as)f(for)f(a)h(long)f
(time)g(considered)i(to)f(b)q(e)g(the)h(ma)r(jor)d(limiting)f(factor)j
(in)340 544 y(v)o(eri\014cation,)e(w)o(e)g(curren)o(tly)h(exp)q
(erience)h(a)e(shift)f(to)h(run-time)f(as)h(the)h(new)f(ma)r(jor)f
(limiting)340 594 y(factor,)18 b(whic)o(h)h(increases)h(the)f(priorit)o
(y)f(of)g(researc)o(h)i(in)o(to)e(accelerating)h(explicit-state)340
644 y(v)o(eri\014cation)14 b(metho)q(ds.)403 695 y(Finally)m(,)f(one)j
(impro)o(v)o(emen)o(t)e(in)h(the)i(probabilistic)e(v)o(eri\014cation)h
(sc)o(heme)g(presen)o(ted)340 745 y(in)g(this)g(pap)q(er)g(could)g(b)q
(e)h(made.)d(If)i(a)f(sc)o(heme)h(lik)o(e)f(ordered)j(hashing)12
b([1)o(])j(that)h(aims)e(at)340 795 y(reducing)h(the)g(complexit)o(y)d
(of)i(the)h(unsuccessful)h(searc)o(h)f(in)f(a)g(hash)g(table)g(is)g
(emplo)o(y)o(ed,)340 844 y(the)k(omission)e(probabilit)o(y)g(is)h
(further)h(reduced.)h(Some)d(preliminary)g(results)i(indicate)340
894 y(that)d(thereb)o(y)g(the)h(the)f(n)o(um)o(b)q(er)e(of)h(bits)h(in)
f(the)h(compressed)g(v)n(alues)f(could)g(b)q(e)i(reduced)340
944 y(b)o(y)e(a)g(small)d(fraction.)340 1086 y Fn(Ac)n(kno)n(wledgemen)
n(ts)340 1193 y Ft(W)m(e)f(w)o(ould)g(lik)o(e)f(to)i(thank)f(the)h(mem)
o(b)q(ers)e(of)g(our)i(formal)d(v)o(eri\014cation)i(group)g(at)g
(Stanford,)340 1243 y(esp)q(ecially)17 b(Alan)f(Hu,)h(for)f
(discussions)i(on)e(the)i(sub)r(ject)g(of)e(this)h(pap)q(er.)g(F)m
(urthermore,)340 1293 y(discussions)d(with)f(Ric)o(hard)g(Chat)o(win)f
(help)q(ed)i(in)f(clarifying)e(some)h(asp)q(ects)j(of)e(the)g(anal-)340
1343 y(ysis)j(of)e(the)i(probabilistic)e(v)o(eri\014cation)h(sc)o
(heme.)g(W)m(e)g(are)g(also)g(grateful)f(to)h(Irene)i(Shen)340
1393 y(and)c(Gerard)g(Holzmann)e(for)h(their)h(commen)o(ts)e(on)i(a)f
(draft)h(of)f(this)h(pap)q(er)g(and)g(to)f(Pierre)340
1442 y(W)m(olp)q(er)h(and)g(Denis)g(Lero)o(y)g(for)g(sharing)g(the)g
(unpublished)h(revision)e([15)o(])h(of)f(their)i(pap)q(er)340
1492 y(with)g(us.)340 1634 y Fn(References)360 1738 y
Fr(1.)20 b(O.)12 b(Am)o(ble)j(and)g(D.)d(E.)i(Kn)o(uth.)21
b(Ordered)14 b(hash)h(tables.)21 b Fo(Computer)14 b(Journal)p
Fr(,)e(17\(2\):135{)410 1783 y(42,)h(1974.)360 1830 y(2.)20
b(J.)12 b(R.)g(Burc)o(h,)h(E.)f(M.)h(Clark)o(e,)g(K.)f(L.)g(McMillan,)j
(and)e(D.)f(L.)g(Dill.)19 b(Sequen)o(tial)c(circuit)f(v)o(er-)410
1876 y(i\014cation)i(using)f(sym)o(b)q(olic)h(mo)q(del)f(c)o(hec)o
(king.)21 b(In)14 b Fo(27th)e(A)o(CM/IEEE)j(Design)d(A)o(utomation)410
1922 y(Confer)n(enc)n(e)p Fr(,)e(pages)k(46{51,)g(1990.)360
1969 y(3.)20 b(J.)12 b(L.)i(Carter)g(and)h(M.)e(N.)h(W)m(egman.)22
b(Univ)o(ersal)16 b(classes)g(of)e(hash)h(functions.)23
b Fo(Journal)14 b(of)410 2015 y(Computer)f(and)g(System)f(Scienc)n(es)p
Fr(,)e(18\(2\):143{154,)k(1979.)360 2062 y(4.)20 b(T.)12
b(H.)f(Cormen,)g(C.)h(E.)f(Leiserson,)i(and)f(R.)g(L.)f(Riv)o(est.)18
b Fo(Intr)n(o)n(duction)8 b(to)k(A)o(lgorithms)p Fr(.)i(The)410
2107 y(MIT)f(Press,)g(1990.)360 2155 y(5.)20 b(D.)13
b(L.)k(Dill,)i(A.)12 b(J.)17 b(Drexler,)h(A.)12 b(J.)17
b(Hu,)g(and)h(C.)12 b(H.)17 b(Y)m(ang.)31 b(Proto)q(col)18
b(v)o(eri\014cation)i(as)e(a)410 2200 y(hardw)o(are)i(design)g(aid.)36
b(In)19 b Fo(IEEE)g(Internation)o(al)d(Confer)n(enc)n(e)h(on)h
(Computer)g(Design:)410 2246 y(VLSI)13 b(in)g(Computers)f(and)h(Pr)n(o)
n(c)n(essors)p Fr(,)d(pages)k(522{5,)g(1992.)360 2293
y(6.)20 b(D.)13 b(L.)e(Dill,)i(S.)g(P)o(ark,)e(and)i(A.)f(G.)f(No)o(w)o
(atzyk.)16 b(F)m(ormal)d(sp)q(eci\014cation)h(of)e(abstract)g(memory)
410 2339 y(mo)q(dels.)18 b(In)13 b Fo(Symp)n(osium)f(on)h(R)n(ese)n(ar)
n(ch)f(on)h(Inte)n(gr)n(ate)n(d)e(Systems)p Fr(,)g(pages)i(38{52,)h
(1993.)360 2386 y(7.)20 b(G.)12 b(H.)h(Gonnet)i(and)f(R.)f(Baeza-Y)m
(ates.)19 b Fo(Handb)n(o)n(ok)11 b(of)j(A)o(lgorithms)e(and)h(Data)g
(Structur)n(es)p Fr(.)410 2432 y(Addison-W)m(esley)j(Publishin)q(g)g
(Compan)o(y)m(,)d(2nd)h(edition,)g(1991.)1040 2556 y
Ft(16)p eop
%%Page: 17 17
17 16 bop 202 194 a Fr(8.)20 b(R.)13 b(L.)h(Graham,)h(D.)d(E.)i(Kn)o
(uth,)h(and)g(O.)d(P)o(atashnik.)23 b Fo(Concr)n(ete)14
b(Mathematics:)e(A)j(F)m(oun-)252 239 y(dation)d(for)h(Computer)g
(Scienc)n(e)p Fr(.)h(Addison-W)m(esley)i(Publishi)q(ng)g(Compan)o(y)m
(,)d(1988.)202 285 y(9.)20 b(G.)13 b(J.)k(Holzmann.)33
b Fo(Design)16 b(and)h(V)m(alidation)e(of)j(Computer)f(Pr)n(oto)n(c)n
(ols)p Fr(.)30 b(Pren)o(tice-Hall,)252 331 y(1991.)183
376 y(10.)20 b(A.)12 b(J.)j(Hu,)g(G.)e(Y)m(ork,)i(and)h(D.)d(L.)i
(Dill.)26 b(New)15 b(tec)o(hniques)j(for)d(e\016cien)o(t)i(v)o
(eri\014cation)h(with)252 422 y(implici)q(tly)d(conjoined)f(BDDs.)k(In)
12 b Fo(31st)f(Design)g(A)o(utomation)f(Confer)n(enc)n(e)p
Fr(,)g(pages)j(276{82,)252 468 y(1994.)183 513 y(11.)20
b Fo(IEEE)14 b(Std)f(1596-1992)o(,)e(IEEE)i(Standar)n(d)e(for)j(Sc)n
(alable)d(Coher)n(ent)h(Interfac)n(e)f(\(SCI\))p Fr(.)183
559 y(12.)20 b(C.)12 b(N.)k(Ip)h(and)g(D.)c(L.)j(Dill.)30
b(E\016cien)o(t)18 b(v)o(eri\014cation)h(of)e(symmetric)g(concurren)o
(t)h(systems.)252 605 y(In)c Fo(IEEE)h(Internation)o(al)c(Confer)n(enc)
n(e)h(on)i(Computer)g(Design:)e(VLSI)i(in)f(Computers)h(and)252
650 y(Pr)n(o)n(c)n(essors)p Fr(,)d(pages)j(230{234,)g(1993.)183
696 y(13.)20 b(D.)13 b(E.)18 b(Kn)o(uth.)35 b Fo(The)19
b(A)o(rt)g(of)f(Computer)h(Pr)n(o)n(gr)n(amming)p Fr(,)e(v)o(olume)d
(3.)35 b(Addison-W)m(esley)252 742 y(Publishi)q(ng)16
b(Compan)o(y)m(,)d(1973.)183 787 y(14.)20 b(U.)12 b(Stern)i(and)f(D.)f
(L.)h(Dill.)19 b(Automatic)13 b(v)o(eri\014cation)i(of)e(the)g(SCI)f
(cac)o(he)h(coherence)h(proto-)252 833 y(col.)22 b(In)14
b Fo(IFIP)h(WG)g(10.5)e(A)n(dvanc)n(e)n(d)f(R)n(ese)n(ar)n(ch)h
(Working)h(Confer)n(enc)n(e)e(on)j(Corr)n(e)n(ct)f(Har)n(d-)252
879 y(war)n(e)g(Design)e(and)h(V)m(eri\014c)n(ation)d(Metho)n(ds)p
Fr(,)h(1995.)183 924 y(15.)20 b(P)m(.)13 b(W)m(olp)q(er)d(and)g(D.)j
(Lero)o(y)m(.)i(Reliable)d(hashing)f(without)g(collision)h(detection.)
17 b(Unpublished)252 970 y(revised)e(v)o(ersion)f(of)f([16].)183
1016 y(16.)20 b(P)m(.)13 b(W)m(olp)q(er)d(and)g(D.)j(Lero)o(y)m(.)i
(Reliable)e(hashing)e(without)f(collisio)q(n)i(detection.)17
b(In)9 b Fo(Computer)252 1061 y(A)o(ide)n(d)j(V)m(eri\014c)n(ation.)f
(5th)h(International)e(Confer)n(enc)n(e)p Fr(,)g(pages)k(59{70,)f
(1993.)183 1107 y(17.)20 b(L.)13 b(Y)m(ang,)24 b(D.)13
b(Gao,)24 b(J.)12 b(Mostou\014,)26 b(R.)12 b(Joshi,)25
b(and)g(P)m(.)13 b(Lo)q(ew)o(enstein.)53 b(System)25
b(design)252 1153 y(metho)q(dology)16 b(of)d(UltraSP)m(AR)o(C)741
1137 y Fc(TM)788 1153 y Fr(-I.)k(In)c Fo(32nd)f(Design)g(A)o(utomation)
f(Confer)n(enc)n(e)p Fr(,)g(pages)252 1198 y(7{12,)j(1995.)882
2556 y Ft(17)p eop
%%Page: 18 18
18 17 bop 340 194 a Fn(App)r(endix)340 304 y Ft(In)10
b(this)h(app)q(endix,)e(an)h(upp)q(er)h(b)q(ound)j(^)-25
b Fk(p)967 310 y Fj(om)1023 304 y Ft(for)10 b(the)g(omission)e
(probabilit)o(y)h Fk(p)1545 310 y Fj(om)1600 304 y Ft(is)h(deriv)o(ed.)
340 354 y(Clearly)m(,)j(this)i(upp)q(er)g(b)q(ound)g(for)f(the)h
(omission)e(probabilit)o(y)f(yields)j(a)f(lo)o(w)o(er)g(b)q(ound)h(for)
340 404 y(the)21 b(no)f(omission)e(probabilit)o(y)h Fk(p)897
410 y Fj(no)954 404 y Ft(and)h(vice)g(v)o(ersa.)g(W)m(e)g(\014rst)h
(calculate)f(the)h(latter)340 454 y(b)q(ound.)403 506
y(The)15 b(\014rst)h(appro)o(ximation)c(in)j(our)g(appro)o(ximate)e
(analysis)i(w)o(as)g(\(2\).)g(W)m(e)f(try)i(to)f(re-)340
556 y(place)f(this)f(appro)o(ximation)d(b)o(y)j(a)g(w)o(orst)h(case)g
(form)o(ula.)c(This)j(w)o(orst)g(case)i(o)q(ccurs,)f(when)340
606 y(eac)o(h)g(of)e(the)h Fk(j)j Ft(compressed)e(v)n(alues)f(the)g
(compressed)h(state)g(to)f(b)q(e)g(en)o(tered)i(is)e(compared)340
655 y(with)h(is)g(di\013eren)o(t)h(from)d(all)g(the)j(others.)f(Hence,)
h(w)o(e)f(obtain)839 773 y(Pr\()p Fk(N)932 779 y Fs(k)965
773 y Fi(j)d Fk(C)1018 779 y Fs(k)1043 773 y Ft(=)5 b
Fk(j)r Ft(\))12 b Fi(\025)1176 745 y Fk(l)s Fi(\000)r
Fk(j)p 1176 764 70 2 v 1204 802 a(l)1271 773 y(:)340
883 y Ft(By)h(using)g(the)g(theorem)g(of)f(total)g(probabilit)o(y)m(,)e
(the)k(de\014nition)e(of)h Fk(p)1428 889 y Fs(k)1461
883 y Ft(and)f(the)i(de\014nition)340 933 y(of)g(the)g(exp)q(ected)i(v)
n(alue,)d(w)o(e)h(obtain)631 1070 y Fk(p)652 1076 y Fs(k)693
1070 y Fi(\021)21 b Ft(Pr\()p Fk(N)839 1076 y Fs(k)861
1070 y Ft(\))g(=)971 1019 y Fs(k)951 1031 y Ff(X)952
1119 y Fs(j)r Fj(=0)1017 1070 y Ft(Pr\()p Fk(N)1110 1076
y Fs(k)1143 1070 y Fi(j)11 b Fk(C)1196 1076 y Fs(k)1221
1070 y Ft(=)5 b Fk(j)r Ft(\))10 b(Pr\()p Fk(C)1393 1076
y Fs(k)1418 1070 y Ft(=)5 b Fk(j)r Ft(\))693 1222 y Fi(\025)767
1170 y Fs(k)746 1183 y Ff(X)747 1271 y Fs(j)r Fj(=0)818
1194 y Fk(l)s Fi(\000)r Fk(j)p 818 1212 V 846 1250 a(l)902
1222 y Ft(Pr\()p Fk(C)992 1228 y Fs(k)1017 1222 y Ft(=)g
Fk(j)r Ft(\))21 b(=)h(1)9 b Fi(\000)1240 1194 y Ft(1)p
1240 1212 21 2 v 1244 1250 a Fk(l)1275 1222 y Ft(E[)p
Fk(C)1345 1228 y Fs(k)1365 1222 y Ft(])20 b Fk(:)340
1365 y Ft(Substituting)14 b(this)g(result)h(in)o(to)e(\(4\))h(and)g(m)o
(ultiplyi)o(ng)d(out)j(the)g(pro)q(duct)h(yields)546
1503 y Fk(p)567 1509 y Fj(no)625 1503 y Fi(\025)21 b
Ft(1)d Fi(\000)773 1475 y Ft(1)p 773 1493 V 777 1531
a Fk(l)815 1451 y Fs(n)p Fh(\000)p Fj(1)817 1463 y Ff(X)816
1553 y Fs(k)q Fj(=0)885 1503 y Ft(E[)p Fk(C)955 1509
y Fs(k)975 1503 y Ft(])g(+)1056 1444 y Ff(\022)1091 1475
y Ft(1)p 1091 1493 V 1095 1531 a Fk(l)1117 1444 y Ff(\023)1147
1453 y Fj(2)1182 1451 y Fs(n)p Fh(\000)p Fj(1)1184 1463
y Ff(X)1184 1553 y Fs(k)q Fj(=0)1271 1451 y Fs(n)p Fh(\000)p
Fj(1)1273 1463 y Ff(X)1252 1553 y Fs(j)r Fj(=)p Fs(k)q
Fj(+1)1360 1503 y Ft(E[)p Fk(C)1430 1509 y Fs(k)1450
1503 y Ft(])7 b(E[)p Fk(C)1539 1509 y Fs(j)1556 1503
y Ft(])687 1654 y Fi(\000)736 1595 y Ff(\022)771 1626
y Ft(1)p 771 1644 V 775 1682 a Fk(l)797 1595 y Ff(\023)828
1604 y Fj(3)863 1602 y Fs(n)p Fh(\000)p Fj(1)864 1615
y Ff(X)864 1704 y Fs(k)q Fj(=0)952 1602 y Fs(n)p Fh(\000)p
Fj(1)953 1615 y Ff(X)932 1704 y Fs(j)r Fj(=)p Fs(k)q
Fj(+1)1056 1602 y Fs(n)p Fh(\000)p Fj(1)1058 1615 y Ff(X)1041
1703 y Fs(i)p Fj(=)p Fs(j)r Fj(+1)1142 1654 y Ft(E[)p
Fk(C)1212 1660 y Fs(k)1232 1654 y Ft(])g(E[)p Fk(C)1321
1660 y Fs(j)1337 1654 y Ft(])g(E[)p Fk(C)1426 1660 y
Fs(i)1439 1654 y Ft(])18 b(+)h Fk(:)7 b(:)g(:)138 b Ft(\(15\))340
1795 y(The)17 b(triple)g(sum)f(in)g(the)h(fourth)g(term)f(on)g(the)h
(righ)o(t-hand)f(side)h(can)g(b)q(e)h(rewritten)g(b)o(y)340
1845 y(c)o(hanging)c(the)g(order)h(of)e(summation,)d(namely)416
1929 y Fs(n)p Fh(\000)p Fj(1)418 1942 y Ff(X)417 2031
y Fs(k)q Fj(=0)505 1929 y Fs(n)p Fh(\000)p Fj(1)507 1942
y Ff(X)486 2031 y Fs(j)r Fj(=)p Fs(k)q Fj(+1)610 1929
y Fs(n)p Fh(\000)p Fj(1)612 1942 y Ff(X)594 2030 y Fs(i)p
Fj(=)p Fs(j)r Fj(+1)696 1981 y Ft(E[)p Fk(C)766 1987
y Fs(k)786 1981 y Ft(])c(E[)p Fk(C)874 1987 y Fs(j)891
1981 y Ft(])h(E[)p Fk(C)980 1987 y Fs(i)993 1981 y Ft(])20
b(=)1078 1929 y Fs(n)p Fh(\000)p Fj(1)1080 1942 y Ff(X)1079
2031 y Fs(k)q Fj(=0)1167 1929 y Fs(n)p Fh(\000)p Fj(1)1169
1942 y Ff(X)1148 2031 y Fs(j)r Fj(=)p Fs(k)q Fj(+1)1256
1981 y Ft(E[)p Fk(C)1326 1987 y Fs(k)1346 1981 y Ft(])7
b(E[)p Fk(C)1435 1987 y Fs(j)1452 1981 y Ft(])1493 1929
y Fs(n)p Fh(\000)p Fj(1)1494 1942 y Ff(X)1477 2030 y
Fs(i)p Fj(=)p Fs(j)r Fj(+1)1579 1981 y Ft(E[)p Fk(C)1649
1987 y Fs(i)1662 1981 y Ft(])20 b Fk(:)340 2141 y Ft(Th)o(us,)9
b(the)h(fourth)g(term)e(has)i(the)g(additional)d(\(non-constan)o(t\))j
(factor)1453 2095 y Ff(\020)1483 2125 y Fj(1)p 1483 2132
17 2 v 1486 2156 a Fs(l)1520 2110 y Ff(P)1564 2120 y
Fs(n)p Fh(\000)p Fj(1)1564 2154 y Fs(i)p Fj(=)p Fs(j)r
Fj(+1)1668 2141 y Ft(E[)p Fk(C)1738 2147 y Fs(i)1751
2141 y Ft(])1763 2095 y Ff(\021)340 2212 y Ft(in)j(comparison)e(to)h
(the)h(third)g(term.)f(If)g(w)o(e)h(assume)f(that)g Fk(l)h
Fi(\025)1337 2181 y Ff(P)1381 2191 y Fs(n)p Fh(\000)p
Fj(1)1381 2225 y Fs(i)p Fj(=0)1453 2212 y Ft(E[)p Fk(C)1523
2218 y Fs(i)1536 2212 y Ft(],)f(the)h(v)n(alue)f(of)340
2262 y(this)i(factor)g(can)g(b)q(e)h(b)q(ounded)f(ab)q(o)o(v)o(e)g(as)
738 2361 y(1)p 738 2380 21 2 v 742 2418 a Fk(l)796 2338
y Fs(n)p Fh(\000)p Fj(1)797 2350 y Ff(X)780 2439 y Fs(i)p
Fj(=)p Fs(j)r Fj(+1)882 2390 y Ft(E[)p Fk(C)952 2396
y Fs(i)965 2390 y Ft(])20 b Fk(<)1055 2361 y Ft(1)p 1055
2380 V 1059 2418 a Fk(l)1097 2338 y Fs(n)p Fh(\000)p
Fj(1)1099 2350 y Ff(X)1102 2439 y Fs(i)p Fj(=0)1167 2390
y Ft(E[)p Fk(C)1237 2396 y Fs(i)1250 2390 y Ft(])h Fi(\024)g
Ft(1)f Fk(:)1040 2556 y Ft(18)p eop
%%Page: 19 19
19 18 bop 183 194 a Ft(Then,)15 b(the)i(di\013erence)g(of)e(the)h
(third)g(and)f(the)h(fourth)g(term)f(of)g(the)h(righ)o(t-hand)f(side)h
(of)183 244 y(inequalit)o(y)h(\(15\))h(is)h(greater)g(than)g(zero.)g
(Using)f(the)h(ab)q(o)o(v)o(e)g(argumen)o(t)e(for)h(all)f(higher)183
293 y(n)o(um)o(b)q(ered)c(terms,)h(w)o(e)g(obtain)676
416 y Fk(p)697 422 y Fj(no)755 416 y Fi(\025)21 b Ft(1)9
b Fi(\000)884 388 y Ft(1)p 884 406 21 2 v 888 444 a Fk(l)926
364 y Fs(n)p Fh(\000)p Fj(1)928 376 y Ff(X)928 466 y
Fs(k)q Fj(=0)996 416 y Ft(E[)p Fk(C)1066 422 y Fs(k)1086
416 y Ft(])20 b Fk(:)420 b Ft(\(16\))183 549 y(Observ)o(e,)15
b(that)g(this)g(inequalit)o(y)e(also)h(holds)g(for)h
Fk(l)f(<)1049 518 y Ff(P)1093 528 y Fs(n)p Fh(\000)p
Fj(1)1093 561 y Fs(i)p Fj(=0)1165 549 y Ft(E[)p Fk(C)1235
555 y Fs(i)1248 549 y Ft(])g(since)h Fk(p)1397 555 y
Fj(no)1449 549 y Ft(is)f(a)h(prob-)183 599 y(abilit)o(y)i(and)h(th)o
(us)h(it)f(holds)h(for)f(all)11 b Fk(l)q Ft(.)18 b(Plugging)g(form)o
(ula)e(\(10\))i(in)o(to)g(\(16\),)g(w)o(e)h(\014nally)183
649 y(obtain)13 b(our)h(upp)q(er)h(b)q(ound)f(for)f(the)i(omission)c
(probabilit)o(y)m(,)h(namely)423 751 y Fk(p)444 757 y
Fj(om)510 751 y Fi(\024)25 b Ft(^)-25 b Fk(p)584 757
y Fj(om)651 751 y Ft(:=)720 723 y(1)p 720 742 V 724 780
a Fk(l)762 751 y Ft([\()p Fk(m)10 b Ft(+)f(1\))e([)p
Fk(H)968 757 y Fs(m)p Fj(+1)1050 751 y Fi(\000)i Fk(H)1126
757 y Fs(m)p Fh(\000)p Fs(n)p Fj(+1)1246 751 y Ft(])f
Fi(\000)i Fk(n)p Ft(])27 b Fk(:)882 2556 y Ft(19)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
