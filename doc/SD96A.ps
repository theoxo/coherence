%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: p.dvi
%%Pages: 16
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSCommandLine: dvips -o p.ps p
%DVIPSParameters: dpi=600, compressed, comments removed
%DVIPSSource:  TeX output 1996.07.17:1714
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 40258431 52099146 1000 600 600 (p.dvi)
@start /Fa 56 122 df<EF7FF80407B5FC93391FC00FC093393E0001E004FCEB00F04B
4813014B4813075E0307140FA24B5A19E0031FEC03804C90C7FCA3153F93C9FCA45D157E
A415FE91B8FCA260DA00FCC7127E020115FE4B5CA317016014035D170360A214074B1307
60A3020F140F4B5CA3171F021F5D5DA2053F13E01801023F16C092C7FCA2EF7F03057E13
805C027E15071900173E180E02FEEC1E1E4AEC1F1CEF07F8EF01E094C8FC495AA35C1303
A2001C5B127FEAFF075CA2495A00FE90CBFCEAF81FEA701EEA783CEA1FF0EA07C03C5A83
C537>12 D<167016E0ED01C0ED0380ED0700150E153C5D15F85D4A5A4A5A4A5A140F4AC7
FC141E143E5C147814F8495A5C1303495AA2495AA249C8FCA25B133E137E137CA25BA212
015BA212035BA212075BA2120FA25BA2121FA290C9FCA25AA2123EA3127EA2127CA65AAB
1278A6127C123CA47EA2120E120FA27E6C7EA26C7EA26C7E1360246472CA28>40
D<1560A2157081A281151E150E150FA2811680A3ED03C0A516E0A21501A71503A91507A2
16C0A4150FA21680A2151FA21600A25DA2153EA2157EA2157C15FCA25D1401A25D14035D
A214075D140F5DA24AC7FCA2143EA25C147814F8495AA2495A5C1307495A91C8FC131E13
3E5B13785B485A485A485A48C9FC121E5A5A12E05A23647FCA28>I<13F0EA03FC1207A2
EA0FFEA4EA07FCEA03CCEA000C131C1318A2133813301370136013E0EA01C013801203EA
0700120E5A5A5A5A5A0F1D7A891E>44 D<007FB5FCB6FCA214FEA21805789723>I<120F
EA3FC0127FA212FFA31380EA7F00123C0A0A76891E>I<F001C018031807A2F00F80A2F0
1F00A2183E187E187C60A24D5AA24D5AA24D5A170F604DC7FCA2173EA25F17FC5F4C5AA2
4C5AA24C5AA24C5A161F94C8FC163EA25EA25E15015E4B5AA24B5AA24B5AA24BC9FC5D15
3E5DA25DA24A5A14035D4A5AA24A5AA24ACAFCA2143E147E147C5CA2495AA2495A13075C
495AA249CBFCA2133EA25B13FC5B485AA2485AA2485A120F5B48CCFCA2123EA25AA25AA2
12703A647FCA32>I<ED3F80913801FFE0913807C0F891381F007C023C7F4A131E4A131F
49487F01031580495A5C130F49C713C0A25B137EA213FE5B161F12014915801203A24914
3F1207A2170048485CA4484814FEA44848495AA448C7485AA35E1507127E5E00FE140F5E
A248141F5EA24BC7FC153E157E007C147C15FC5D4A5A003C495A003E5C4A5A6C011FC8FC
380F803E3807C0F83801FFE06C6CC9FC2A4475C132>I<16C01501A215031507ED0F8015
1F153F157F913801FF005C140F147F903807FCFEEB0FF0EB0700EB00015DA314035DA314
075DA3140F5DA3141F5DA3143F5DA3147F92C7FCA35C5CA313015CA313035CA313075CA2
130FA2131F133FB612FCA25D224276C132>I<ED3FC0913801FFF0913807C07C4AC67E02
1CEB1F800278130F4AEB07C0494814E04A1303494814F0130749C7FCEB0E06D91E0714F8
EB1C03133C1338137813704A1307D9F00614F013E0140E020C130F0001011C14E0EBC018
0238131F4A14C06C6C48EB3F80D9E1C0137FD97F801400013EC712FE90C7485A4B5A4B5A
4B5AED1F804BC7FC15FC4A5AEC03E0EC0FC0023FC8FC147CEB01F0495AEB0780011FC9FC
133E49EC03805B49140748481500485A48485C90C8121E5A001E5D001C157CD83FFC5C90
38FFC0013A7C0FFC07F0D87803B55AEA700126F0007F5B486D90C7FCEC0FFEEC03F82D44
78C132>I<ED1FE0EDFFFC913803E03F91390F000F80023EEB07C00278EB03E05C4948EB
01F0495A495A91C713F85BEB0E0CEB1E0EEB1C061603013C15F01338A2020E1307020C14
E0141CD91C78EB0FC0D90FE0131F6D48148090C8EA3F00167E5E4B5A4B5AED0FE091383F
FF804A48C7FC15F8EC007E151F6F7E6F7E82150382A482A34B5A121FEA7F80A2150F48C7
5BA2484A5A12F800E04A5AA24BC7FC007014FE5D0078495A0038495A003CEB0FC06C495A
260780FEC8FC3803FFF038007F802D4477C132>I<EE0380EE0FC0A2161F1780A3163F17
00A3167EA35EA34B5AA34B5AA25E1507A24B5AA24B5AA293C7FC5D153E157E157C15FC5D
4A5AA24A5A14075D4A5A16E091381F01F0EC3E03143C147CECF807D901F05B14E0130390
3807C00FD90F805BEB1F00131E49131F495C5B485A3903FFC03F000F01F890C7FC4813FF
397E003FFF007801071480480101EBFFC000606D7EC8EBFE0003FEC7FC5DA314015DA314
035DA314075DA4EC03802A557DC132>I<026014300278EB01F091397F801FE091B612C0
1780170016FC4914F016C0DACFFEC7FC02C0C8FC13035CA3130791C9FCA35B130EA3131E
90381C07F8EC3FFE9138F80F8090393DC007C0D93F807F90383E0003013C80496D7E1370
A290C7FC82A41503A415075E120E123F486C130F00FF5DA390C7485A5A00F84A5A12E04B
5A93C7FC15FE14016C5C0070495A0078495A6CEB1FC0003E495A261F80FEC8FC6CB45A00
0313E0C66CC9FC2C4476C132>I<ED03FCED1FFF037F13C0913801FE07913903F001E091
380FE00091381F800391383F000F027E131F5C495A495A010715C04948EB07004A90C7FC
131F495AA249C9FCA213FE1201A2485AEC07F09038F83FFC0007EBF81F9039F9C00F803A
0FFB8007C0EBF70001FE80491303001F815B5B82485AA3491307127F5BA2150F5E90C7FC
A2151F485DA25A4B5AA2007E5D157F93C7FC5D5D4A5A003E495A003F5C4A5A6C6C485A00
0FEB3F80D9C0FEC8FC3803FFFC6C13F038007F802B4475C132>I<9026380FC0131C9038
787FE0902671FFF0133C01F3157801EF15F090B5FC4801E0EB01E09139007003C04848EB
380701F8EC1F804848EB1C3F4990381FFF004848EB07DF49EB001E48C85A121E5E4815F8
00385D0078140100705D00F01403485D1507C8485AA24BC7FCA25D153E157E157C15FC5D
1401A24A5AA214075D140F5D141FA25D143FA24AC8FCA314FEA21301A25C1303A25C1307
A35C130FA35C5C6D5A2E4472C132>I<ED3FC0EDFFF0020313FC91380FE07E91383F803F
4A487E02FC14800101140F494814C0495A495AA2495A133F4A14E0137FA249C7FC161FA2
4816C05BA2163F12035BA2167F17804914FFA34B130012015D5D00005D6D130F017C131D
153B6DEB73FC90381F03E3903907FF83F8903801FC0790C7FC5E150F5E151F5E4B5AA24B
C7FCA2001C14FE007F5C48495A4A5A14074A5A485C00F8013FC8FC48137E5C387C07F038
3FFFE06C1380D803FCC9FC2B4476C132>57 D<130FEB1FC0133FEB7FE013FFA214C0EB7F
801400131E90C7FCB3A5120FEA3FC0127FA212FFA35B6CC7FC123C132B76AA1E>I<EF03
801707A24D7EA2171FA2173F177FA217FFA25EA2EE03BF1607173F160F160E161C841638
171F167016F016E0ED01C0A2ED0380A2ED0700A2150E151E151C5D845D170F5D14015D14
035D4AC7FC92B6FC5CA2021CC7120F143C14385CA24A81A249481407A2495A130791C8FC
130E131EA25B137C13FC00014C7ED807FE151FB500E00107B512F8A219F03D477BC648>
65 D<DC0FF8130393B513070307ECC00F923A1FF803E01F923A7FC000F81E4BC7EA7C3E
DA03FCEC3C7EDA0FF0EC1EFE4A48EC0FFC4A4814074AC8FC02FE1503494816F813034948
1501495A494816F0495A137F5C01FF17E04890C9FCA2485A19C0485AA2485A95C7FC121F
5BA2123F5BA3127F5BA4485AA41838A218781870A218F0007F5F1701601703003F5F1707
6D4BC7FC001F160E171E6C6C5D6D5D00075E6C6C4A5A6DEC07C06C6C4A5AD8007F023EC8
FCD93FC013FC90391FF807F00107B512C0010191C9FC9038001FF0404872C546>67
D<91B712F818FF19C00201903980003FF06E90C7EA0FF84AED03FCF000FE4B157FA2F13F
800203EE1FC05DF10FE0A214074B16F01907A2140F5D1AF8A2141F5DA2190F143F5D1AF0
A2147F4B151FA302FF17E092C9123FA34918C04A167F1A80A2010317FF4A1700A24E5A13
074A4B5A611807010F5F4A4B5A181F61011F4C5A4A4BC7FC18FE4D5A013F4B5A4A4A5A4D
5A017FED3FC005FFC8FC4AEB03FE01FFEC1FF8B812E094C9FC16F845447AC34A>I<91B9
12C0A30201902680000313806E90C8127F4A163F191F4B150FA30203EE07005DA314074B
5D190EA2140F4B1307A25F021F020E90C7FC5DA2171E023F141C4B133C177C17FC027FEB
03F892B5FCA39139FF8003F0ED00011600A2495D5CA2160101034B13705C19F061010791
C8FC4A1501611803010F5F4A150796C7FC60131F4A151E183E183C013F167C4A15FC4D5A
017F1503EF0FF04A143F01FF913803FFE0B9FCA26042447AC342>I<91B91280A3020190
2680000713006E90C8FC4A163FA24B81A30203160E5DA314074B151E191CA2140F5D1707
5F021F020E90C7FC5DA2171E023F141C4B133CA2177C027F5CED800392B5FCA291B65AED
00071601A2496E5A5CA2160101035D5CA2160301075D4A90CAFCA3130F5CA3131F5CA313
3F5CA2137FA313FFB612E0A341447AC340>I<DC0FF81306DCFFFE130E03079038FF801E
923A1FF807E03E923A7F8001F03CDA01FEC7EA787CDA03F8EC3CFCDA0FF0141D4A48EC1F
F8DA3F80140F4AC8FCD901FE1507494816F05C01071603495A494816E0495A137F5C01FF
17C04890C9FC5B12031980485AA2485A95C7FC121F5BA2123F5BA3127F5BA4485A043FB5
12E0A39339001FF80060A360A2007F163F60A3177F003F5F7F121F17FF6D93C7FC000F5D
6C6C5C7F6C6C4A5A6C6CEC1F3E6C6C143ED93FC0EBF81E903A1FF007F01C0107B5EAC00C
010149C9FC9038003FF03F4872C54B>I<91B6D8803FB512E0A302010180C7387FE0006E
90C86C5A4A167FA24B5EA219FF14034B93C7FCA26014074B5DA21803140F4B5DA2180714
1F4B5DA2180F143F4B5DA2181F147F92B75AA3DAFF80C7123F92C85BA2187F5B4A5EA218
FF13034A93C8FCA25F13074A5DA21703130F4A5DA21707131F4A5DA2170F133F4A5DA201
7F151FA24A5D496C4A7EB6D8803FB512E0A34B447AC348>I<027FB512E091B6FCA20200
EBE000ED7F8015FFA293C7FCA35C5DA314035DA314075DA3140F5DA3141F5DA3143F5DA3
147F5DA314FF92C8FCA35B5CA313035CA313075CA3130F5CA3131F5CA2133FA25CEBFFE0
B612E0A25D2B447BC326>I<031FB512F05DA29239000FFC005FA35FA2161FA25FA2163F
A25FA2167FA25FA216FFA294C7FCA25DA25EA21503A25EA21507A25EA2150FA25EA2151F
A25EA2153FA25EA2157FA25EEA0F80D83FE013FF93C8FC127FA24A5AEAFFC04A5A130000
7C495A0070495A4A5A6C5C003C495A6C01FEC9FC380F81F83803FFE0C690CAFC344679C3
33>I<91B612F0A25F020101C0C7FC6E5B4A90C8FCA25DA314035DA314075DA3140F5DA3
141F5DA3143F5DA3147F5DA314FF92C9FCA35B5CA3010316104A1538A21878010716705C
18F018E0010F15015C18C01703011F15074A1580170FA2013FED1F004A5C5F017F15FE16
034A130F01FFEC7FFCB8FCA25F35447AC33D>76 D<91B56C93387FFFC08298B5FC02014D
EBC0006E614A5FA203DF4C6CC7FC1A0E63912603CFE05D038F5F1A381A711407030FEEE1
FCA2F101C3020FEE0383020E60F107036F6C1507021E160E021C60191CF1380F143C0238
04705BA2F1E01F0278ED01C091267003F85EF003801A3F02F0ED070002E0030E5CA24E13
7F130102C04B91C8FC606201036D6C5B02805F4D5A943803800113070200DA07005BA205
0E1303495D010E606F6C5A1907011E5D011C4B5CA27048130F133C01384B5C017892C7FC
191F01F85C486C027E5DD807FE027C4A7EB500F00178013FB512C0A216705A447AC357>
I<91B712F018FEF0FF800201903980007FE06E90C7EA1FF04AED07F818034B15FCF001FE
1403A24B15FFA21407A25DA2140FF003FE5DA2021F16FC18074B15F8180F023F16F0F01F
E04B15C0F03F80027FED7F0018FE4BEB03FCEF0FF002FFEC7FC092B6C7FC17F892CAFC5B
A25CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA25CA2137FA25C497EB67E
A340447AC342>80 D<91B77E18F818FE020190398001FF806E90C7EA3FC04AED1FE0F00F
F04BEC07F8180319FC14034B15FEA314075DA3020FED07FC5DA2F00FF8141F4B15F0F01F
E0F03FC0023F16804BEC7F0018FEEF03F8027F4A5A4BEB1FC04CB4C7FC92B512F891B612
E092380003F8EE00FE177F496F7E4A6E7EA28413034A140FA2171F13075CA2173F130F5C
A24D5A131F5CA3013F170E5CA2017FEE801E191C4A163C496C1638B66C90383FC070051F
13F094380FE1E0CA3803FF80943800FE003F467AC347>82 D<DB03FE130C92390FFF801C
037FEBE03C9238FE03F8913A03F0007C7C4A48EB3EF84A48131F4A48130F4AC7FC027EEC
07F05C1703495A18E0495AA213074A15C0A3130F1880A28094C7FCA280806D7EECFFE015
FC6DEBFF806D14F016FC6D14FF023F80020F801403DA003F7F150703007F163F161F160F
A21607A3120716031607A2485EA2120E160F001E5EA2001F4B5AA2484BC7FC6D143E167E
6D5C007F4A5A6D495AD87CF0495AD8787CEB1F8027F03F807FC8FC90381FFFFCD8E00713
F039C0007F80364879C537>I<48B912F85AA2913B0007FC001FF0D807F84A130701E001
0F140349160148485C90C71500A2001E021F15E05E121C123C0038143F4C1301007818C0
127000F0147F485DA3C800FF91C7FC93C9FCA35C5DA314035DA314075DA3140F5DA3141F
5DA3143F5DA3147F5DA314FF92CAFCA35B5CA21303A21307497E007FB612C0A25E3D446F
C346>I<B6913807FFFEA25C000301C0020013E06C90C9EA7F00183E183C60A26C177060
1701604D5AA24DC7FC5F170E6E5CA2017F5D177817705FA24C5AA24C5A16076E91C8FC16
0E133F5E163C16385EA25E15015E6E485AA24BC9FC131F150E151E151C5DA25D15F05DEC
F1C0A290380FF38014F792CAFC14FEA25CA25C5CA25C13075CA25C91CBFC3F466CC348>
86 D<B500FE013FB50107B5FC5EA200030180010101C09038007FF091C849EC3FC04993
C8EA1F8000011B001B1E1B1C1B3C1B381B781B704C5EA24C4B5A5E505A5E040E4BC7FC5E
1A0E4C151E1A1C4C6D133C1A384C5D177FDB01C05DA26DD903804A5A150704004A5A6C5C
030E4BC8FC5D190E4B151E191C4B153C19384B5DA24A485D14034BEC81C0140792C7EB83
80140E0687C9FC4A158F188E4A15DE18DC4A15F8173F4A5DA24A5DA24A5D137F91C85B13
7E95CAFC137C173E1378173C0170153858466CC361>I<EC1F80EC7FE0903901F0707090
3907C039F890380F801D90381F001F013E6D5A137E5B484813075E485A120749130F000F
5DA2485A151F003F5D5BA2153F007F92C7FC90C7FCA25D157E12FEA29238FE0380EDFC07
1700A2007E13015E913803F80E1407003E010F131E161C6C131C02385B3A0F80F078783A
07C3E07C703A01FF801FE03A007E000780292D76AB32>97 D<EB0FE0EA07FFA338001FC0
130F131FA25CA3133F91C8FCA35B137EA313FE5BA312015BEC1F80EC7FE03903F9E0F890
38F3C07C9038F7003E13FE48487F5BA2491480485AA25BA2121F5BA2153F123F90C7FCA2
157F481500127EA25D5D5AA24A5AA24A5AA2007C5C4A5A140F5D4A5A003C49C7FC003E13
7E001E5B6C485A380783E03803FF80C648C8FC214676C42D>I<EC0FE0EC7FF8903801F8
1E903807E00F90390F80078090381F0003017E14C049131F0001143F5B4848EB7F801207
485AED3E00484890C7FCA2485AA2127F90C9FCA35A5AA45AA5ED0180ED03C0ED0780A200
7CEC0F00007E141E003E147C15F06CEB03E0390F800F802607C07EC7FC3801FFF838007F
C0222D75AB2D>I<EE07F0ED03FFA39238000FE01607160FA217C0A2161FA21780A2163F
A21700A25EA2167EA216FEA25EEC1F80EC7FE1903801F071903907C039F890380F801D90
381F001F013E130F017E5C5B48481307A248485C120749130F120F5E485A151F123F495C
A2153F127F90C790C7FCA25DA200FE147EA29238FE0380160703FC1300A2007E13015E91
3803F80E1407003E010F131E161C6C131C02385B3A0F80F078783A07C3E07C703A01FF80
1FE03A007E0007802C4676C432>I<EC0FE0EC7FF8903801F83E903807C00F90391F8007
80EB3F00017E14C0491303485A48481307000715805B000F140F484814005D4848133E15
FCEC07F0007FEBFFC0D9FFFEC7FC14C090C9FC5A5AA55AA4ED0180ED03C0007CEC0780A2
007EEC0F00003E141E157C6C14F06CEB03E03907800F802603C07EC7FC3801FFF838003F
C0222D75AB2D>I<EE0F80EE3FE0EEF870923801F038923803E0F8923807E1FC16C3ED0F
C7A2EE87F892381F83F0EE81E0EE8000153F93C7FCA45D157EA415FE5DA349B512FEA390
260001F8C7FCA314035DA414075DA4140F5DA4141F5DA4143F92C8FCA55C147EA314FE5C
A413015CA4495AA35C1307121C007F5B12FF495AA291C9FC485AEAF81E485AEA7878EA1F
F0EA07C02E5A83C51E>I<15FCEC03FF91390F83838091393E01CFC091387C00EF4A13FF
4948137F010315804948133F495A131F4A1400133F91C75A5B167E13FE16FE1201495CA2
15011203495CA21503A2495CA21507A25EA2150F151F5E0001143F157F6C6C13FF913801
DF8090387C039F90383E0F3FEB0FFCD903F090C7FC90C7FC5DA2157EA215FEA25DA2001C
495A127F48495A14074A5A485C023FC8FC00F8137E387C01F8381FFFE0000390C9FC2A40
7BAB2D>I<14FE137FA3EB01FC13001301A25CA21303A25CA21307A25CA2130FA25CA213
1FA25C157F90393F83FFC091388F81F091381E00F802387F4948137C5C4A137EA2495A91
C7FCA25B484814FE5E5BA2000314015E5BA2000714035E5B1507000F5DA249130F5E001F
1678031F1370491480A2003F023F13F0EE00E090C7FC160148023E13C01603007E1680EE
070000FEEC1E0FED1F1E48EC0FF80038EC03E02D467AC432>I<143C147E14FE1301A3EB
00FC14701400AE137C48B4FC3803C780380703C0000F13E0120E121C13071238A21278EA
700F14C0131F00F0138012E0EA003F1400A25B137EA213FE5B12015BA212035B141E0007
131C13E0A2000F133CEBC038A21478EB807014F014E0EB81C0EA0783EBC7803803FE00EA
00F8174378C11E>I<14FE137FA3EB01FC13001301A25CA21303A25CA21307A25CA2130F
A25CA2131FA25C167E013F49B4FC92380783C09138000E07ED3C1F491370ED603F017E13
E0EC01C09026FE03801380913907000E00D9FC0E90C7FC5C00015B5C495AEBF9C03803FB
8001FFC9FCA214F03807F3FCEBF07F9038E01FC06E7E000F130781EBC003A2001F150FA2
0180140EA2003F151E161C010013E0A2485DA2007E1578167000FE01015B15F148903800
7F800038021FC7FC2A467AC42D>107 D<EB03F8EA01FFA3380007F013031307A214E0A2
130FA214C0A2131FA21480A2133FA21400A25BA2137EA213FEA25BA21201A25BA21203A2
5BA21207A25BA2120FA25BA2121FA25BA2123FA290C7FCA2387F01C01303007E1380A213
0700FE130012FCA25B130EEA7C1E131CEA3C3CEA3E786C5AEA07C0154678C419>I<D801
F0D90FE0EB07F0D803FCD97FF8EB3FFC28071E01F03EEBF81F3E0E1F03C01F01E00F8027
1E0F8700D983807F001C018E90390F870007003C019C148E003801B802DC8002F814FC26
781FF05C0070495CA24A5C00F0494948130FD8E03F6091C75B1200043F141F4960017E92
C7FCA24C143F01FE95C7FC49147E6104FE147E1201494A14FE610301EE07800003050114
00494A14F8A2030302035B0007F0F00E495C1A1E0307EDE01C000F193C494A153862030F
020113F0001FF0F1E0494A903800FF800007C7D80380023EC7FC492D78AB50>I<D801F0
EB0FE0D803FCEB7FF83A071E01F03E3A0E0F03C01F001ED987001380001C018E130F003C
139C003801B814C014F838781FF000705BA25C00F049131FD8E03F158091C7FC1200163F
491500137EA25E01FE147E5B16FE5E12014913015E170F00030203130E4914F0A2030713
1E0007EDE01C5B173CEEC038000F167849157017E0ED03C1001FEDE3C049903801FF0000
07C8127C302D78AB37>I<EC0FE0EC7FFC903801F83E903907E00F8090390F8007C0EB1F
00017EEB03E04914F0A248481301484814F81207485AA2485AA2485A1503127F90C7FCA2
15074815F05AA2150F16E05AED1FC0A21680153F16005D157E5D007C495A007E495A003E
5C4A5A6CEB1F80260F803EC7FC3807C0FC3801FFF038003F80252D75AB32>I<D903E013
7E903A07F801FF80903A0E3C0783E0903A1C1E0F01F0903A3C1F1C00F801385B01784913
7C01705BA24A48137E01E05BA292C7FC00015B13C0147EC7FC02FE14FEA25CA201011401
17FC5CA20103140317F85CA20107EC07F0A24AEB0FE0A2010F15C0EE1F80163F1700496C
137E5E4B5A9138B803F090393F9C07E091389E0F80DA07FEC7FCEC01F849C9FCA2137EA2
13FEA25BA21201A25BA21203A21207B512F0A25C2F3F7FAB32>I<D801F0EB3F803A03FC
01FFF03A071E03C0F83A0E0F0F007C001E90389E01FC001C139CECB803003813F0A2D91F
E013F80078EC00E00070491300A200F05BEAE03F91C8FC1200A25B137EA313FE5BA31201
5BA312035BA312075BA3120F5BA3121F5B0007C9FC262D78AB29>114
D<EC0FE0EC7FF8903801F01E903803C00F90390780078090380F0003011E14C015074913
1FA2017CEB3F801378137CED0E0092C7FC137E137F14F014FF6D13C06D13F06D7F6D7F13
00EC0FFE14011400157F81120E003F141E487EA2153E48C7123CA200FC5C12705D007849
5A6C495A6CEB0F80260F803EC7FC3803FFF838007FC0222D7AAB28>I<1470EB01F8A313
035CA313075CA3130F5CA3131F5CA2007FB512E0B6FC15C0D8003FC7FCA25B137EA313FE
5BA312015BA312035BA312075BA3120F5BA2EC0780001F140013805C140E003F131EEB00
1C143C14385C6C13F0495A6C485AEB8780D807FEC7FCEA01F81B3F78BD20>I<137C48B4
14072603C780EB1F80380703C0000F7F000E153F121C0107150012385E1278D8700F147E
5C011F14FE00F05B00E05DEA003FEC0001A2495C137E150313FE495CA215071201495CA2
030F13380003167849ECC070A3031F13F0EE80E0153F00011581037F13C06DEBEF830000
0101148090397C03C787903A3E0F07C70090391FFE01FE903903F000782D2D78AB34>I<
017C143848B414FC3A03C78001FE380703C0000F13E0120E001C14000107147E1238163E
1278D8700F141E5C131F00F049131C12E0EA003F91C7123C16385B137E167801FE14705B
A216F0000115E05B150116C0A24848EB0380A2ED0700A2150E12015D6D5B000014786D5B
90387C01E090383F0780D90FFFC7FCEB03F8272D78AB2D>I<017CEE038048B4020EEB0F
C02603C780013FEB1FE0380703C0000E7F5E001C037E130F01071607123804FE13030078
5DEA700F4A1501011F130100F001804914C012E0EA003FDA000314034C14805B137E0307
140701FE1700495CA2030F5C0001170E495CA260A24848495A60A2601201033F5C7F4B6C
485A000002F713036D9039E7E0078090267E01C349C7FC903A1F0781F81E903A0FFF007F
F8D901FCEB0FE03B2D78AB41>I<137C48B414072603C780EB1F80380703C0000F7F000E
153F001C1600130712385E0078157EEA700F5C011F14FE00F0495B12E0EA003FEC00015E
5B137E150301FE5C5BA2150700015D5BA2150F00035D5BA2151F5EA2153F12014BC7FC6D
5B00005BEB7C0390383E0F7EEB1FFEEB03F090C712FE5DA214015D121F397F8003F0A24A
5A4848485A5D48131F00F049C8FC0070137E007813F8383801F0381E07C06CB4C9FCEA01
FC294078AB2F>121 D E /Fb 1 4 df<EB0380497EA7397803803C00FC147E00FE14FE39
7F8383FC393FC387F8390FE38FE03903FBBF803900FFFE00EB3FF8EB0FE0A2EB3FF8EBFF
FE3903FBBF80390FE38FE0393FC387F8397F8383FC39FE0380FE00FC147E0078143C3900
07C000A76D5A1F247BA62A>3 D E /Fc 1 106 df<1338137CA2137813701300A7EA0780
EA1FC0EA38E01230EA60F0EAC1E0A3EA03C0A3EA0780A2EA0F0013041306EA1E0CA21318
121CEA1E70EA0FE0EA07800F237DA116>105 D E /Fd 5 112 df<13FF000313C0380781
E0380F00F0001E137848133CA248131EA400F8131FAD0078131EA2007C133E003C133CA2
6C13786C13F0380781E03803FFC0C6130018227DA01E>48 D<EA01FC3807FF80381C0FC0
383003E0386001F0EB00F812F86C13FCA2147C1278003013FCC7FC14F8A2EB01F0EB03E0
14C0EB0780EB0F00131E13385B5B3801C00CEA0380380600185A5A383FFFF85AB512F0A2
16217CA01E>50 D<14E01301A213031307A2130D131D13391331136113E113C1EA018112
03EA07011206120C121C12181230127012E0B6FCA2380001E0A6EB03F0EB3FFFA218227D
A11E>52 D<3A0F07F007F03AFF1FFC1FFC9039703E703E3A1FC01EC01E6C486C487EA201
001300AE3BFFF0FFF0FFF0A22C167D9532>109 D<137E3803FFC0380781E0380F00F000
1E137848133CA248131EA200F8131FA70078131E007C133E003C133C003E137C6C13F838
0F81F03803FFC0C6130018187D961E>111 D E /Fe 3 90 df<BB12FC86A3D87FC0C900
1F7FF0007F6C6C17076C6C050113806C6CEF007F1A1F6C6CF00FC06C6C18076C6C1803F2
01E06C6D17006D6C1860013F19706E18306D7E6D6C18181B006D7E6D7E6D7EA26D7F6E7E
6E7EA26E7E6E7E6E7EA26E7E6E7E80826F7E6F7EA26F7E6F7E6F5A5EA24B5A5E4BCBFC15
3E157E5D5D4A5A4A5A14075D4A5A4ACCFC143E147E147C5C4948181801031930495A4A18
704948186049CC12E0491801017EF003C0017C180749180F4848F01F800003197F49EF01
FF4848050713004848173F48CA000FB5FC48BA5AA25ABB5AA24D537B7F58>80
D<BB12E0A4000F90C9381FFE00000318F86C606C60B3B3B3AF486D4B7E486D4B7E000F01
F0913801FFFEB6021FEBFFE0A443537B7F4E>I<BE12FEA5000302E0C9000F1480C66CF2
FC00011F1AF06D626D62A26D62B3B3B3B3B3A4496D4C7FA2496D4C7F496D4C7F017F01FF
4BB512FC0003B600E0020FECFF80B8D88003B712FEA55F747B7F6A>89
D E /Ff 2 49 df<B812C0A32A037A9137>0 D<137813FE1201A3120313FCA3EA07F8A3
13F0A2EA0FE0A313C0121F1380A3EA3F00A3123E127E127CA35AA35A0F227EA413>48
D E /Fg 8 117 df<13F8121FA21201A25BA21203A25BA21207A25BA2120FEBC7E0EB9F
F8EBB83C381FF01EEBE01F13C09038800F80EA3F00A2123EA2007E131FA2127CA2143F00
FC14005AA2147EA2147C14FC5C387801F01303495A383C0F806C48C7FCEA0FFCEA03F019
2F7DAD1E>98 D<151FEC03FFA2EC003FA2153EA2157EA2157CA215FCA215F8A21401EB07
E190381FF9F0EB7C1DEBF80FEA01F03903E007E0EA07C0120FEA1F8015C0EA3F00140F5A
007E1480A2141F12FE481400A2EC3F021506143E5AEC7E0E007CEBFE0C14FC0101131C39
3E07BE18391F0E1E38390FFC0FF03903F003C0202F7DAD24>100
D<1307EB0F80EB1FC0A2EB0F80EB070090C7FCA9EA01E0EA07F8EA0E3CEA1C3E12381230
1270EA607EEAE07C12C013FC485A120012015B12035BA21207EBC04014C0120F13801381
381F01801303EB0700EA0F06131EEA07F8EA01F0122E7EAC18>105
D<131FEA03FFA2EA003FA2133EA2137EA2137CA213FCA25BA2120115F89038F003FCEC0F
0E0003EB1C1EEC387EEBE07014E03807E1C09038E3803849C7FC13CEEA0FDC13F8A2EBFF
80381F9FE0EB83F0EB01F81300481404150C123EA2007E141C1518007CEBF038ECF83000
FC1470EC78E048EB3FC00070EB0F801F2F7DAD25>107 D<137CEA0FFCA21200A213F8A2
1201A213F0A21203A213E0A21207A213C0A2120FA21380A2121FA21300A25AA2123EA212
7EA2127CA2EAFC08131812F8A21338133012F01370EAF860EA78E0EA3FC0EA0F000E2F7D
AD15>I<27078007F0137E3C1FE01FFC03FF803C18F0781F0783E03B3878E00F1E012630
79C001B87F26707F8013B00060010013F001FE14E000E015C0485A4914800081021F1303
00015F491400A200034A13076049133E170F0007027EEC8080188149017C131F1801000F
02FCEB3F03053E130049495C180E001F0101EC1E0C183C010049EB0FF0000E6D48EB03E0
391F7E9D3E>I<3907C007E0391FE03FF83918F8783E393879E01E39307B801F38707F00
126013FEEAE0FC12C05B00815C0001143E5BA20003147E157C5B15FC0007ECF8081618EB
C00115F0000F1538913803E0300180147016E0001F010113C015E390C7EAFF00000E143E
251F7E9D2B>I<130E131FA25BA2133EA2137EA2137CA213FCA2B512F8A23801F800A25B
A21203A25BA21207A25BA2120FA25BA2001F1310143013001470146014E0381E01C0EB03
80381F0700EA0F0EEA07FCEA01F0152B7EA919>116 D E /Fh 15
107 df<007FB912E0BA12F0A26C18E03C04789A4D>0 D<147014F8A81470007815F0007C
1401B4EC07F8D87F80EB0FF0D83FE0EB3FE0D80FF0EB7F80D803F8EBFE003900FE73F890
383F77E090380FFF80D903FEC7FCEB00F8EB03FE90380FFF8090383F77E09038FE73F839
03F870FED80FF0EB7F80D83FE0EB3FE0D87F80EB0FF0D8FF00EB07F8007CEC01F0007814
00C7140014F8A81470252B7AAD32>3 D<19E0F003F0180FF03FE0F0FF80943803FE00EF
0FF8EF3FE0EFFF80DC03FEC7FCEE0FF8EE3FE0EEFF80DB03FEC8FCED1FF8ED7FE0913801
FF80DA07FEC9FCEC1FF0EC7FC04948CAFCEB07FCEB1FF0EB7FC04848CBFCEA07FCEA1FF0
EA7FC048CCFCA2EA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FCEB01FF9038007F
C0EC1FF0EC07FC913801FF809138007FE0ED1FF8ED07FE923800FF80EE3FE0EE0FF8EE03
FE933800FF80EF3FE0EF0FF8EF03FE943800FF80F03FE0F00FF01803F000E01900B0007F
B912E0BA12F0A26C18E03C4E78BE4D>20 D<127012FCB4FCEA7FC0EA1FF0EA07FCEA01FF
38007FC0EB1FF0EB07FCEB01FF9038007FC0EC1FF0EC07FC913801FF809138007FE0ED1F
F8ED07FE923800FF80EE3FE0EE0FF8EE03FE933800FF80EF3FE0EF0FF8EF03FE943800FF
80F03FE0F00FF0A2F03FE0F0FF80943803FE00EF0FF8EF3FE0EFFF80DC03FEC7FCEE0FF8
EE3FE0EEFF80DB03FEC8FCED1FF8ED7FE0913801FF80DA07FEC9FCEC1FF0EC7FC04948CA
FCEB07FCEB1FF0EB7FC04848CBFCEA07FCEA1FF0EA7FC048CCFC12FC1270CDFCB0007FB9
12E0BA12F0A26C18E03C4E78BE4D>I<D907F81780D93FFFEE01C090B512C04814F04880
4814FE270FF807FF1503261FC00001C0158048C7D83FE01407003EDA0FF8140F486E6CEC
1F000078DA01FF5C00706E01C013FE00F092393FF807FC486FB55A04075C705C04005C05
3F90C7FC0040EE07F8CEFCA4D907F81780D93FFFEE01C090B512C04814F048804814FE27
0FF807FF1503261FC00001C0158048C7D83FE01407003EDA0FF8140F486E6CEC1F000078
DA01FF5C00706E01C013FE00F092393FF807FC486FB55A04075C705C04005C053F90C7FC
0040EE07F8422C7BAF4D>25 D<00604A7E00F8EC03E000FE15F8D87F80EB01FED83FE06D
6C7ED80FF8EC3FE0D803FCEC0FF0C6B4EC03FCD93FC0EB00FFD90FF0EC3FC0D907FCEC1F
F0D901FFEC07FC6D6C6CEB01FEDA1FE09038007F80DA07F8EC1FE0DA01FEEC07F86E6C6C
EB03FEDB3FE0903800FF80DB0FF0EC3FC0DB03FCEC0FF0DB00FFEC03FCDC3FC0EB00FFDC
1FF0EC7FC0DC07FCEC1FF0DC01FEEC07F89326007F80EB01FEDD1FE09038007F80DD07F8
EC1FE0DD03FEEC0FF8942600FF80EB03FEDE3FC0EB00FFDE0FE0EC3F80A2DE3FC0ECFF00
DEFF80EB03FEDD03FEC7EA0FF8DD07F8EC1FE0DD1FE0EC7F80DD7F80D901FEC7FCDC01FE
C7EA07F8DC07FCEC1FF0DC1FF0EC7FC0DC3FC04AC8FC04FFC7EA03FCDB03FCEC0FF0DB0F
F0EC3FC0DB3FE0ECFF80DBFF80D903FEC9FC4A48C7EA07F8DA07F8EC1FE0DA1FE0EC7F80
DA7F80D901FECAFC4948C7EA07FCD907FCEC1FF0D90FF0EC3FC0D93FC002FFCBFC01FFC7
EA03FCD803FCEC0FF0D80FF8EC3FE0D83FE0ECFF80D87F804948CCFC00FEC7EA03F800F8
15E00060EC018059407BB864>29 D<DA078016F0A3020F8392CA1278A24A177C021E173C
A2023E173E023C171E027C171F4A717EA24948717E4948717E0107854948717E4948717E
49CC127E017E8549737ED803F8F10FE0D80FE0F103F8003FBC12FEBE1280A2003FF3FE00
D80FE0CCEA03F8D803F8F10FE0C66CF11F80017E4FC7FC6D197E6D6C606D6C4D5A6D6C4D
5A0103616D6C4D5A6D6C4D5AA2027C4DC8FC023C171E023E173E021E173CA2021F177C6E
1778A26F16F802075FA359347BB264>36 D<166016F015015E15035E15074B5A93CDFC5D
153E5D5D14014A5A4A5A4ABBFC4A1A805C4A1A00D901F8CEFC495AEB0FE0EB3F8001FFCF
FCEA03FCEA1FF0EAFFC0A2EA1FF0EA03FCC6B4FCEB3F80EB0FE0EB03F06D7ED9007FBBFC
6E1A80806E1A00DA07E0CDFC6E7E6E7E1400157C818181826F7E15038215018215001660
59387BB464>40 D<031CED01C0033E4B7E033C1501037C820378150003F8824B16780201
177C4B163C0203173E4A48824B82020F844ACA6C7E023E717E027E8491BA7E4985498549
85D90FC0CBEA1F804948727E017FCCEA07F001FCF101F8D803F8F100FED80FE0F23F80D8
3FC0F21FE0B4CEEA07F8A2D83FC0F21FE0D80FE0F23F80D803F8F2FE00C66CF101F8017F
F107F0D91F80F00FC06D6C4E5A6DBBC7FC6D616D616D61027ECAEA03F0023E606E4D5A6E
6C4C5A020795C8FC6F5E6E6C163E0201173C6F167C020017786F16F803785E037C150103
3C5E033E1503031C6F5A5D387DB464>44 D<92B6FC02071580143F91B7120001030180C8
FCD907FCC9FCEB1FE0EB3F80017ECAFC5B485A485A485A5B485A121F90CBFC123EA2123C
127CA2127812F8A25AA2B9FC1880A2180000F0CBFCA27EA21278127CA2123C123EA27E7F
120F6C7E7F6C7E6C7E6C7E137E6D7EEB1FE0EB07FC6DB47E010090B6FC023F1580140702
001500313A78B542>50 D<1706170F171FA2173EA2177CA217F8A2EE01F0A2EE03E0A2EE
07C0A2EE0F80A2EE1F00A2163EA25EA25EA24B5AA24B5AA24B5AA24B5AA24BC7FCA2153E
A25DA25DA24A5AA24A5AA24A5AA24A5AA24AC8FCA2143EA25CA25CA2495AA2495AA2495A
A2495AA249C9FCA2133EA25BA25BA2485AA2485AA2485AA2485AA248CAFCA2123EA25AA2
5AA25A1260305C72C600>54 D<1538157CA215FEA24A7EA215EF02037FA2913807C7C0A2
91380F83E0A291381F01F0A2EC1E00023E7FA24A137CA24A7FA249487FA24A7F010381A2
49486D7EA249486D7EA249C76C7EA2011E1400013E81A249157CA24981A2484881A24848
ED0F80A2491507000717C0A24848ED03E0A248C9EA01F0A2003EEE00F8A2003C1778007C
177CA248173EA248171E0060170C373D7BBA42>94 D<ED0FE015FF913803FC00EC0FE0EC
3FC04A5A4AC7FC5C495AA2495AB3AD495AA2495A131F495A495A01FEC8FCEA07F8EAFFE0
A2EA07F8EA00FEEB7F806D7E6D7E130F6D7EA26D7EB3AD6D7EA26D7E806E7E6E7EEC0FE0
EC03FC913800FFE0150F236479CA32>102 D<12FEEAFFE0EA07F8EA00FEEB7F806D7E6D
7E130F6D7EA26D7EB3AD6D7EA26D7E806E7E6E7EEC0FE0EC03FC913800FFE0A2913803FC
00EC0FE0EC3FC04A5A4AC7FC5C495AA2495AB3AD495AA2495A131F495A495A01FEC8FCEA
07F8EAFFE048C9FC236479CA32>I<126012F0B3B3B3B3B3A81260046474CA1C>106
D E /Fi 33 122 df<EEFFFC031FEBFF804AB612E0020781021F9038C00FF8913A7FFE00
03FCDAFFF0EB00FE4949EB03FF4901805B4990C7487F49485CA2495A4D7F013F6F5B5CA3
7190C7FC715AEF01F894C9FCA90403B512C0BAFCA526003FFCC7120783B3B3A6003FB5D8
FC03B612C0A542547DD34B>12 D<EA07F0487E487E487E487EB51280A76C13006C5A6C5A
6C5A6C5A1111769025>46 D<157815FC14031407141F14FF130F0007B5FCB6FCA2147F13
F0EAF800C7FCB3B3B3A6007FB712FEA52F4E76CD43>49 D<EC3FFE0103B512E0010F14FC
013F14FF90B712C048D9C07F7F2703FE000F13F8D807F801037FD80FE06D7F48486D7F48
488001F01680486C6E13C07F486C6E13E07FA27013F0A56C5AA26C5AEA0FF0EA03C0C914
E05EA218C05E1880A24C13005F4C5A4B5B5F4B5B5F4B5B4B90C7FC4B5A5E4B5AED7FE04B
5A4A5B4A48C8FC4A5A5D4A48EB01F04A5AEC3F804AC7FC02FEEC03E0495A495A495A495A
D91F80140749C8FC013E150F017FB7FC90B812C05A5A5A5A5A5A5AB9FC1880A4344E79CD
43>I<91380FFFC091B512FC0107ECFF80011F15E090263FF8077F9026FF800113FC4848
C76C7ED803F86E7E491680D807FC8048B416C080486D15E0A4805CA36C17C06C5B6C90C7
5AD801FC1680C9FC4C13005FA24C5A4B5B4B5B4B13C04B5BDBFFFEC7FC91B512F816E016
FCEEFF80DA000713E0030113F89238007FFE707E7013807013C018E07013F0A218F8A270
13FCA218FEA2EA03E0EA0FF8487E487E487EB57EA318FCA25E18F891C7FC6C17F0495C6C
4816E001F04A13C06C484A1380D80FF84A13006CB44A5A6CD9F0075BC690B612F06D5D01
1F1580010302FCC7FCD9001F1380374F7ACD43>I<D80380150ED807E0157E01FEEC03FE
D9FFF0137F91B65A5F5F5F5F5F94C7FC5E5E16F016C093C8FC15F801E190C9FC01E0CAFC
ABEC0FFF027F13F001E3B512FE01E76E7E9026FFF8077FDAC0017F49C713F8496E7E4914
3F4981496E7E6C481680C9FC18C08218E0A418F0A3EA0FE0487E487E487E487EA418E0A3
5B6C484A13C05B491680003EC85A003F17006C6C4A5A6D5D6C6C4A5AD807F8495BD803FE
01075B2701FFC03F5B6C90B65A013F4AC7FC6D14F8010314C09026007FF8C8FC344F79CD
43>53 D<171F4D7E4D7EA24D7EA34C7FA24C7FA34C7FA34C7FA24C7FA34C8083047F8016
7E8304FE804C7E03018116F8830303814C7E03078116E083030F814C7E031F8116808303
3F8293C77E4B82157E8403FE824B800201835D840203834B800207835D844AB87EA24A83
A3DA3F80C88092C97E4A84A2027E8202FE844A82010185A24A820103854A82010785A24A
82010F855C011F717FEBFFFCB600F8020FB712E0A55B547BD366>65
D<BA12C019FEF1FFC01AF01AFCD8000701F0C7000313FFDE007F7F737F070F7F737F8785
87858785A287A84F5BA263616361634F5B4F5B077F90C7FC4E485A060713F892B812E097
C8FC861AF003F0C7000313FE9539003FFF80070F13E0737F07017F87737F747E1C807413
C0A27413E0A31CF0A386A362A31CE0A2621CC0A250138097B5FC1C004F5B19074F5B073F
13F04EB55ABC128098C7FC1AF81AC007F8C8FC54527CD160>I<932601FFFCEC01C0047F
D9FFC013030307B600F81307033F03FE131F92B8EA803F0203DAE003EBC07F020F01FCC7
383FF0FF023F01E0EC0FF94A01800203B5FC494848C9FC4901F882494982494982494982
4949824990CA7E494883A2484983485B1B7F485B481A3FA24849181FA3485B1B0FA25AA2
98C7FC5CA2B5FCAE7EA280A2F307C07EA36C7FA21B0F6C6D1980A26C1A1F6C7F1C006C6D
606C6D187EA26D6C606D6D4C5A6D6D16036D6D4C5A6D6D4C5A6D01FC4C5A6D6DEE7F806D
6C6C6C4BC7FC6E01E0EC07FE020F01FEEC1FF80203903AFFE001FFF0020091B612C0033F
93C8FC030715FCDB007F14E0040101FCC9FC525479D261>I<BC1280A5D8000701F8C700
0114C0F0001F19071901851A7F1A3F1A1FA2F20FE0A21A07A31A03A318F81BF01A01A497
C7FC1701A317031707170F177F92B6FCA59238F8007F170F170717031701A317001B3EA3
1B7CA395C8FCA21BFCA21BF8A21A01A31A031BF01A071A0FA21A1F1A3FF27FE0F101FF19
07191F0603B5FCBCFCA21BC0A34F517CD058>69 D<B812C0A5D8000701F8C7FCB3B3B3B2
B812C0A52A527CD132>73 D<93380FFFC00303B6FC031F15E092B712FC0203D9FC0013FF
020F01C0010F13C0023F90C7000313F0DA7FFC02007F494848ED7FFE4901E0ED1FFF4949
6F7F49496F7F4990C96C7F49854948707F4948707FA24849717E48864A83481B804A8348
1BC0A2481BE04A83A2481BF0A348497113F8A5B51AFCAF6C1BF86E5FA46C1BF0A26E5F6C
1BE0A36C6D4D13C0A26C6D4D1380A26C1B006C6D4D5A6E5E6C626D6C4C5B6D6D4B5B6D6D
4B5B6D6D4B5B6D6D4B5B6D6D4B90C7FC6D6D4B5A6D01FF02035B023F01E0011F13F0020F
01FC90B512C0020390B7C8FC020016FC031F15E0030392C9FCDB001F13E0565479D265>
79 D<003FBC1280A59126C0003F9038C0007F49C71607D87FF8060113C001E08449197F
49193F90C8171FA2007E1A0FA3007C1A07A500FC1BE0481A03A6C994C7FCB3B3AC91B912
F0A553517BD05E>84 D<EC7FFF0107B512F0013F14FE90B77E48D9E00F7F2703FE000113
F0486C6D7F6EEB3FFC48826E131F83707FA36C496D7FA26C90C7FC6C5AC9FCA6037FB5FC
020FB6FC91B7FC01071487013FEBF0074913803901FFFC004813F0485B485B485B4890C7
FC5A5BA2485AA45EA26D5C007F151D163D6C6C02797F6C6D01F113F86C9026C003E1EBFF
E06C9026F81FC014F06C90B5487EC6ED001F011F01FC010713E0010101E090C8FC3C387C
B641>97 D<EB3FF0B5FCA51203C6FCB3A4923801FFE0030F13FE033FEBFFC092B612F002
F301017F913AF7F8003FFEDAFFE0EB0FFF03806D7F92C76C7F4A6E7F4A824A6E7FA2727E
A285A28584A31A80AC1A00A44E5AA36118FF616E4A5BA26E4A5B6E4A5B6F495BDACFC049
90C7FCDA87F0EB7FFC913A03FE03FFF849C6B612E0496D148049011F01FCC8FC90C70003
13C041547BD24B>I<913801FFF8021FEBFF8091B612F0010315FC010F9038C00FFE903A
1FFE0001FFD97FFC491380D9FFF05B4817C048495B5C5A485BA2486F138091C7FC486F13
00705A4892C8FC5BA312FFAD127F7FA27EA2EF03E06C7F17076C6D15C07E6E140F6CEE1F
806C6DEC3F006C6D147ED97FFE5C6D6CEB03F8010F9038E01FF0010390B55A0100158002
3F49C7FC020113E033387CB63C>I<4DB47E0407B5FCA5EE001F1707B3A4913801FFE002
1F13FC91B6FC010315C7010F9038E03FE74990380007F7D97FFC0101B5FC49487F484914
3F484980485B83485B5A91C8FC5AA3485AA412FFAC127FA36C7EA37EA26C7F5F6C6D5C7E
6C6D5C6C6D49B5FC6D6C4914E0D93FFED90FEFEBFF80903A0FFFC07FCF6D90B5128F0101
ECFE0FD9003F13F8020301C049C7FC41547CD24B>I<913803FFC0023F13FC49B6FC0107
15C04901817F903A3FFC007FF849486D7E49486D7E4849130F48496D7E48178048497F18
C0488191C7FC4817E0A248815B18F0A212FFA490B8FCA318E049CAFCA6127FA27F7EA218
E06CEE01F06E14037E6C6DEC07E0A26C6DEC0FC06C6D141F6C6DEC3F806D6CECFF00D91F
FEEB03FE903A0FFFC03FF8010390B55A010015C0021F49C7FC020113F034387CB63D>I<
ED3FFC0203B5FC020F14C0023F14E09139FFF81FF0499038C03FF849EB807F49903800FF
FC495A495AA2495AA2EE7FF8495AEE3FF0EE0FC093C7FCAEB712E0A526007FF8C8FCB3B3
A7007FB512FEA52E547CD329>I<DA3FFF14FF0103B5D8F00713C0010FDAFC1F13E0013F
ECFF7F90267FFC0F9038FF9FF09026FFE001EBF83F48496C13E0484990387FF01F4890C7
D83FF813E0489338FC0FC0F0078048486E6CC7FCA2003F82A9001F5EA26C6C4A5AA26C5E
6C6D495A6C6D495A6C6D485BDAFC0F5B4890B6C8FCD803EF14FC01C314F02607C03F90C9
FC91CBFCA2120FA37FA213F813FE90B7FC6C16F817FF18C06C836C836C836D828448B9FC
12074848C700031480D81FF8EC003F4848150748486F13C083485A83A56D5D007F18806D
5D003F18006C6C4B5AD80FFEED1FFC6C6C6CEC7FF86C01E049485A6C01FE011F5B6C6CB7
1280010F03FCC7FC010115E0D9000F01FCC8FC3C4F7CB543>I<EB3FF0B5FCA51203C6FC
B3A4EE1FFC93B512C0030314F0030F8092391FE07FFC92393F001FFE037C8003F07FDAF1
E081ECF3C0DAF7807F8502FFC7FC5CA25CA45CB3ACB6D8F807B612C0A542537BD24B>I<
137F497E000313E0487FA2487FA76C5BA26C5BC613806DC7FC90C8FCADEB3FF0B5FCA512
017EB3B3A6B612E0A51B547BD325>I<EB3FF0B5FCA512017EB3B3B3B1B612F0A51C537B
D225>108 D<D93FF0D91FFCEDFFE0B591B500C0010713FE030302F0011F6D7E030F6E01
7F8092271FE07FFCD9FF037F922A3F001FFE01F8007F0003027C9126FF03E080C602F06D
D90780137FDAF1E0038FC77FDAF3C0159EDAF7806D01BC143F07FC8102FFC75C4A5EA24A
5EA44A5EB3ACB6D8F807B6D8C03FB512FEA567367BB570>I<D93FF0EB1FFCB591B512C0
030314F0030F8092391FE07FFC92393F001FFE0003027C80C602F07FDAF1E081ECF3C0DA
F7807F8502FFC7FC5CA25CA45CB3ACB6D8F807B612C0A542367BB54B>I<913801FFE002
1F13FE91B612C0010315F0010F9038807FFC903A1FFC000FFED97FF86D6C7E49486D7F48
496D7F48496D7F4A147F48834890C86C7EA24883A248486F7EA3007F1880A400FF18C0AC
007F1880A3003F18006D5DA26C5FA26C5F6E147F6C5F6C6D4A5A6C6D495B6C6D495B6D6C
495BD93FFE011F90C7FC903A0FFF807FFC6D90B55A010015C0023F91C8FC020113E03A38
7CB643>I<903A3FF001FFE0B5010F13FE033FEBFFC092B612F002F301017F913AF7F800
7FFE0003D9FFE0EB1FFFC602806D7F92C76C7F4A824A6E7F4A6E7FA2717FA285187F85A4
721380AC1A0060A36118FFA2615F616E4A5BA26E4A5B6E4A5B6F495B6F4990C7FC03F0EB
FFFC9126FBFE075B02F8B612E06F1480031F01FCC8FC030313C092CBFCB1B612F8A5414D
7BB54B>I<90397FE003FEB590380FFF80033F13E04B13F09238FE1FF89139E1F83FFC00
03D9E3E013FEC6ECC07FECE78014EF150014EE02FEEB3FFC5CEE1FF8EE0FF04A90C7FCA5
5CB3AAB612FCA52F367CB537>114 D<903903FFF00F013FEBFE1F90B7FC120348EB003F
D80FF81307D81FE0130148487F4980127F90C87EA24881A27FA27F01F091C7FC13FCEBFF
C06C13FF15F86C14FF16C06C15F06C816C816C81C681013F1580010F15C01300020714E0
EC003F030713F015010078EC007F00F8153F161F7E160FA27E17E07E6D141F17C07F6DEC
3F8001F8EC7F0001FEEB01FE9039FFC00FFC6DB55AD8FC1F14E0D8F807148048C601F8C7
FC2C387CB635>I<143EA6147EA414FEA21301A313031307A2130F131F133F13FF5A000F
90B6FCB8FCA426003FFEC8FCB3A9EE07C0AB011FEC0F8080A26DEC1F0015806DEBC03E6D
EBF0FC6DEBFFF86D6C5B021F5B020313802A4D7ECB34>I<D93FF8913801FFC0B50207B5
FCA50003ED001FC61607B3AE5FA35FA2017F5D173B177B6D6C14F3DC01E313F06D6CD907
C3EBFFC0903A0FFFC03F836D90B51203010114FE6D6C13F8020701E091C7FC42377BB54B
>I<007FB500F090387FFFFEA5C66C48C7000F90C7FC6D6CEC07F86D6D5C6D6D495A6D4B
5A6F495A6D6D91C8FC6D6D137E6D6D5B91387FFE014C5A6E6C485A6EEB8FE06EEBCFC06E
EBFF806E91C9FCA26E5B6E5B6F7E6F7EA26F7F834B7F4B7F92B5FCDA01FD7F03F87F4A48
6C7E4A486C7E020F7FDA1FC0804A486C7F4A486C7F02FE6D7F4A6D7F495A49486D7F0107
6F7E49486E7E49486E7FEBFFF0B500FE49B612C0A542357EB447>120
D<B600F00107B5FCA5C601F8C8EA7FE06EED3F00A26D6C153E187E013F167C6E15FC6D5E
6F13016D5E6F13036D5E8117076D6D5C170F6D6D5C171F6D93C7FC6F5B027F143E6F137E
023F147C6F13FCA26E6D5A16816EEBC1F016C36E5C16E76E5C16FF6E5CA26E91C8FCA36F
5AA26F5AA26F5AA26F5AA26F5AA35E150F5E151F93C9FC5DD81FC0133E486C137E486C13
7C486C13FC5D14015D14034A5A6C48485A49485A263FC07FCAFCEB81FE6CB45A6C13F000
035BC690CBFC404D7DB447>I E /Fj 7 62 df<EC0380B3A4B812FCA3C7D80380C7FCB3
A42E2F7CA737>43 D<EB3FC0EBFFF03803E07C48487E48487E497E001EEB0780A2003E14
C0A248EB03E0A500FC14F0B0007C14E0A3007E1307003E14C0A36CEB0F806C14006D5A38
07C03E3803F0FC3800FFF0EB3FC01C2D7DAB23>48 D<130C133C137CEA03FC12FFEAFC7C
1200B3B113FE387FFFFEA2172C7AAB23>I<EB7F803801FFF0380780FC380E003F48EB1F
8048EB0FC05A0060EB07E012F000FC14F07E1403A3007C1307C7FCA215E0140F15C0141F
1580EC3F00147E147C5C495A495A495A495A011EC7FC5B5B4913305B485A4848136048C7
FC000E14E0001FB5FC5A4814C0B6FCA21C2C7DAB23>I<EB3FC03801FFF03807C0FC380E
007E487FEC1F80003F14C0A2EB800F1300A2000C131FC7FC1580A2EC3F00143E5C5CEB03
F0EBFFC014F0EB00FC143FEC1F8015C0140F15E0A2EC07F0A21238127C12FEA3EC0FE012
F8006014C00070131F6C1480001EEB3F00380780FC3801FFF038007FC01C2D7DAB23>I<
EB3F80EBFFF03803E0783807C03E48487E48487E003E14801407007E14C0127C00FC14E0
1403A315F0A5007C1307127EA2003E130F7E6C131F3807803B3803E0F33800FFC390383F
03E013001407A215C0A2140F001E1480003F14005C143E143C003E5B001C5B380E03E038
07FF80D801FEC7FC1C2D7DAB23>57 D<B812FCA3CBFCADB812FCA32E137C9937>61
D E /Fk 28 89 df<14075C5C147F5C1307133F000FB5FCB6FC13F913C1EAF0011200B3
B3B3A7497F010F13E0B712FEA4274F75CE3B>49 D<EC7FE0903803FFFE010F6D7E013F14
E0D9FF0013F8D801F8EB1FFCD803E06D7E4848EB03FF48486D138090C813C0001E16E000
1C157F003CED3FF012380078ED1FF81270A2B4ED0FFC13C07FA66C5A6C5A000EC8FCC9EA
1FF8A317F0163FA2EE7FE017C016FF17804B1300A24B5A4B5A5E4B5A4B5A4B5A5E4BC7FC
15FE4A5A4A5A4A5A4A5A5D4A5A4AC8FC147E5C4948141CEB03E0495A4948143891C8FC13
1E5B5B491578485A48481570484815F048B7FCA25A5A5AB812E0A42E4F7ACE3B>I<EC3F
F849B57E010F14E090391FC01FF890397E0003FC01F86DB4FCD801E06D13804848EC7FC0
484815E048C8123F01C015F013F0486CEC1FF87FA56C5AA2EA03E0C9EA3FF0A317E0167F
17C016FF17804B13005E4B5A4B5A4B5AED3FC0DA07FFC7FC903803FFFC5DEDFF8090C7EA
1FE0ED07F8ED01FE6F7EEE7F8017C0EE3FE0EE1FF017F8A2EE0FFC17FEA2160717FFA312
0FEA3FC0487E487EA417FE160F5B6C4815FC90C8FC0078ED1FF87E003EED3FF06CED7FE0
6C7E6C6CECFFC0D803F0491380D801FC903807FE003A00FFC01FFC013FB512F0010F14C0
010391C7FC9038003FF830517BCE3B>I<160F5EA25E5EA25E5DA25D5DA25D151E151C15
3C5D157015F04A5A5D14035D4A5A5C140E5C143C14385C14F05C495A13035C130749C7FC
130E131E5B133813785B5B1201485A5B120748C8FC120E121E5A123812785AB912F0A4C8
000190C7FCAF4B7F4B7F020FB612E0A434507DCF3B>I<000316C001C0140301F8141F90
3AFFC003FF8091B612005E5E5E16E016804BC7FC019F13F8018113800180C9FCB0EC0FF0
ECFFFE01836D7E903987F01FE090399F0007F801BE6D7E01F86D7E496D7E49EC7F805BEE
3FC04915E0C9121F17F0A317F8160FA317FCA5120EEA3F80487E12FF7FA217F85B161F5B
48C813F012700078ED3FE0A26C16C0167F6CEDFF80001F16006C6C495A6C6C13036C6CEB
07F8D801F8EB1FF06CB4EB7FE06DB51280011F49C7FC010713F8010013C02E517ACE3B>
I<ED3FE0913803FFFC020F13FF91393FE01F8091397F0007C0D901FCEB01E04948EB00F0
495A494813034948EB0FF84948131F49C7FC13FEA2485A120349EC0FF00007ED03C093C7
FC485AA2121F5BA2123FA3127F5BEC0FFF023F13C091B512F03AFFC1F003FC9039C3C000
FED9C780137F91C7EA3F8001CE15C001DCEC1FE0160F01F815F0EE07F85B17FCA24915FE
1603A34915FFA4127FA66C7EA317FE121FA216076C6C15FCA2000716F86D140F000316F0
6DEC1FE012016C6CEC3FC06DEC7F806D6CEBFF006D6C485A90390FF80FFC6DB512F00101
14C06D6C90C7FCEC0FF830517BCE3B>I<EE03804C7EA34C7EA34C7EA34C7EA34C7EA24C
7E16E7A203017F16C3A20303801681A2DB07017F82A2030E80177FA24B80173FA24B6D7E
A20378800370130FA203F0804B1307A20201814B7FA24A488183A24AC78083A2020E8218
7FA24A6F7E021FB7FC4A82A30278C8EA1FFC0270150FA202F0824A1507A249488284A249
488384A249CA7FA24984010E177FA2011E84193F133E017F8448486C4C7E000F01E04B48
7EB500FE037FEBFFFEA44F557CD458>65 D<B812FEEFFFC018F818FE26007FF8C73807FF
806D4802017F011F6F6C7E727E727E727E727EA2727EA2721380A21AC0A384A360A21A80
A2601A00A24E5A180F614E5A4E5AF0FFE04D1380050790C7FCEF7FFC91B712E08418FE02
F0C73801FF809438007FE0F01FF8727EF003FE857213807213C0F17FE0A2F13FF0A21AF8
191FA21AFCA81AF8193FA21AF0197FF1FFE0A24E13C04E1380604E1300F03FFC013FEEFF
F8496C02075BBA12C096C7FC18FC18C046527AD153>I<DC1FFC14034BB500C01307030F
02F0130F037F14FC912801FFF800FF131F02070180EB1FC04A48C73807E03FDA3FF89138
01F07FDA7FE0EC00F8902601FF80ED3CFF4990C97E494882494882495A4948824948825C
01FF834849177F91CBFC48193F485AA24848181FA2121F49180FA2123FA2491807127FA3
1A005B12FFAE127F7FA31A07123F7FA2121FA26D180F000F190EA26C7E1A1E6C6C181C6C
193C806C6D1778137F6E17F06D6CEE01E06D7E6D6CEE03C06D6CEE07806D6CEE0F006D6D
151E9026007FE0157CDA3FF85DDA0FFEEC03F06E6C6CEB0FE0020101F8EBFF806E6CB548
C7FC030F14F8030114E09226001FFEC8FC48567AD355>I<B812FEEFFFE018FC18FF2600
7FFCC7000F13C06D4802017F011F9238003FF8F00FFC727EF001FF727F737E737E737E19
0F86737EA2737E737EA21B8085A21BC01A7F1BE0A4F23FF0A51BF8AE1BF0A4F27FE0A41B
C01AFF1B80A24F1300A24F5AA24F5AA24F5A4F5A4F5A4F5A4F5A4E90C7FC4E5AF00FFCF0
3FF8013FEEFFE0496C020F5BBAC8FC18FC18E04DC9FC4D527BD159>I<BB1280A426007F
FCC8123F6D48030313C0011F1600193F191F190F1907A21903A2F101E0A31900A6050E14
70A41A00A3171EA3173E177E17FE160791B6FCA49138F800071600177E173E171EA3170E
A31A0EA31A1C94C8FCA41A3C1A38A31A78A31AF0A21901A21903A21907F10FE0193F19FF
013F1603496C153FBBFC1AC0A347527BD150>I<BA12FCA426007FFCC712016D48913800
1FFE011F160318011800197E193EA2191EA285A385A6F10380A2171CA296C7FCA5173CA3
177C17FC1601160F91B6FCA49138F8000F16011600177C173CA3171CA794C9FCB3497E49
B4FCB712E0A441527BD14C>I<DC1FFC14060303B56C130E031F02F0131E037F14FC9128
01FFF801FE133E0207903980001F80DA1FFCC73807C07EDA3FF0913803E0FEDAFFE0EC00
F049018015794990C9123D4948161F4948160F49481607495A494816034A160113FF4849
16004890CBFC1A7E485AA24848183EA2121F49181EA2123F5B1A0E127FA397C7FC5B12FF
AE127F6D4BB612FEA4003F93C7003F13806D94380FFE001907121FA27F120FA26C7EA26C
7EA26C7F6C7F137F806D7E6D6C160F6D7E6D7E6D6C161F6D01C0153D6D6D157DDA3FF815
F8DA1FFE913803F07E912607FFC090380FE03E020101FC90387F801E6E6CB538FE000E03
1F02F81306030302E090C7FC9226001FFEC9FC4F567AD35C>I<B70107B612F8A4C66C48
C80003EBF0006D486F5B6D486F5BB3AD91B9FCA402F8C9FCB3B1496C4B7F496C4B7FB701
07B612F8A44D527BD158>I<B7FCA439007FFE006D5A6D5AB3B3B3B0497E497EB7FCA420
527BD12A>I<B74AB512FEA4C66C48C9003F13C06D487048C7FC6D4817F0735A1A804FC8
FC193E61614E5A4E5A4E5A4E5A4EC9FC183E60604D5A4D5A4D5A4D5A4DCAFC173E5F5F4C
5A4C5A4C5A160F4C7E4C7E167F4C7E4B7F5D923807CFFE92380F8FFFED1F07DB3E037F03
7C804B7E9126F9E0007FDAFBC080DAFF80137F92C76C7E4A814A141F4A6E7E8483717F85
83717F85187F727EA2727E727EA2727E727FA2727F727FA2737E86193F8686496C83496C
93B512E0B7020FECFF80A451527BD15B>75 D<B712E0A4C66C90CAFCEB3FFC6D5AB3B3A9
191CA51938A61978A319F819F0A218011803A21807180F181F183F18FF013F1503496C02
3F13E0BAFCA43E527BD149>I<B500FC95B512FCA36E5FD8007FF2F800D93DFF943803BF
F0011D62A2011C6DEE073FA36E6C160EA36E6C161CA26E6C1638A36E6C1670A36E6C16E0
A36E6CED01C0A26E6CED0380A36E6DEC0700A36F6C140EA36F6C5CA26F6C5CA36F6C5CA3
6F6C5CA26F6C495AA36F6C495AA36F6D48C7FCA393387FC00EA2706C5AA3706C5AA3706C
5AA3706C5AA270B45AA3705BA3013E6E90C8FC137F496C4E7E000701F0027E4B7EB66C4B
B612FC173CA35E527AD16B>I<B500FC030FB512F8A28080D8003FDC007F13006D6DED0F
F8735A011D6D6F5A011C6D6F5AA26E7E81143F6E7E81140F6E7E82806E7F82806F7E8215
3F6F7EA26F7E6F7EA26F7F83816F7F83167F707E83161F707E838270138018C0827013E0
A2EF7FF0EF3FF8A2EF1FFC18FE170FEF07FF1981837113C119E183F07FF119F9183FF01F
FD19FF8484A28484A284A2197F193F133E017F171F496C160F000713F0B66C15071903A2
19014D527BD158>I<EE7FF80307B57E033F14F09239FFC00FFC913A03FE0001FFDA0FF8
9038007FC0DA3FE0EC1FF0DA7F80EC07F84AC86C7E49486F7E49486F7E4948707E494870
7E4948707E4948707E017F844948707E91CA120348854848717EA24848711380A2000F1A
C049187F001F1AE0A34848F03FF0A3007F1AF8A249181FA300FF1AFCAE6C6CF03FF8A500
3F1AF06D187FA2001F1AE0A26D18FF000F1AC0A26C6C4D1380A200031A006D5F6C616C6D
4C5A6E160F017F606D6C4C5A6D6C4C5AA26D6C4C5A6D6C4C5A6D6C4B90C7FCD900FFED03
FCDA7FC0EC0FF86E6C4A5ADA0FF8EC7FC0DA03FE4948C8FC913A00FFC00FFC033FB512F0
030714809226007FF8C9FC4E567AD35B>I<B812FCEFFFC018F818FE26007FFCC7381FFF
806D4802017F011F9238007FF0F01FF8727E727E727E841A807213C0A21AE0197FA21AF0
A91AE0A219FF1AC0A24E13801A00604E5A4E5A4E5AF07FE04D485A051F90C7FC91B712FC
18F0188002F8CBFCB3AE497E497EB7FCA444527BD150>I<B812C017FEEFFFC018F02600
7FFCC713FC6D48EC0FFF011F03017F9438007FE0727E727E727E180785727EA28684A286
A762A26097C7FCA24E5A614E5A4E5A4E5AF0FFC04D90C8FCEF0FFEEFFFF891B712C04DC9
FC839126F8000113C09338003FF0EF0FFC717EEF01FF85717F727EA2727EA2727EA985A8
1B0785180FA21B0F0607140E496C82496C6F141EB76EEB801C72EBC03C96387FE0F89638
1FFFF0CC000713E09638007F8050547BD156>82 D<DA3FF0130349B55B010714C0011FEC
F00F903A7FE00FF81F49C712FED801FCEC3F3F4848EC1FBF48486EB4FC48481403485A49
80003F8190C97E5A83127E8312FEA283A37E837FA27F007F93C7FC7F7FEA3FFC7F6C6C7E
14F86CEBFF806C14F8EDFF806C15F06C15FE6C6C806D15C0010F81010315F8D9007F8014
0F020080030F7F03001480161F040713C0160182EF7FE0A2173FEF1FF0A200E0160FA317
07A37EA318E07E170F7E18C06C161F6C17806D153F6D16006D157E6D15FED8FCFC4A5A01
7F4A5A26F83FC0EB0FF0D90FFEEB7FC0D8F003B65A48C64AC7FC023F13F848010113C034
567AD341>I<003FBB12C0A449C79038F0000701F06E48130001C0183F48C8EE0FE0007E
1907007C1903A200781901A400701900A500F01AF0481A70A6C91700B3B3AC4C7E030313
FC027FB712E0A44C517CD055>I<B7020FB512F8A4C66C48C96C13006D48EE0FF86D4870
5A735A735AB3B3B0010F17036280A20107170797C7FC6E5E1303191E6D7E616D6D5D6E7E
023F5E6E6C4A5A6E6C4A5A6E6C140FDA03FE4AC8FC6E6C6C13FE913A007FF007FC031FB5
12F0030714C0030191C9FC9238001FF84D547BD158>I<B600FC030FB512E0A4C691CAEB
FC00D97FFCEF3FF06D48EF1FC0011F616E71C7FC130F1A0E6E171E0107181CA26E173C6D
1838816D60A26F16F06D6081027F4C5AA281023F4C5AA26F1507021F94C8FC81020F160E
A26F151E0207161CA26F153C6E1638826E5EA27014F06E5E821801037F5D82033F4A5AA2
701307031F92C9FC82030F140EA270131E0307141CA270133C6F143817806F5CA2EFC0F0
6F5C17E017E1047F5B17F193383FF380A217FF7090CAFCA2705AA3705AA3705AA2705AA3
705A53547ED158>I<B600F8010FB66C010FB512E0A4000149C8001F01E0C8EBFE002600
7FF803070180ED3FF04A94C9EA0FE0013F7060785A6E83011F7095C7FCA26E83010F7017
0EA2866D6C4B5FA36D6C922603BFF05DA36F9126071FF815786D1C70A26F020F6D15F06D
DC0E0F5EA26F021E6D1401027FDB1C075EA26F023C7F023FDB38034B5AA2876E6C4A6C4B
C8FCA36E6C4A6C6D130EA36F49486D6C131E02071A1CA26F01036F133C6E4B013F1438A2
DC80076F13786E92C7001F1470A27048816E020E020F5CA2876F6C480207495AA36F6C48
6E6C485AA370486E1387031F96C9FCA2DCFCF016CF030F496E13CEA204FF17FE6F496F5A
A36F496F5AA36F90C96C5AA36F48705AA34C1607047C5FA30438705A73547ED178>I<00
3FB6020FB512FCA4D8003F01F8020191C7FC010701E06E13F06D49ED7FC0735A6D053EC8
FC6D7F6F153C027F5E6E6C15706F15F0021F4B5A6E6C5D6F4A5A6E15076E6D91C9FC7013
0E6E151E6E6D5B701338037F14786F6C5B705B031F13016F6C485A04FF5B6F13076F018F
CAFC17CE6F13DE6F13FC5F167F163F83161F707E83824C7F845E043C7F04387FEE787F4C
6C7E04E07F923801C01F03036D7E04807F4B487E4B6D7F031E81031C7F033C6D7F4B8103
70147F03F06E7E4A48814B141F02036F7E4A5A92C86C7E4A83021E81021C6F7F023C834A
810270707E02F0830101173F0107717E496C83D93FFC4C7E0003B593B512C0B600C0020F
ECFFE0A453527ED158>I E /Fl 37 122 df<EE3FFC4BB51280923907E007C092391F80
01E0DB3F0013F0037E13034B1307A24A5A18E04A48EB038094C7FCA314075DA4140F5DA3
010FB7FCA25F903A001F80007EA217FE023F5C92C7FCA216015F5C147E16035FA214FE4A
13075FA30101140F5F4AECC1C0A2161F1783010316805CA2EF870013074A5CEE0F8EEE07
9EEE03FC010FEC00F04A91C7FCA35C131FA2001C90CAFC127E5BEAFE3E133C137CEAF878
EA78F0EA3FE0EA0F80344C82BA2F>12 D<DC7FC0EB1FFF922603FFF890B512E0923C0FC0
7C03F801F0923C1F001E0FC00078033E90267E1F80137C4BD9FE3FC712FC03FC027E1301
5D02014A5A057815F84A48D901F8EB00E01B00A302074A5A5DA31707020F5D5DA3010FBA
12C0A21B80903D001F80000FC0001FA21A3F023F021F150092C75BA2621A7E4A143F027E
92C7FC1AFE62A25F02FE027E13014A5FA305FE130301014B5C4A1870A219070401EDE0F0
01034B15E05CA2F2E1C0010714034D14C34A933803E380F101E7963800FF00010F4A4814
3C4A94C7FCA34A495A131F5F001CEB0380007E90380FC01F013F92CAFC26FE3E1F133E01
3C5C5E3AF8780F01F0D878F0EB83E03A3FE003FF80270F8000FECBFC4E4C82BA49>14
D<387FFFF8A2B5FCA214F0150579941E>45 D<EE01C01603A21607160FA2161F83163FA2
167F16FF16EF150116CFED038FA2ED070FA2150E151E151C1538A203707FA2EDE007A2EC
01C014031580EC0700A2140EA25CA25C027FB5FCA291B6FC9139E00007F849481303A249
5A130791C7FC5B130E5BA25B1378137013F0EA03F8486C4A7EB56C48B512F0A3343C7BBB
3E>65 D<DB03FE130E92393FFF801E92B5EAE03C913903FE01F0913A0FF000787CDA3FC0
EB3CFC4AC7EA1FF802FE140FEB03FC49481407494815F049481403495A5C49C813E05B48
5A5B000317C0485AA2485A1880485A94C7FCA2485AA3127F5BA312FF90CBFCA41738A217
784816707E17F06C5E16015F16036C6C4A5A94C7FC001F150E6D141E000F5D6D5C6C6C49
5A6C6CEB03C0D801FEEB0F8027007F807EC8FC6DB45A010F13E0010090C9FC373D74BA3B
>67 D<0107B8FCA3903A000FF000034BEB007F183E141F181E5DA2143FA25D181C147FA2
9238000380A24A130718004A91C7FC5E13015E4A133E167E49B512FEA25EECF800010714
7C163C4A1338A2010F147818E04A13701701011F16C016004A14031880013F150718004A
5CA2017F151E173E91C8123C177C4915FC4C5A4914070001ED7FF0B8FCA25F38397BB838
>69 D<0107B712FEA3903A000FF000074B1300187C021F153CA25DA2143FA25D1838147F
A292C8FCEE03804A130718004A91C7FCA201015CA24A131E163E010314FE91B5FC5EA290
3807F800167C4A1378A2130FA24A1370A2011F14F0A24A90C8FCA2133FA25CA2137FA291
CAFCA25BA25B487EB6FCA337397BB836>I<0103B512F8A390390007F8005DA2140FA25D
A2141FA25DA2143FA25DA2147FA292C7FCA25CA25CA21301A25CA21303A25CA21307A25C
A2130FA25CA2131FA25CA2133FA25CA2137FA291C8FC497EB6FCA25C25397CB820>73
D<902607FFF8923807FFF0614F13E0D9000FEFF0004F5AA2021F167FF1EFC0141DDA1CFC
EC01CF023C16DF9538039F800238ED071FA20278ED0E3F97C7FC0270151CA202F04B5AF0
707E14E0037E14E0010117FE4D485A02C0EC0380A20103ED0701610280140EA20107ED1C
0305385B14006F137049160705E05B010EEC01C0A2011E913803800F61011CEC0700A201
3C020E131F4C5C1338ED1FB80178163F04F091C8FC01705CA201F04A5B187E00015DD807
F816FEB500C09039007FFFFC151E150E4C397AB84A>77 D<902603FFF891B512E0A281D9
0007923807F8006F6E5A61020F5E81DA0E7F5DA2021E6D1307033F92C7FC141C82DA3C1F
5C70130EEC380FA202786D131E0307141C147082DAF003143C70133814E0150101016E13
78030014705C8201036E13F0604A1480163F010715C1041F5B91C7FC17E149EC0FE36001
0E15F31607011E15FF95C8FC011C80A2013C805F1338160013785F01F8157CEA03FC267F
FFE0143CB51538A243397CB83E>I<0107B612F817FF1880903B000FF0003FE04BEB0FF0
EF03F8141FEF01FC5DA2023F15FEA25DA2147FEF03FC92C7FCA24A15F817074A15F0EF0F
E01301EF1FC04AEC3F80EFFE0001034A5AEE0FF091B612C04CC7FCD907F8C9FCA25CA213
0FA25CA2131FA25CA2133FA25CA2137FA291CAFCA25BA25B1201B512FCA337397BB838>
80 D<0103B612F017FEEFFF80903B0007F8003FC04BEB0FF01707020FEC03F8EF01FC5D
A2021F15FEA25DA2143FEF03FC5DA2027FEC07F818F092C7120F18E04AEC1FC0EF3F004A
14FEEE01F80101EC0FE091B6128004FCC7FC9138FC003F0103EC0F80834A6D7E83010714
03A25C83010F14075F5CA2011F140FA25CA2133F161F4AECE007A2017F160F180E91C7FC
49020F131C007F01FE153CB5913807F078040313F0CAEAFFE0EF3F80383B7CB83D>82
D<92383FC00E913901FFF01C020713FC91391FC07E3C91393F001F7C027CEB0FF84A1307
49481303495A4948EB01F0A2495AA2011F15E091C7FCA34915C0A36E90C7FCA2806D7E14
FCECFF806D13F015FE6D6D7E6D14E0010080023F7F14079138007FFC150F15031501A215
00A2167C120EA3001E15FC5EA3003E4A5AA24B5AA2007F4A5A4B5A6D49C7FC6D133ED8F9
F013FC39F8FC03F839F07FFFE0D8E01F138026C003FCC8FC2F3D7ABA2F>I<0007B812E0
A25AD9F800EB001F01C049EB07C0485AD900011403121E001C5C003C1780140312380078
5C00701607140700F01700485CA2140FC792C7FC5DA2141FA25DA2143FA25DA2147FA292
C9FCA25CA25CA21301A25CA21303A25CA21307A25CA2130FA25CEB3FF0007FB512F8B6FC
A2333971B83B>I<B500F8903803FFFEA218FCD803FEC8EA7FC049ED3F000001163E173C
17385FA25F16015F6D4A5AA200004BC7FC5E160E5EA25EA25E5EA26D495A7F4B5A150793
C8FC150EA25D153C15385D1480013F5B14815DEC8380A20287C9FCA2148E149E149C14F8
A26D5AA25C5CA25CA291CAFC131EA2373B6FB83E>86 D<B5D8F80FB590381FFFF06102F0
18E0D807FEC7D87FE0903803FE00D803F8DA3F806D5AF100F0A24F5A621903621907047F
92C7FC190E16FF4B5DA2DB03BF5C7F0001DA073F5CA2030E5D83DB1C1F495A180303385D
4EC8FC157003F0140E15E0DA01C05CA2DA03805CA2DA07005CA2020E5D17C14A5DEFC380
5C027802C7C9FC14704A14CE13FE6C6C4814DCA24A14F8A291C75B160F495D5F5B5F5B49
92CAFCA249140E4C3B6FB853>I<14F8EB07FE90381F871C90383E03FE137CEBF8011201
48486C5A485A120FEBC001001F5CA2EA3F801403007F5C1300A21407485C5AA2140F5D48
ECC1C0A2141F15831680143F1587007C017F1300ECFF076C485B9038038F8E391F0F079E
3907FE03FC3901F000F0222677A42A>97 D<133FEA1FFFA3C67E137EA313FE5BA312015B
A312035BA31207EBE0F8EBE7FE9038EF0F80390FFC07C013F89038F003E013E0D81FC013
F0A21380A2123F1300A214075A127EA2140F12FE4814E0A2141F15C05AEC3F80A215005C
147E5C387801F8007C5B383C03E0383E07C0381E1F80D80FFEC7FCEA01F01C3B77B926>
I<147F903803FFC090380FC1E090381F0070017E13784913383901F801F83803F0031207
13E0120FD81FC013F091C7FC485AA2127F90C8FCA35A5AA45AA3153015381578007C14F0
007EEB01E0003EEB03C0EC0F806CEB3E00380F81F83803FFE0C690C7FC1D2677A426>I<
ED01F815FFA3150316F0A21507A216E0A2150FA216C0A2151FA21680A2153FA202F81300
EB07FE90381F877F90383E03FF017C5BEBF80112013803F00048485B120FEBC001121F5D
EA3F801403127F01005BA214075A485CA2140FA248ECC1C0A2141F15C3ED8380143F1587
007C017F1300ECFF076C485B9038038F8E391F0F079E3907FE03FC3901F000F0253B77B9
2A>I<147F903803FFC090380FC1E090383F00F0017E13785B485A485A485A120F4913F8
001F14F0383F8001EC07E0EC1F80397F81FF00EBFFF891C7FC90C8FC5A5AA55AA2153000
7C14381578007E14F0003EEB01E0EC03C06CEB0F806CEB3E00380781F83803FFE0C690C7
FC1D2677A426>I<ED07C0ED1FF0ED3E38ED7C3CEDF8FC15F9140115F1020313F8EDF0F0
160014075DA4140F5DA4141F5D010FB512C05B16809039003F800092C7FCA45C147EA414
FE5CA413015CA413035CA413075CA4130F5CA3131F5CA391C8FC5B121CEA7E3EA2EAFE3C
137C1378EAF8F01278EA3FC0EA0F80264C82BA19>I<EB03F0EA01FFA3EA00075CA3130F
5CA3131F5CA3133F91C8FCA35B90387E07F0EC1FFCEC783E9038FFE01F02C01380EC800F
1400485A16C05B49EB1F8012035BA2153F000715005BA25D000F147E5B15FE5D121FD980
01131C15F8163C003F01031338010013F0A216704814E0007E15F016E0EDE1C000FE9038
01E38048903800FF000038143C263B7BB92A>104 D<EB01C0EB07E014F0130F14E01307
EB038090C7FCAB13F0EA03FCEA071EEA0E1F121CA212385B1270A25BEAF07E12E013FEC6
5AA212015B1203A25B12075BA2000F13E013C013C1001F13C01381A2EB83801303EB0700
A2130E6C5AEA07F8EA01E0143879B619>I<EB03F0EA01FFA3EA00075CA3130F5CA3131F
5CA3133F91C8FCA35B017EEB0F80ED3FE015F09039FE01C1F09038FC0387EC0707140E00
01011C13E0EBF83891383003800270C7FC00035BEBF1C0EBF38001FFC8FCEA07FC7FEBFF
C0EBE7F8380FE1FCEBC07E147F80001F809039801F81C0A21583003F013F138001001303
A21507481500007E133EEC1E0E151E00FE6D5A48EB07F80038EB01E0243B7BB926>107
D<EB0FC0EA07FFA3EA001F1480A2133FA21400A25BA2137EA213FEA25BA21201A25BA212
03A25BA21207A25BA2120FA25BA2121FA25BA2123FA290C7FCA25AA2EA7E0EA212FE131E
EAFC1CA2133C133812F81378EA7870EA7CE0121FEA0F80123B79B915>I<D801E001FEEB
07F03C07F803FF801FFC3C0E3C0F07C0783E3C1E3E3C03E1E01F261C1F78D9F3C013803C
383FF001F7800F02E01400007801C013FE007018C002805B4A4848EB1F80EAF07FD8E07E
5CA200000207143F01FE1700495CA2030F5C0001177E495C18FE031F5C120349DA800113
1C18F8033F153C00070403133849020013F0A24B1570000F17E049017E15F019E003FEEC
E1C0001FEE01E34949903800FF000007C70038143C3E2679A444>I<D801E013FE3A07F8
03FF803A0E3C0F07C03A1E3E3C03E0261C1F787F39383FF00114E0007813C00070811480
4A485AEAF07FEAE07EA20000140701FE5C5BA2150F00015D5B151F5E12034990383F8380
160316070007027F130049137EA2160E000F147C49141E161C5E001FEC3C7849EB1FE000
07C7EA0780292679A42F>I<147F903803FFC090380FC1F090381F00F8017E137C5B4848
137E4848133E0007143F5B120F485AA2485A157F127F90C7FCA215FF5A4814FEA2140115
FC5AEC03F8A2EC07F015E0140F007C14C0007EEB1F80003EEB3F00147E6C13F8380F83F0
3803FFC0C648C7FC202677A42A>I<9039078007C090391FE03FF090393CF0787C903938
F8E03E9038787FC00170497EECFF00D9F0FE148013E05CEA01E113C15CA2D80003143FA2
5CA20107147FA24A1400A2010F5C5E5C4B5A131F5EEC80035E013F495A6E485A5E6E48C7
FC017F133EEC70FC90387E3FF0EC0F8001FEC9FCA25BA21201A25BA21203A25B1207B512
C0A3293580A42A>I<3903C003F0390FF01FFC391E783C0F381C7C703A3C3EE03F803838
3FC0EB7F800078150000701300151CD8F07E90C7FCEAE0FE5BA2120012015BA312035BA3
12075BA3120F5BA3121F5BA3123F90C9FC120E212679A423>114
D<14FE903807FF8090380F83C090383E00E04913F00178137001F813F00001130313F0A2
15E00003EB01C06DC7FC7FEBFFC06C13F814FE6C7F6D13807F010F13C01300143F141F14
0F123E127E00FE1480A348EB1F0012E06C133E00705B6C5B381E03E06CB45AD801FEC7FC
1C267AA422>I<EB0380EB07C0130FA4131F1480A3133F1400A35B137E007FB5FCA2B6FC
3800FC00A312015BA312035BA312075BA3120F5BA3121FEB801CA2143C003F1338EB0078
147014F014E0EB01C0EA3E03381F0780380F0F00EA07FCEA01F0183579B31C>I<13F8D8
03FEEB01C0D8078FEB03E0390E0F8007121E121C0038140F131F007815C01270013F131F
00F0130000E015805BD8007E133FA201FE14005B5D120149137EA215FE120349EBFC0EA2
0201131E161C15F813E0163CD9F003133814070001ECF07091381EF8F03A00F83C78E090
393FF03FC090390FC00F00272679A42D>I<01F01507D803FC903903801F80D8071E9039
07C03FC0D80E1F130F121C123C0038021F131F49EC800F00701607A249133FD8F07E1680
00E0ED000313FEC64849130718000001147E5B03FE5B0003160E495BA2171E0007010114
1C01E05B173C1738A217781770020314F05F0003010713016D486C485A000190391E7C07
802800FC3C3E0FC7FC90393FF81FFE90390FE003F0322679A437>119
D<903907E007C090391FF81FF89039787C383C9038F03E703A01E01EE0FE3803C01F0180
13C0D8070014FC481480000E1570023F1300001E91C7FC121CA2C75AA2147EA214FEA25C
A21301A24A1370A2010314F016E0001C5B007E1401010714C000FEEC0380010F1307010E
EB0F0039781CF81E9038387C3C393FF03FF03907C00FC027267CA427>I<13F0D803FCEB
01C0D8071EEB03E0D80E1F1307121C123C0038140F4914C01270A249131FD8F07E148012
E013FEC648133F160012015B5D0003147E5BA215FE00075C5BA214015DA314035D140700
03130FEBF01F3901F87FE038007FF7EB1FC7EB000F5DA2141F003F5C48133F92C7FC147E
147C007E13FC387001F8EB03E06C485A383C1F80D80FFEC8FCEA03F0233679A428>I
E /Fm 24 119 df<B512FCA516057F941C>45 D<121C127FEAFF80A5EA7F00121C090979
8817>I<EB03F8EB1FFF90387E0FC09038F803E03901E000F0484813780007147C48487F
A248C77EA2481580A3007EEC0FC0A600FE15E0B3007E15C0A4007F141F6C1580A36C1500
6D5B000F143EA26C6C5B6C6C5B6C6C485A6C6C485A90387E0FC0D91FFFC7FCEB03F8233A
7DB72A>48 D<EB01C013031307131F13FFB5FCA2131F1200B3B3A8497E007FB512F0A31C
3879B72A>I<EB0FF0EB7FFE48B57E3903E03FE0390F000FF0000E6D7E486D7E486D7E12
3000706D7E126012FCB4EC7F807FA56CC7FC121CC8FCEDFF00A34A5A5D14035D4A5A5D14
0F4A5A4A5A92C7FC147C5C495A495A495A495A91C8FC011EEB01805B5B49130348481400
485A485A000EC75A000FB6FC5A5A485CB6FCA321387CB72A>I<EB07F8EB3FFF4913C039
01F80FF03903C007F848486C7E380E0001000F80381FE0006D7FA56C5A6C5AC85A1401A2
5D4A5AA24A5A5DEC0F80027EC7FCEB1FFCECFF809038000FE06E7EEC01FC816E7EED7F80
A216C0A2153F16E0A2121EEA7F80487EA416C049137F007F1580007EC7FC0070ECFF006C
495A121E390F8003F83907F00FF00001B512C06C6C90C7FCEB0FF8233A7DB72A>I<1538
A2157815F8A2140114031407A2140F141F141B14331473146314C313011483EB03031307
1306130C131C131813301370136013C01201EA038013005A120E120C5A123812305A12E0
B712F8A3C73803F800AB4A7E0103B512F8A325397EB82A>I<0006140CD80780133C9038
F003F890B5FC5D5D158092C7FC14FC38067FE090C9FCABEB07F8EB3FFE9038780F803907
E007E090388003F0496C7E12066E7EC87EA28181A21680A4123E127F487EA490C7130048
5C12E000605C12700030495A00385C6C1303001E495A6C6C485A3907E03F800001B5C7FC
38007FFCEB1FE0213A7CB72A>I<EC3FC0903801FFF0010713FC90380FE03E90383F8007
90387E001F49EB3F804848137F485AA2485A000FEC3F0049131E001F91C7FCA2485AA312
7F90C9FCEB01FC903807FF8039FF1E07E090383801F0496C7E01607F01E0137E497FA249
148016C0151FA290C713E0A57EA56C7E16C0A2121FED3F807F000F15006C6C5B15FE6C6C
5B6C6C485A3900FE07F090383FFFC06D90C7FCEB03FC233A7DB72A>I<12301238123E00
3FB612E0A316C05A168016000070C712060060140E5D151800E01438485C5D5DC712014A
5A92C7FC5C140E140C141C5CA25CA214F0495AA21303A25C1307A2130FA3495AA3133FA5
137FA96DC8FC131E233B7BB82A>I<EB03F8EB1FFF017F13C09038FC07F03901E001F848
486C7E4848137C90C77E48141E000E141F001E80A3121FA27F5D01E0131E6C6C133E01FC
133C6D5B6C6C6C5AECC1E06CEBF3C06C01FFC7FC6C5BEB3FFF6D13C081017F13F801F07F
3903E07FFE3907801FFF48486C1380481303003E6D13C0003CEB007F007C143F0078EC0F
E000F814075A1503A21501A36C15C012781503007C15806CEC07006C5C6C6C131ED807E0
137C3903F803F0C6B55A013F1380D907FCC7FC233A7DB72A>I<EB03F8EB1FFF017F13C0
9038FC07E03903F803F048486C7E48486C7E49137E121F48487FA2007F158090C7FCA248
EC1FC0A616E0A56C143FA27F123F001F147FA26C6C13FF6C6C13DF000313013901F0039F
3900FC0F1FD93FFC13C0EB07F090C7FC153F1680A316005D000F147E487E486C5BA24A5A
4A5A49485A6C48485A001C495A260F807FC7FC3807FFFC000113F038003FC0233A7DB72A
>I<EB1FE0EBFFFC3803E03F3907000F80390F8007E0486C6C7E13E06E7EA26E7E6C5A6C
5AC8FCA4147FEB07FFEB3FE0EBFE00EA03F8EA0FF0EA1FC0123F485A90C7FC160C12FEA3
1401A26C13036CEB077C903980063E18383FC01E3A0FE0781FF03A03FFF00FE03A007F80
07C026277DA52A>97 D<ED0FC0EC03FFA3EC003F150FB0EB03F8EB1FFF90387E078F9038
F801EF3903F0007F4848133F4848131FA24848130F123F90C7FC5AA2127E12FEAA127E12
7FA27EA26C6C131FA26C6C133F6C6C137F6C6CEBEFF03A01F801CFFF39007C078F90381F
FE0FD907F813C0283B7DB92E>100 D<EB07F8EB1FFF90387C0FC03901F803E03903F001
F0D807E013F8380FC0004848137CA248C7127E153E5A153F127E12FEA3B7FCA248C8FCA5
127EA2127FA26C14037F001F14076C6C13060007140E6D131CD801F013386C6C13709038
7E03E090381FFF80903803FC0020277EA525>I<ED03F090390FF00FF890393FFC3C3C90
39F81F707C3901F00FE03903E007C03A07C003E010000FECF000A248486C7EA86C6C485A
A200075C6C6C485A6D485A6D48C7FC38073FFC38060FF0000EC9FCA4120FA213C06CB512
C015F86C14FE6CECFF804815C03A0F80007FE048C7EA0FF0003E140348140116F8481400
A56C1401007C15F06CEC03E0003F1407D80F80EB0F80D807E0EB3F003901FC01FC39007F
FFF0010790C7FC26387EA52A>103 D<EA0380EA0FE0487EA56C5AEA0380C8FCAAEA03F0
12FFA312071203B3AA487EB512C0A312387EB717>105 D<2703F00FF0EB1FE000FFD93F
FCEB7FF8913AF03F01E07E903BF1C01F83803F3D0FF3800FC7001F802603F70013CE01FE
14DC49D907F8EB0FC0A2495CA3495CB3A3486C496CEB1FE0B500C1B50083B5FCA340257E
A445>109 D<3903F00FF000FFEB3FFCECF03F9039F1C01F803A0FF3800FC03803F70013
FE496D7EA25BA35BB3A3486C497EB500C1B51280A329257EA42E>I<EB03FE90380FFF80
90383E03E09038F800F84848137C48487F48487F4848EB0F80001F15C090C712074815E0
A2007EEC03F0A400FE15F8A9007E15F0A2007F14076C15E0A26C6CEB0FC0000F15806D13
1F6C6CEB3F006C6C137EC66C13F890387E03F090381FFFC0D903FEC7FC25277EA52A>I<
3903F01FE000FFEB7FF89038F1E07E9039F3801F803A07F7000FC0D803FEEB07E049EB03
F04914F849130116FC150016FEA3167FAA16FEA3ED01FCA26DEB03F816F06D13076DEB0F
E001F614C09039F7803F009038F1E07E9038F0FFF8EC1FC091C8FCAB487EB512C0A32835
7EA42E>I<3807E01F00FFEB7FC09038E1E3E09038E387F0380FE707EA03E613EE9038EC
03E09038FC0080491300A45BB3A2487EB512F0A31C257EA421>114
D<1318A51338A31378A313F8120112031207001FB5FCB6FCA2D801F8C7FCB215C0A93800
FC011580EB7C03017E13006D5AEB0FFEEB01F81A347FB220>116
D<B538803FFEA33A0FF8000FF06C48EB07E00003EC03C06D148000011500A26C6C1306A2
6D130E017E130CA26D5BA2EC8038011F1330A26D6C5AA214E001075BA2903803F180A3D9
01FBC7FCA214FF6D5AA2147CA31438A227257EA32C>118 D E /Fn
25 119 df<EB01FCD907FF15E0011F13C0017F6DEB01C090B56C1480486E13032603FE07
15002707F000FC5B01C0017C130648C76C130E001E021E130C001C80003C6E131C003816
18486E1338EE8030006002011370176000E016E0C86D5A150016C15F16C394C7FC16E316
E71666166E166CA2167C1678A3167016F05EA35EA31501A25E1503A44BC8FCA35D150EA4
5DA45DA333417EAB33>13 D<177F0130913803FFC00170020F13E0494A13F048484A13F8
4848EC7F0190C838F8007C484A48133C00064A48131C000E4B131E000C4A48130E001C92
C7FC0018140E150C0038021C1406003014185D180E00704A140C1260154003C0141C00E0
17184A5A4817386C17304AC8127018E01260007049EC01C0EF03800078010614070038EE
0F00003C010E141E6C167CD81F805D6C6C48EB03F0D807F0EC0FE0D803FEEC3FC02801FF
FC03FFC7FC6C6CB55A6D14F8010F14E0010114809026007FF8C8FC02F8C9FCA25CA21301
A3495AA31307A25C130FA4131F5C6DCAFC37417BAB40>39 D<121EEA7F80A2EAFFC0A4EA
7F80A2EA1E000A0A78891B>58 D<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413
E013C0A312011380120313005A1206120E5A5A5A12600B1D78891B>I<F001C0F007E018
1FF07FC0943801FF00EF07FCEF1FF0EF7FC04C48C7FCEE0FFCEE3FF0EEFFC0030390C8FC
ED0FF8ED3FE0EDFF80DA03FEC9FCEC1FF8EC7FE0903801FF80D907FECAFCEB1FF0EB7FC0
4848CBFCEA07FCEA1FF0EA7FC048CCFCA2EA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0
EB07FE903801FF809038007FE0EC1FF8EC03FE913800FF80ED3FE0ED0FF8ED03FF030013
C0EE3FF0EE0FFCEE01FF9338007FC0EF1FF0EF07FCEF01FF9438007FC0F01FE01807F001
C03B3878B44C>I<1618163C167CA2167816F8A216F01501A216E01503A216C01507A216
80150FA2ED1F00A2151E153EA2153C157CA2157815F8A25D1401A24A5AA25D1407A25D14
0FA292C7FC5CA2141E143EA2143C147CA25CA25C1301A25C1303A25C1307A25C130FA291
C8FC5BA2133EA2133C137CA2137813F8A25B1201A25B1203A2485AA25B120FA290C9FC5A
A2121E123EA2123C127CA2127812F8A25A126026647BCA31>I<91B6D8E003B61280A302
0001E0C70003EB8000DB7F806E48C7FC03FF1503A293C85BA219075C4B5EA2190F14034B
5EA2191F14074B5EA2193F140F4B5EA2197F141F4B5EA219FF143F92B8C8FCA3DA7FC0C7
12014B5DA2180314FF92C85BA218075B4A5EA2180F13034A5EA2181F13074A5EA2183F13
0F4A5EA2187F131F4A5EA2013F16FFA24A93C9FCD9FFE002037FB6D8E003B67EA351447C
C351>72 D<91B500C0020FB5128082A2DA007F9239007FE00070ED1F8074C7FCDBEFF815
0E15CF03C7160C70151C1401DB83FE1518A2DB81FF1538140303001630831A704A6D7E02
061760163F7114E0140E020C6D6C5CA2706C1301141C021801075D83190302386D7E0230
94C8FC1601715B147002606DEB8006A294387FC00E14E04A023F130C18E0191C0101ED1F
F04A1618170FF0F838130391C83807FC30A2943803FE705B01060301136018FF19E0010E
81010C5F187FA2131C0118705A1338181F137801FC70C9FCEA03FFB512F884180651447C
C34E>78 D<EE03FF047F13F0923901FC01FC92390FE0007F033FC7EA1FC003FEEC07E0DA
01F86E7EDA07F06E7EDA0FC06E7E4A4881027FC9127E02FE167F49488249481780495A01
0FEF1FC05C495A494817E0137F91CAFC5B4848170FF11FF0485AA2485AA2120F5B001F19
E0A249173F123FA34848EF7FC0A3F1FF80A2485A4E1300A34E5AA24E5A61180F007F6018
1F614E5A4E5A6C7E4EC7FC4D5A001F4C5A6D4B5A000F5F6C6C4B5AEF3F806C6C4BC8FC6C
6C15FE6C6CEC01F8017FEC07F06D6CEB1FC0D90FE0017FC9FC903903F803FC0100B512E0
DA0FFECAFC44487CC54B>I<91B712FEF0FFE019F802009039C0000FFE6F48EB01FF03FF
9138007F80F13FC093C8EA1FE0A24AEE0FF0A25D1AF81403A25DA21407F11FF05DA2020F
EE3FE0A24B16C0197F021F1780F1FF004B4A5A4E5A023F4B5A4E5A4BEC3FC006FFC7FC02
7FEC07FC92B612F018800380CAFC14FFA292CBFCA25BA25CA21303A25CA21307A25CA213
0FA25CA2131FA25CA2133FA25CEBFFE0B612E0A345447CC33F>I<9339FF8001800307EB
F003033F13FC9239FF007E07DA01F8EB0F0FDA07E09038079F004A486DB4FC4AC77E023E
804A5D187E5C495A183C495AA213074A1538A3130F183080A295C7FC806D7E8014FF6D13
E015FC6DEBFFC06D14FC6E13FF6E14C0020F80020314F8EC003F03077F9238007FFE160F
1603707E8283A283A21206A4000E163EA2120C177E001E167CA25F5F003F15014C5A6D4A
5A4C5A486C4AC8FC6D143ED87CF85CD8787E495A3AF01FC00FE0D8E007B51280010149C9
FC39C0003FF039487BC53C>83 D<48BA12C05AA291C7D980001380D807F092C7121F4949
150F0180170748C75B1903120E48020316005E12181238003014074C5C00701806126000
E0140F485DA3C8001F92C7FC5EA3153F5EA3157F5EA315FF93CAFCA35C5DA314035DA314
075DA3140F5DA3141F5DA3143F5DA2147FA214FF01037F001FB612FCA25E42447EC339>
I<EB0FE0EA07FFA338001FC0130F131FA25CA3133F91C8FCA35B137EA313FE5BA312015B
EC0FC0EC3FF00003EBF07C9038F3C03E9038F7001F01FE14804848130F4914C05B16E048
5A5BA3121F5BA2151F123F90C7FCA2153F4815C0127EA2157F16805A16005DA24A5A007C
5CA24A5A4A5A5D003C130F003E495A001E495A001F017EC7FC6C5B3807C1F03801FFC06C
6CC8FC23467CC429>98 D<EC07F8EC3FFF9138FC07C0903903F000E049481370D91F8013
3049C71270017EEB03F801FE1307485A4848EB0FF012075B000FEC07C0484890C7FCA248
5AA2127F5BA312FF90C9FCA45AA5161816381670007E15E0ED01C06CEC0380ED07006C6C
131E000F14383907C001F03903F00FC02600FFFEC7FCEB1FF0252D7CAB2A>I<EE01FC16
FFA3EE03F816011603A217F0A21607A217E0A2160FA217C0A2161FA21780A2163FA21700
EC0FC091387FF07F903801F838903907E01C7E90380FC00E90393F0007FE49130301FE5C
485A491301120348485C120F491303121F5E485A1507127F495CA2150F12FF90C75BA215
1FA2485DA2033F13301770EE0060A24B13E017C015FE007E130102031301003ED9073E13
80003F010E13036C011C14006C6C486C5A3A07C0F00F0E3A01FFC007FC3A007F0001F02E
467CC433>I<14FE137FA3EB01FC13001301A25CA21303A25CA21307A25CA2130FA25CA2
131FA25CED3FC090393F81FFF0913887C0FC91380E007E023C133ED97F70133F4A7F4A14
805C13FF91C7FC5BA24848143F17005BA200035D167E5BA2000715FE5E5B1501000F5DA2
4913035E001F1607030713064914E0150F003FEDC00E170C90C7141CEE80184816381730
007E167017E000FE91380781C0EEC38048913801FF000038EC007C30467BC438>104
D<141E143F5C5CA3147E143891C7FCAE133EEBFF803801C3C0380781E0380601F0120E12
1CEA180312381230A2EA700700605BA2EAE00F00C05BEA001F5CA2133F91C7FCA25B137E
13FE5BA212015BEC03800003140013F01207495A1406140E140CEBC01C141814385C0003
5BEBE1C0C6B45A013EC7FC19437DC121>I<14FE137FA3EB01FC13001301A25CA21303A2
5CA21307A25CA2130FA25CA2131FA25C163F013FECFFC0923803C0E09138000703ED1E0F
491338ED701F017E13E0EC01C001FE018013C00203EB07004948C8FC140E00015B5C495A
5C3803FBC001FFC9FC8014F83807F1FE9038F03F809038E00FE06E7E000F130381EBC001
A2001FED01C017801380A2003F15031700010013F05E481506160E007E150C161C00FE01
005BED787048EC3FE00038EC0F802B467BC433>107 D<EB03F8EA01FFA3380007F01303
1307A214E0A2130FA214C0A2131FA21480A2133FA21400A25BA2137EA213FEA25BA21201
A25BA21203A25BA21207A25BA2120FA25BA2121FA25BA2123FA290C7FCA248136014E000
7E13C0A2130100FE138012FCA21303007C13005B1306EA3E0EEA1E1CEA0FF8EA03E01546
7CC41D>I<01F8D903FCEC7F80D803FED91FFF903803FFE0D8071F903B7C0FC00F81F83E
0E0F80E007E01C00FC001C9026C3C0030178137C271807C700D9F0E0137E02CE902601F1
C0133E003801DCDAFB80133F003001D892C7FCD90FF814FF0070495C0060495CA200E049
49485CD8C01F187E4A5C1200040715FE013F6091C75BA2040F14014960017E5D1903041F
5D13FE494B130762043F160E0001060F130C4992C713C0191F4CED801C00031A1849027E
1638F2003004FE167000071A60494A16E0F201C0030192380F0380000FF18700494AEC03
FED80380D90070EC00F84F2D7DAB55>I<01F8EB03FCD803FEEB1FFFD8071F90387C0FC0
3B0E0F80E007E03A0C07C3C003001CD9C7007F001801CE1301003801DC80003013D8EB0F
F800705B00605BA200E0491303D8C01F5D5C12001607013F5D91C7FCA2160F495D137E16
1F5F13FE49143F94C7FC187000014B136049147E16FE4C13E0000317C049150104F81380
170300071700495D170EEE781C000FED7C3849EC1FF0D80380EC07C0342D7DAB3A>I<D9
03E0EB3F80D90FF8EBFFE0903A1C7C03C0F8903A383E07007C9026703F1E137E9026601F
387F5D01E00160EB1F8001C013E04A5A00014A14C0018090C7FCA200035B1300147EC7FC
02FE143FA25CA20101157F18805CA2010315FF18005C5F010714015F4A13035F010F1407
5F4C5A5F496C495A4CC7FC02B8137E02985B90393F9C01F891388F07E0913803FF80DA00
FCC8FC4990C9FCA2137EA213FEA25BA21201A25BA21203A21207B512F0A25C323F83AB31
>112 D<EC0FF0EC7FFE903901F00F809039078001C049C712E0011E14605BED01F04913
07A201F8EB0FE05B7FED03806D90C7FC7F7F14F86DB47E15E06D13F86D7F01077F1300EC
07FF140081ED3F80151F120E003FEC0F00487EA25D48C7121EA200FC5C12605D00705C6C
495A6CEB07C0260F803FC7FC3803FFFC38007FE0242D7BAB2E>115
D<141C147EA314FE5CA313015CA313035CA313075CA2007FB512FCB6FC15F839000FC000
A2131F5CA3133F91C7FCA35B137EA313FE5BA312015BA312035BA21570000714605B15E0
15C0000F130101C013801403EC070000071306140E5C6C6C5A000113F03800FFC0013FC7
FC1E3F7EBD23>I<013E140ED9FF80EB3F802603C3C0137F380703E0380601F0120E121C
D81803143F0038151F0030150FA2D87007140700605BA2D8E00F150000C0497FEA001F4A
5B1606133F91C7FC160E49140C137EA2161C01FE14185B1638163016704848146016E05E
150100005D15036D49C7FC1506017C130E017E5B6D137890380F81E06DB45AD900FEC8FC
292D7DAB2F>118 D E /Fo 79 127 df<9239FFC001FC020F9038F80FFF913B3F803E3F
03C0913BFC00077E07E0D903F890390FFC0FF0494890383FF81F4948EB7FF0495A494814
E049C7FCF00FE04991393FC0038049021F90C7FCAFB912F0A3C648C7D81FC0C7FCB3B248
6CEC3FF0007FD9FC0FB512E0A33C467EC539>11 D<4AB4FC020F13E091387F80F8903901
FC001C49487FD907E0130F4948137F011FECFF80495A49C7FCA25B49EC7F00163E93C7FC
ACEE3F80B8FCA3C648C7FC167F163FB3B0486CEC7FC0007FD9FC1FB5FCA330467EC536>
I<DBFF80EB3FE0020F9039F001FFFC913B3F807C0FF01F913CFC000E3F800380D903F86D
48486C7E4948D90FFC804948D93FF8130F4948017F4A7E49485C49C75BA25B494B6D5A04
1F6E5A96C8FCACF107F0BBFCA3C648C7391FC0001F190F1907B3B0486C4A6C497E007FD9
FC0FB50083B512E0A34B467EC551>14 D<D91F801618D97FE0163CD9F078167C2603E01C
16FC48486C4B5A260F800F4B5A6E6C1407271F0003E04A5A6FEC3FC0003ED901BE14FF92
3ACFC00FCF80007ED900C1B5001FC7FC9238C03FF0007C92C7123E6F147E00FC0260147C
601701604D5A1707604D5A171F95C8FC173E007C02E0137E4B137C007E5E1601003E0101
5C4B485A6C13034B485A6C6C48130F020E5C2607C00C49C9FC2603E01C5B2600F078133E
D97FE05BD91F8001FCEB03F090C848EB0FFC4B48EB1E0F030391387C03804CEBF8019227
07C001F013C0030FED00E04C48481360DB1F0015704D481330033E1638037E010F141815
7C4B5C0201171C4B011F140C4A5A14075D4A5A141F92C7FC143E147E147C5C0101030F14
1C4A1718494881A2494802071438010F18304A6E6C137049C81560496F6C13E0013EEF01
C049DB00F8138001FCEE7C034993381E0F0049EE0FFC0160EE03F046517BCA51>37
D<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A312011380120313005A
1206120E5A5A5A12600B1D78C41B>39 D<140C141C1438147014E0EB01C01303EB0780EB
0F00A2131E5BA25B13F85B12015B1203A2485AA3485AA348C7FCA35AA2123EA2127EA412
7CA312FCB3A2127CA3127EA4123EA2123FA27EA36C7EA36C7EA36C7EA212017F12007F13
787FA27F7FA2EB0780EB03C01301EB00E014701438141C140C166476CA26>I<12C07E12
707E7E7E120F6C7E6C7EA26C7E6C7EA21378137C133C133E131E131FA2EB0F80A3EB07C0
A3EB03E0A314F0A21301A214F8A41300A314FCB3A214F8A31301A414F0A21303A214E0A3
EB07C0A3EB0F80A3EB1F00A2131E133E133C137C13785BA2485A485AA2485A48C7FC120E
5A5A5A5A5A16647BCA26>I<16C04B7EB3AB007FBAFCBB1280A26C1900C8D801E0C9FCB3
AB6F5A41407BB84C>43 D<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0
A312011380120313005A1206120E5A5A5A12600B1D78891B>I<B612C0A61A067F9721>I<
121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A78891B>I<1618163C167CA2167816F8A2
16F01501A216E01503A216C01507A21680150FA2ED1F00A2151E153EA2153C157CA21578
15F8A25D1401A24A5AA25D1407A25D140FA292C7FC5CA2141E143EA2143C147CA25CA25C
1301A25C1303A25C1307A25C130FA291C8FC5BA2133EA2133C137CA2137813F8A25B1201
A25B1203A2485AA25B120FA290C9FC5AA2121E123EA2123C127CA2127812F8A25A126026
647BCA31>I<14FF010713E090381F81F890383E007C01FC133F4848EB1F8049130F4848
EB07C04848EB03E0A2000F15F0491301001F15F8A2003F15FCA390C8FC4815FEA54815FF
B3A46C15FEA56D1301003F15FCA3001F15F8A26C6CEB03F0A36C6CEB07E0000315C06D13
0F6C6CEB1F806C6CEB3F00013E137C90381F81F8903807FFE0010090C7FC28447CC131>
I<143014F013011303131F13FFB5FC13E713071200B3B3B0497E497E007FB6FCA3204278
C131>I<EB03FE90381FFFC0017F13F03901F80FFC3903C001FE48486C7E000EC7EA7F80
48EC3FC0ED1FE04815F00030140F007015F800601407126CB415FC7F7F1503A46C481307
6CC7FCC8FC16F8A2150F16F0151F16E0A2ED3FC0ED7F8016005D5D4A5A4A5A4A5A5D4A5A
4A5A4AC7FC147C5C5C495A495A495A49C7120C131E5B013814185B5B485A4848143848C8
1230000E1570001FB612F0A25A5AB712E0A326427BC131>I<49B4FC010F13E0013F13FC
9038FE01FE3A01F0007F80D803C0EB3FC048C7EA1FE0120EED0FF0EA0FE0486C14F8A215
077F5BA26C48130FEA03C0C813F0A3ED1FE0A2ED3FC01680ED7F0015FE4A5AEC03F0EC1F
C0D90FFFC7FC15F090380001FCEC007FED3F80ED1FC0ED0FE016F0ED07F816FC150316FE
A2150116FFA3121EEA7F80487EA416FE491303A2007EC713FC00701407003015F8003814
0F6C15F06CEC1FE06C6CEB3FC0D803E0EB7F803A01FE01FE0039007FFFF8010F13E00101
90C7FC28447CC131>I<ED0380A21507150FA2151F153FA2157F15FFA25CEC03BF153F14
071406140C141C141814301470146014C013011480EB03005B13065B131C13185B137013
6013E0485A5B120390C7FC1206120E120C5A123812305A12E0B812C0A3C8383F8000ADED
FFE0027FEBFFC0A32A437DC231>I<000615C0D807C0130701FCEB7F8090B612005D5D5D
15E0158026063FFCC7FC90C9FCAE14FF010713C090381F01F090383800FC01F0137ED807
C07F49EB1F8016C090C7120F000615E0C8EA07F0A316F81503A216FCA5123E127F487EA4
16F890C712075A006015F0A20070140F003015E00038EC1FC07E001EEC3F806CEC7F006C
6C13FE6C6C485A3901F807F039007FFFE0011F90C7FCEB07F826447BC131>I<EC07FCEC
3FFF91B512C0903903FC03E0903907E000F0D91FC0133849C71258017EEB01FC01FE1303
491307485A485AA24848EB03F8000FEC01F092C7FC485AA3485AA3127FA29038007F8090
3801FFF090380780FC39FF0E003E49EB1F8049EB0FC049EB07E0136001E0EB03F04914F8
150116FC5BED00FEA390C812FFA47EA57F123FA216FE121F15016D14FC120FED03F86C7E
ED07F06C6C14E06C6CEB0FC06C6CEB1F80017EEB3F0090383F80FE90380FFFF8010313E0
0100138028447CC131>I<121CA2EA1F8090B712C0A3481680A217005E0038C8120C0030
151C00705D0060153016705E5E4814014B5A4BC7FCC81206150E5D151815385D156015E0
4A5AA24A5A140792C8FC5CA25C141E143EA2147E147CA214FCA21301A3495AA41307A613
0FAA6D5AEB01C02A457BC231>I<14FF010713E0011F13F890387F00FE01FC133FD801F0
EB1F804848EB0FC049EB07E00007EC03F048481301A290C713F8481400A47FA26D130116
F07F6C6CEB03E013FC6C6CEB07C09039FF800F806C9038C01F006CEBF03EECF87839007F
FEF090383FFFC07F01077F6D13F8497F90381E7FFFD97C1F1380496C13C02601E00313E0
48486C13F000079038007FF84848EB3FFC48C7120F003EEC07FE150148140016FF167F48
153FA2161FA56C151E007C153EA2007E153C003E157C6C15F86DEB01F06C6CEB03E06C6C
EB07C0D803F8EB1F80C6B4EBFF0090383FFFFC010F13F00101138028447CC131>I<14FF
010713E0011F13F890387F80FC9038FC007E48487F4848EB1F804848EB0FC0000FEC07E0
485AED03F0485A16F8007F140190C713FCA25AA216FE1500A516FFA46C5CA36C7E5D121F
7F000F5C6C6C1306150E6C6C5B6C6C5BD8007C5B90383F01E090390FFF80FE903801FE00
90C8FC150116FCA4ED03F8A216F0D80F801307486C14E0486C130F16C0ED1F80A249EB3F
0049137E001EC75A001C495A000F495A3907E01FE06CB51280C649C7FCEB1FF028447CC1
31>I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E00C7FCB3A5121EEA7F80A2EAFFC0A4EA7F
80A2EA1E000A2B78AA1B>I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E00C7FCB3A5121E12
7FEAFF80A213C0A4127F121E1200A512011380A3120313005A1206120E120C121C5A5A12
600A3E78AA1B>I<007FBAFCBB1280A26C1900CEFCB0007FBAFCBB1280A26C190041187B
A44C>61 D<16C04B7EA34B7EA34B7EA34B7EA3ED19FEA3ED30FFA203707FED607FA203E0
7FEDC03FA2020180ED801FA2DA03007F160FA20206801607A24A6D7EA34A6D7EA34A6D7E
A20270810260147FA202E08191B7FCA249820280C7121FA249C87F170FA20106821707A2
496F7EA3496F7EA3496F7EA201788313F8486C83D80FFF03037FB500E0027FEBFFC0A342
477DC649>65 D<B8FC17E017FC00019039C00003FF6C6C4801007FEF3FC0717E717E717E
84170384170184A760A21703601707604D5A4D5AEF7FC04DC7FCEE03FEEE3FF091B65A17
FC0280C7B47EEF1FC0EF0FF0717E717E717E717E1980187F19C0A2183F19E0A8F07FC0A2
198018FF4D1300A24D5AEF0FFC4D5AEF7FE048486C903803FFC0B9C7FC17FC17C03B447C
C345>I<DB0FFE146092B500C013E0020314F0913A0FFC01FC0191393FC0003E02FFC7EA
0F83D903FCEC03C74948EC01E74948EC00FF4948157F4948153F4948151F49C9120F485A
491607120348481603A248481601A248481600A2123FA2491760127FA31900485AAE6C7E
A21960A2123F7FA2001F18E07F000F18C0A26C6C160119806C6C160312016DEE07006C6C
16066D6C150E6D6C5D6D6C5D6D6C15786D6C5D6D6C4A5AD900FFEC0780DA3FC0011FC7FC
DA0FFC13FC0203B512F0020014C0DB0FFEC8FC3B487BC546>I<B8FC17F017FC00019039
C00007FF6C499038007FC0017FED1FE0EF07F0EF03FC717E717E84727E727E727EA2727E
85180385A2180185A38584A31A80AD1A00A36061A361180361180761180F614E5A183F61
4EC7FC18FEEF03FC4D5AEF1FE001FFED7FC0486DD907FFC8FCB812FC17F094C9FC41447C
C34B>I<B912F8A3000101C0C7127F6C6C48EC07FC17011700187C183C181CA284A31806
A4180704067FA395C7FCA4160EA2161E163E16FE91B5FCA3EC8000163E161E160EA21606
A319C0A3F0018093C7FCA41803A21900A260A260A2181EA2183E187EEF01FE170748486C
147FB95AA33A447CC342>I<B912F0A3000101C0C7127F6C6C48EC0FF817031701170018
781838A2181CA3180CA4180E1806160CA21800A5161CA2163C167CED01FC91B5FCA3EC80
01ED007C163C161CA2160CA793C8FCB08048487EB612F8A337447CC340>I<DB0FFE1460
92B500C013E0020314F0913A0FFC01FC0191393FC0003E02FFC7EA0F83D903FCEC03C749
48EC01E74948EC00FF4948157F4948153F4948151F49C9120F485A491607120348481603
A248481601A248481600A2123FA2491760127FA396C7FC485AAD4CB612C06C7EA293C738
7FF000725A003F171F7FA2121F7F120FA26C7EA26C7E6C7EA26C7E6D7E6D6C153F6D7E6D
6C157F6D6C15E7D903FEEC01C7D900FFEC0383DA3FE0EB0F01DA0FFCEBFE000203B500F8
1360020002E090C7FCDB0FFEC9FC42487BC54D>I<B6D8C003B6FCA3000101E0C7000713
8026007F80913801FE00B3A991B7FCA30280C71201B3AC2601FFE0913807FF80B6D8C003
B6FCA340447CC349>I<B612F0A3C6EBF0006D5A6D5AB3B3B3A4497E497EB612F0A31C44
7DC323>I<010FB512FEA3D9000313806E130080B3B3AB123F487E487EA44A5A13801300
006C495A00705C6C13076C5C6C495A6CEB1F802603E07FC7FC3800FFFCEB1FE027467BC3
32>I<B600C049B512C0A3000101E0C8387FFC006C49ED3FE06D481680063EC7FC183C18
3860604D5A4D5A4DC8FC171E17385F5F4C5A4C5A4CC9FC160E5E5E5E5E4B5A4B7E4B7E15
0F4B7E4B7E1577EDE3FE913881C1FFEC8381DA87007F028E6D7E149C02B86D7E02F06D7E
14C04A6D7E707EA2707E707EA2707F717EA2717E717EA2717E717EA2717E717EA2717F85
85496C82486D4A13FCB600C0011FEBFFE0A343447CC34C>I<B612F8A3000101E0C9FC6C
6C5A5CB3B31830A418701860A518E0A3EF01C0A217031707A2170F173F177FEE01FF4848
6C011F1380B9FCA334447CC33D>I<B56C933807FFFC6E5EA20001F1FE0026006FE0EE1B
F8A3D967F01633A2D963F81663A3D961FC16C3A3D960FEED0183A2027FED0303A36E6C14
06A36E6C140CA26E6C1418A36E6C1430A36E6C1460A26E6C14C0A36E6CEB0180A3037FEB
0300A292383F8006A36F6C5AA36F6C5AA26F6C5AA36F6C5AA36F6C5AA26FB45AA370C7FC
13F0A2486C143ED80FFFEF0FFEB500F0011C0107B512FCA34E447BC359>I<B56C020FB5
FC8080C6040013F06D6CED1F80D96FF8ED0F00A2D967FC1506EB63FEA2EB61FF01607FA2
6E7E6E7EA26E7E6E7EA26E7E6E7EA26E7E6E7FA26F7E6F7EA26F7E6F7EA26F7E6F7EA26F
7E6F1380A2EE7FC0EE3FE0A2EE1FF0EE0FF8A2EE07FCEE03FEA2EE01FF701386A2EF7FC6
EF3FE6A2EF1FF6EF0FFEA217071703A217011700A201F0167E183E487ED80FFF161EB500
F0150EA2180640447CC349>I<ED1FFC4AB512C0913907F007F091391F8000FC027EC712
3FD901F8EC0FC049486E7E49486E7E49486E7E49486E7E49C9127E017E8201FE83484870
7E4848707EA24848707EA2000F84491603001F84A24848707EA3007F84A24982A300FF19
80AD6C6C4C1300A4003F606D1603A2001F60A26C6C4C5AA26C6C4C5AA20003606D161F6C
6C4C5A000060017F4CC7FC6E5D013F5E6D6C4A5AD907E0EC03F06D6C4A5AD901FCEC1FC0
D9007E4AC8FCDA1F8013FC913907F007F00201B512C09126001FFCC9FC41487BC54C>I<
B712FCEEFFC017F800019039C0000FFC6C6C48EB01FF9338007F80EF1FE0170FEF07F018
F8EF03FCA218FE1701A218FFA718FEA2170318FCA2EF07F818F0EF0FE0EF1FC0EF7F8093
3801FE00EE0FFC91B612F017800280C9FCB3AA3801FFE0B612C0A338447CC342>I<B712
E016FF17C000019039C0003FF86C6C48EB03FCEE00FF717E717E717E717E717EA2841703
84A760A21707604D5AA24D5A4D5A4DC8FCEE01FEEE07F8EE3FE091B6C9FC16FC91398000
7F80EE0FE0707EEE03FC707E160083717EA2717EA784A71A6084171FA21AE0716C13C026
01FFE002071301B600C01680943801FC03943900FE0700CBEA3FFEF007F843467CC348>
82 D<49B41303010FEBE007013F13F89039FE00FE0FD801F8131FD807E0EB079F49EB03
DF48486DB4FC48C8FC4881003E81127E82127C00FC81A282A37E82A27EA26C6C91C7FC7F
7FEA3FF813FE381FFFE06C13FE6CEBFFE06C14FC6C14FF6C15C0013F14F0010F80010180
D9001F7F14019138001FFF03031380816F13C0167F163F161F17E000C0150FA31607A37E
A36C16C0160F7E17806C151F6C16006C5D6D147ED8FBC05CD8F9F0495AD8F07C495A9039
3FC00FE0D8E00FB51280010149C7FC39C0003FF02B487BC536>I<003FB912F8A3903BF0
001FF8001F01806D481303003EC7150048187C0078183CA20070181CA30060180CA54818
06A5C81600B3B3A54B7EED7FFE49B77EA33F447DC346>I<B600C0010FB5FCA3000101E0
C813F026007F80ED1F80F00F00A21806B3B3A7180E6D6C150CA2181C131F6E1518010F16
3818306D6C1570606D6C14016D6C5D6D6CEC0780027F4AC7FC6E6C131EDA1FE0137C9139
07FC03F00201B55A6E6C1380DB07FCC8FC40467CC349>I<B60107B500F890380FFFFEA3
000301E0D9001F90C813F06C0180DA0FFCED3FC091C86C48ED1F006C871C0E6D6C6E7E1C
0CA26D6C6F5DA36EDA06FF1538011F1A30A26E020E6D1470010FDB0C7F1560A26E021C7F
0107DB183F5DA2856D6CDA301F4A5AA36D6C4A6C6C49C7FCA36D6C4A6C6C1306A3DB8001
6E130E027FDA8003140CA2DBC00380023FDA00015CA203E081021F01066D5CA36E6C486E
6C5AA36E6C486E6C5AA36F48EC1FE1020360A2DBFE7015F302010160020F90C8FCA2DBFF
E015FB6E49EC07FEA36F486E5AA36FC86C5AA3031E6F5AA4030C16605F467EC364>87
D<B66C91380FFFFCA3000101F8C8000313C026007FE0923800FE0061013F17F06D6C5E80
010F5F6D6C4B5A18036D6C93C7FC6E15066D160E6D6D140C181C6E6C14186E6C5C18706E
6C146018E06E6C5C6E6C495A17036E6C91C8FC5F6E6C13066E6D5A171C92387FC0185FED
3FE06F6C5A17E06F6C5AEEF980ED07FF6F90C9FCA26F5AB3A6923807FF800203B6FCA346
447FC349>89 D<EAFFFCA4EAF000B3B3B3B3B3A2EAFFFCA40E6476CA1B>91
D<EAFFFCA4EA003CB3B3B3B3B3A2EAFFFCA40E647ECA1B>93 D<130C131E133F497EEBF3
C03801E1E03803C0F03807807848487E001E7F487F0070EB038048EB01C00040EB00801A
0E75C331>I<13C01201EA0380EA0700120E120C121C12181238123012701260A312E05A
A412CFEAFFC013E0A3127FA2123F13C0EA0F000B1D79C41B>96 D<EB07FC90383FFF8090
38F80FE03903C003F048C66C7E000E6D7ED80FC0137E486C137F6D6D7EA36F7EA26C5AEA
0380C8FCA4EC0FFF49B5FC90380FFE1FEB3FC0EBFF00EA03FC485A485A485A485A127F5B
176048C7FCA3153FA36D137F007F14EF6D9038C7E0C0003F13013A1FE00783F13B07F81E
03FF802701FFFC0113003A001FE0007C2B2E7CAC31>I<EA01FC12FFA3120712031201B3
EC03FC91380FFF8091383C07E091387001F89039FDE0007E02807F01FFEC1F8091C713C0
49EC0FE049140717F0A2EE03F8A217FCA2160117FEAB17FC1603A217F8A2EE07F0A26DEC
0FE017C06D141F01FBEC3F80D9F380EB7E00D9E1C05B9039E0F001F89039C03C07E09039
801FFF80C7D803FCC7FC2F467DC436>I<EC7F80903803FFF090380FC07C90383F000F01
FCEB03804848EB01C00003140F4848EB1FE049133F120F485AA2485AED1FC0007FEC0700
92C7FCA290C9FC5AAB7E7FA2123F16307F001F15706C6C146016E06C6C14C06C6C130100
01EC03806C6CEB0700013F131E90381FC078903807FFF001001380242E7DAC2B>I<167F
ED3FFFA315018182B3EC7F80903803FFF090380FC07C90383F000E017E1307496D5AD803
F87F48487F5B000F81485AA2485AA2127FA290C8FC5AAB7E7FA2123FA26C7EA2000F5D7F
6C6C5B00035C6C6C9038077F806C6C010E13C0013F011C13FE90380FC0F8903803FFE090
26007F0013002F467DC436>I<EB01FE903807FFC090381F03F090387E00FC49137E4848
7F485A4848EB1F80000F15C049130F121F484814E01507A2007F15F090C7FCA25AA390B6
FCA290C9FCA67EA27FA2123F16306C7E1670000F15606D14E06C6C14C0000314016C6CEB
03806C6CEB0700013E131E90381F80F8903803FFE0010090C7FC242E7DAC2B>I<EC0FE0
EC7FF8903801F81E903803F03F90390FE07F8090381FC0FF5C133F495AA2ED7F0001FE13
1C92C7FCAFB67EA3C648C8FCB3B2486C7E007F13FFA321467EC51E>I<EE0F80D901FCEB
7FE0903A0FFF81F0F090393F07E3819039FC01FF033A01F800FE014848017E13E0000702
7FC7FC497F000F8149131F001F81A9000F5D6D133F000792C7FC6D5B0003147E6C6C5B6D
485A3903BF07E090380FFF80260701FCC8FC90CAFCA25AA37F6C7E7F90B512F86C14FF16
E06C15F86C6C8048B67E3A07C0000FFF48481300003FC8EA3F80003E151F48ED0FC0A248
1507A56C150F007C1680007E151F003E16006C153E6C6C5CD807E0495AD801F8EB07E0D8
007FEB3F8090261FFFFEC7FC010113E02C427DAC31>I<EA01FC12FFA3120712031201B3
EC01FE913807FFC091381E07F091383801F802707FECE000D9FDC07F5C01FF147F91C7FC
A25BA35BB3A8486CECFF80B5D8F83F13FEA32F457DC436>I<EA01E0EA07F8A2487EA46C
5AA2EA01E0C8FCADEA01FC12FFA3120712031201B3B0487EB512F8A315437DC21C>I<14
3C14FFA2491380A46D1300A2143C91C7FCADEC7F80EB3FFFA31300147F143FB3B3AA123E
127F39FF807F00A2147EA25C6C485A383C01F06C485A3807FF80D801FEC7FC195785C21E
>I<EA01FC12FFA3120712031201B3A292381FFFE0A36F1300ED07F816E05E5E030EC7FC
5D5D5D5D4A5A4A5A4AC8FC5CEC3F804A7E14FF9038FDCFE09038FF8FF01407496C7E01FC
7F14016E7E81816F7E82151F6F7E821507826F7E8282486C491380B5D8F81F13F8A32D45
7DC433>I<EA01FC12FFA3120712031201B3B3B3A5487EB512F8A315457DC41C>I<D801FC
01FFEC1FE000FF010701E0EBFFFC913B0F03F801E07F913C3C01FC07803F800007903C70
00FE0E001FC0000349D97E1C130F2601FDC0D97F38804A143001FFDA3FF06D7E91C75BA2
495DA3495DB3A8486C4A6C497EB5D8F81FB50003B512E0A34B2C7DAB52>I<3901FC01FE
00FF903807FFC091381E07F091383801F8000701707F0003EBE0002601FDC07F5C01FF14
7F91C7FCA25BA35BB3A8486CECFF80B5D8F83F13FEA32F2C7DAB36>I<EC7F80903803FF
F090380FC0FC90383E001F496D7E496D7E48486D7E48486D7E48486D7E000F81A2484814
7E003F157FA290C87E481680A44816C0AA6C1680A26D147F003F1600A2001F157E6D14FE
000F5D6D130100075D6C6C495A6C6C495A6C6C495A013E49C7FC90381FC0FE903807FFF8
9038007F802A2E7DAC31>I<3901FC03FC00FF90380FFF8091383C07E091387001F83A07
FDE000FE00010180137F01FFEC3F8091C7EA1FC04915E049140F17F0160717F8160317FC
A3EE01FEABEE03FCA3EE07F8A217F0160F6D15E0EE1FC06D143F17806EEB7E00D9FDC05B
9039FCF003F891383C0FE091381FFF80DA03FCC7FC91C9FCAE487EB512F8A32F3F7DAB36
>I<91387F8003903903FFE00790380FE07890393F801C0F90387E000E496D5AD803F8EB
039F0007EC01BF4914FF48487F121F5B003F81A2485AA348C8FCAB6C7EA3123F7F121F6D
5C120F6D5B12076C6C5B6C6C497E6C6C130E013F131C90380FC0F8903803FFE09038007F
0091C7FCAEEEFF80033F13FEA32F3F7DAB33>I<3903F803F000FFEB1FFCEC3C3EEC707F
0007EBE0FF3803F9C000015B13FBEC007E153C01FF13005BA45BB3A748B4FCB512FEA320
2C7DAB26>I<90383FE0183901FFFC383907E01F78390F0003F8001E1301481300007C14
78127800F81438A21518A27EA27E6C6C13006C7E13FC383FFFE06C13FC6C13FF6C14C06C
14E0C614F0011F13F81300EC0FFC140300C0EB01FE1400157E7E153EA27EA36C143C6C14
7C15786C14F86CEB01F039F38003E039F1F00F8039E07FFE0038C00FF01F2E7DAC26>I<
1306A5130EA4131EA3133E137EA213FE12011207001FB512F0B6FCA2C648C7FCB3A4150C
AA017E131C017F1318A26D133890381F8030ECC070903807E0E0903801FFC09038007F00
1E3E7EBC26>I<D801FC147F00FFEC3FFFA300071401000380000181B3A85EA35DA21200
6D5B017E9038077F80017F010E13C06D011C13FE90380FC078903803FFF09026007F8013
002F2D7DAB36>I<B539F001FFFCA3000790C7EA7FE06C48EC1F8000011600160E120016
0C017F5CA280013F5CA26E1370011F146080010F5CA2ECF00101075CA26D6C48C7FCA26E
5A01011306A26D6C5AA214FF6E5AA215B8EC3FB015F06E5AA36E5AA26E5AA36EC8FC2E2C
7EAA33>I<B500E0B539E03FFF80A30007903C000FFE000FFC00D803FCD903F8EB03F8F0
01E0120103015D6D80000060A26D6E13036DD9037E91C7FCA20280017F5B013FD9063F13
06A2D91FC06E5AED0C1FA2D90FE06E5AED180FA2D907F06E5AED3007A2D903F86E5AED60
03A2902601FCE06D5AEDC00117FCD900FFECFD80ED800017FF027F92C8FC92C77EA26E14
7E023E143EA2021E143C021C141CA2412C7EAA46>I<B539F007FFFCA30003D9C00113C0
C6496C1300017F14FC013F5C6E13E06D7E010F495A6D6C485A02F890C7FC903803FC0601
01130E6E5A903800FF186E5AEC3FF05D141F140F6E7E81140FEC0DFCEC19FEEC38FF4A7E
9138603F8002C07F0101131F49486C7E02007F01066D7E010E1303496D7E013C80017C80
D801FC1580D80FFE4913C0B5D8800F13FFA3302B7FAA33>I<B539F001FFFCA3000790C7
EA7FE06C48EC1F8000011600160E0000150C6D141C6D1418A26E1338013F1430A26D6C5B
A26E13E0010F5CA26D6C485AA2ECF803010391C7FCA2903801FC06A2ECFE0E0100130CA2
EC7F18A215B8EC3FB0A2EC1FE0A36E5AA26E5AA36EC8FCA21406A35CA25CA2123C007E5B
B4FC5CA25CEAFE01387C0380D87007C9FCEA3C1EEA0FFCEA03F02E3F7EAA33>I<003FB6
12E0A29038C0003F90C713C0003CEC7F800038ECFF00A20030495A0070495AA24A5A0060
495AA24A5A4A5AA2C7485A4AC7FC5B5C495A13075C495A131F4A1360495A495AA249C712
C0485AA2485A485A1501485A48481303A24848EB07804848131F00FF14FF90B6FCA2232B
7DAA2B>I<B9FCA23002809B31>I<01F81302D803FE13073907FF800E48EBE01C391F1FF8
F8393807FFF0D8700113E039E0007FC00040EB1F00200978C131>126
D E /Fp 34 122 df<EC03C01407141F147FEB03FF133FB6FCA413C3EA0003B3B3ADB712
FCA5264177C038>49 D<ECFFE0010F13FE013F6D7E90B612E0000315F82607FC0313FE3A
0FE0007FFFD81F806D138048C7000F13C0488001C015E001F07F00FF6E13F07F17F881A4
6C5A6C5A6C5AC9FC17F05DA217E05D17C04B13804B1300A2ED1FFC4B5A5E4B5A4B5A4A90
C7FC4A5A4A5AEC0FF04A5AEC3F804AC7127814FE495A494814F8D907E014F0495A495A49
C8FC017C140149140348B7FC4816E05A5A5A5A5AB8FC17C0A42D417BC038>I<ECFFF001
0713FF011F14C0017F14F049C66C7ED803F8EB3FFED807E06D7E81D80FF86D138013FE00
1F16C07FA66C5A6C4815806C485BC814005D5E4B5A4B5A4B5A4A5B020F1380902607FFFE
C7FC15F815FF16C090C713F0ED3FFCED0FFEEEFF80816F13C017E0A26F13F0A217F8A3EA
0FC0EA3FF0487EA2487EA217F0A25D17E06C5A494913C05BD83F80491380D81FF0491300
D80FFEEBFFFE6CB612F800015D6C6C14C0011F49C7FC010113E02D427BC038>I<163FA2
5E5E5D5DA25D5D5D5DA25D92B5FCEC01F7EC03E7140715C7EC0F87EC1F07143E147E147C
14F8EB01F0EB03E0130714C0EB0F80EB1F00133E5BA25B485A485A485A120F5B48C7FC12
3E5A12FCB91280A5C8000F90C7FCAC027FB61280A531417DC038>I<0007150301E0143F
01FFEB07FF91B6FC5E5E5E5E5E16804BC7FC5D15E092C8FC01C0C9FCAAEC3FF001C1B5FC
01C714C001DF14F09039FFE03FFC9138000FFE01FC6D7E01F06D13804915C0497F6C4815
E0C8FC6F13F0A317F8A4EA0F80EA3FE0487E12FF7FA317F05B5D6C4815E05B007EC74813
C0123E003F4A1380D81FC0491300D80FF0495AD807FEEBFFFC6CB612F0C65D013F148001
0F01FCC7FC010113C02D427BC038>I<EE1F80A24C7EA24C7EA34C7EA24B7FA34B7FA24B
7FA34B7F169F031F80161F82033F80ED3E07037E80157C8203FC804B7E02018115F08202
03814B137F0207815D173F020F814B7F021F8292C77EA24A82023E80027E82027FB7FCA2
91B87EA2498302F0C8FCA20103834A157F0107834A153FA249488284011F8491C97E4984
133E017E82B6020FB612F0A54C457CC455>65 D<DCFFF01470031F01FF14F04AB6EAE001
0207EDF803023FEDFE0791B539E001FF0F4949C7EA3F9F010701F0EC0FFF4901C0804990
C87E4948814948814948167F4849163F4849161F5A4A160F485B19074890CAFC19035A5B
A2007F1801A34994C7FC12FFAE127F7F1AF0A2123FA27F6C18011AE06C7F19036C6D17C0
6E16077E6C6DEE0F806C6DEE1F006D6C5E6D6C167E6D6C6C5D6D6D4A5A6D01F0EC07F001
0101FEEC1FE06D903AFFF001FF80023F90B6C7FC020715FC020115F0DA001F1480030001
F8C8FC44467AC451>67 D<BA1280A419C026003FFEC7121F1701EF007F183F181F180F18
0719E01803A31801A3EE01E0F000F0A419001603A31607160F167F91B6FCA59138FE007F
160F16071603A31601A693C9FCAFB712F0A53C447CC346>70 D<B712E0A5D8001F90C7FC
B3B3B3A4B712E0A523447DC32A>73 D<B76C0103B512F8A526003FFEC93807E0004F5A4F
5A077EC7FC614E5A4E5A4E5AF01F804EC8FC187E604D5AEF07F0EF0FC04D5A4DC9FC177E
4C5AEE03F04C5A4C5A4C7EEE7FF04C7E5D4B7F4B7F4B7FED3F3FDB7E1F7F03FC806E486C
7F4B7E4B6C7F0380804B6C7F4A7F717E84717F83717F85717F83717F85717F187F727E86
727F84727F86727F84B76C90B612FCA54E447CC358>75 D<DAFFE0131C010701FE133C01
3F9038FF807C90B6EAE0FC4815F9489038801FFF3907FC00014848EB007F4848143F4848
140F491407007F15035B1601160012FF177CA27FA26D153C7F7F6D92C7FC6C7EEBFFE014
FE6CEBFFF015FF6C15E016FC6C816C6F7E6C826C826C6C81011F810107811300020F8014
0003077FED007F82040F1380828212F082A282A27EA218007EA26C5D6C5E6D14036D5D6D
140701F84A5A01FFEC3FF002F8EBFFE0486CB65AD8FC1F92C7FCD8F80714FC48C614F048
0107138031467AC43E>83 D<003FBA12E0A59026FE000FEB8003D87FE09338003FF04917
1F90C71607A2007E1803007C1801A300781800A400F819F8481978A5C81700B3B3A20107
B8FCA545437CC24E>I<903801FFE0011F13FE017F6D7E48B612E03A03FE007FF84848EB
1FFC6D6D7E486C6D7EA26F7FA36F7F6C5A6C5AEA00F090C7FCA40203B5FC91B6FC130701
3F13F19038FFFC01000313E0000F1380381FFE00485A5B127F5B12FF5BA35DA26D5B6C6C
5B4B13F0D83FFE013EEBFFC03A1FFF80FC7F0007EBFFF86CECE01FC66CEB8007D90FFCC9
FC322F7DAD36>97 D<EB7FC0B5FCA512037EB1ED0FF892B57E02C314E002CF14F89139DF
C03FFC9139FF000FFE02FCEB03FF4A6D13804A15C04A6D13E05CEF7FF0A218F8173FA318
FCAC18F8A2177F18F0A3EFFFE06E15C06E5B6E491380027C491300496C495A903AFC1FC0
7FFC496CB512F0D9F00314C049C691C7FCC8EA1FF036467DC43E>I<EC3FFC49B512C001
0F14F0013F14FC90397FF003FE9039FFC001FF0003495A48494813805B120F485AA2485A
6F1300007F6E5AED00784991C7FCA212FFAC6C7EA3123F6DEC03C0A26C6C1407000F1680
6D140F6C6DEB1F006C6D133E6C01F05B3A007FFC03F86DB55A010F14C0010391C7FC9038
003FF82A2F7CAD32>I<EE03FEED07FFA5ED001F160FB1EC3FE0903803FFFC010FEBFF8F
013F14CF9039FFF807FF48EBC00148903880007F4890C7123F4848141F49140F121F485A
A3127F5BA212FFAC127FA37F123FA26C6C141FA26C6C143F0007157F6C6C91B5FC6CD9C0
0314FC6C9038F01FEF6DB5128F011FEBFE0F010713F89026007FC0EBF80036467CC43E>
I<EC3FF80103B57E010F14E0013F8090397FF83FF89039FFC007FC48496C7E48496C7E48
486D1380485A001FED7FC05B003FED3FE0A2127F5B17F0161F12FFA290B7FCA401F0C9FC
A5127FA27FA2123F17F06C7E16016C6C15E06C6C14036C6DEB07C06C6DEB0F806C01F0EB
3F0090397FFE01FE011FB55A010714F0010114C09026001FFEC7FC2C2F7DAD33>I<EDFF
80020F13E0027F13F049B512F849EB8FFC90390FFE0FFE90381FFC1F14F8133FEB7FF0A2
ED0FFCEBFFE0ED03F0ED00C01600ABB612F8A5C601E0C7FCB3B0007FEBFFE0A527467DC5
22>I<DAFFE0137E010F9039FE03FF80013FEBFF8F90B812C048D9C07F133F489038001F
F84848EB0FFC4848903907FE1F80001F9238FF0F00496D90C7FCA2003F82A8001F93C7FC
A26D5B000F5D6C6C495A6C6C495A6C9038C07FF04890B55A1680D8078F49C8FC018013E0
000F90CAFCA47F7F7F90B612C016FC6CEDFF8017E06C826C16FC7E000382000F82D81FF0
C77ED83FC014074848020113808248C9FC177FA46D15FF007F17006D5C6C6C4A5A6C6C4A
5AD80FFEEC3FF83B07FFC001FFF0000190B612C06C6C92C7FC010F14F8D9007F90C8FC32
427DAC38>I<EB7FC0B5FCA512037EB1ED07FE92383FFF8092B512E002C114F89139C7F0
3FFC9138CF801F9139DF000FFE14DE14FC4A6D7E5CA25CA35CB3A7B60083B512FEA53745
7CC43E>I<137C48B4FC4813804813C0A24813E0A56C13C0A26C13806C1300EA007C90C7
FCAAEB7FC0EA7FFFA512037EB3AFB6FCA518467CC520>I<EB7FC0B5FCA512037EB3B3B3
A3B61280A519457CC420>108 D<90277F8007FEEC0FFCB590263FFFC090387FFF8092B5
D8F001B512E002816E4880913D87F01FFC0FE03FF8913D8FC00FFE1F801FFC0003D99F00
9026FF3E007F6C019E6D013C130F02BC5D02F86D496D7EA24A5D4A5DA34A5DB3A7B60081
B60003B512FEA5572D7CAC5E>I<90397F8007FEB590383FFF8092B512E0028114F89139
87F03FFC91388F801F000390399F000FFE6C139E14BC02F86D7E5CA25CA35CB3A7B60083
B512FEA5372D7CAC3E>I<EC1FFC49B512C0010714F0011F14FC90397FF80FFF9026FFC0
017F48496C7F4848C7EA3FE000078248486E7E49140F001F82A2003F82491407007F82A4
00FF1780AA007F1700A46C6C4A5AA2001F5E6D141F000F5E6C6C4A5AA26C6C6CEBFFE06C
6D485B27007FF80F90C7FC6DB55A010F14F8010114C09026001FFCC8FC312F7DAD38>I<
90397FC00FF8B590B57E02C314E002CF14F89139DFC03FFC9139FF001FFE000301FCEB07
FF6C496D13804A15C04A6D13E05C7013F0A2EF7FF8A4EF3FFCACEF7FF8A318F017FFA24C
13E06E15C06E5B6E4913806E4913006E495A9139DFC07FFC02CFB512F002C314C002C091
C7FCED1FF092C9FCADB67EA536407DAC3E>I<90387F807FB53881FFE0028313F0028F13
F8ED8FFC91389F1FFE000313BE6C13BC14F8A214F0ED0FFC9138E007F8ED01E092C7FCA3
5CB3A5B612E0A5272D7DAC2E>114 D<90391FFC038090B51287000314FF120F381FF003
383FC00049133F48C7121F127E00FE140FA215077EA27F01E090C7FC13FE387FFFF014FF
6C14C015F06C14FC6C800003806C15806C7E010F14C0EB003F020313E0140000F0143FA2
6C141F150FA27EA26C15C06C141FA26DEB3F8001E0EB7F009038F803FE90B55A00FC5CD8
F03F13E026E007FEC7FC232F7CAD2C>I<EB01E0A51303A41307A2130FA2131FA2133F13
7F13FF1203000F90B51280B7FCA4C601E0C7FCB3A3ED01E0A9150302F013C0137F150790
393FF80F8090391FFC1F006DB5FC6D13FC01015B9038003FE023407EBE2C>I<D97FC049
B4FCB50103B5FCA50003EC000F6C81B3A85EA25EA25E7E6E491380017FD901F713FE9138
F807E76DB512C7010F1407010313FE9026007FF0EBFC00372E7CAC3E>I<B6903803FFFC
A5000101E09038003E006C163C80017F5D8017F8013F5D6E1301011F5D6E1303010F5D6E
13076D5DED800F6D92C7FC15C05E6DEBE01E163E6D143CEDF07C027F1378EDF8F8023F5B
15FD021F5B15FF6E5BA36E5BA26E90C8FCA26E5AA26E5AA21578362C7EAB3B>I<B5D8FE
1FB539801FFFF0A500019027C0003FE0C7EA7C007114786E17F86C6F6C5C6E1601017F6E
6C5CA26E011F1403013F6F5C6E013F1407011F6F5CA26E0179140F010F048090C7FC6E01
F95C6D02F0EBC01E15806D902681E07F5B18E003C3157C6D9139C03FF07815E76DDA801F
5B18F803FF14F96E9039000FFDE018FF6E486D5BA36E486D5BA26E486D90C8FCA24B7F02
075DA26E48147C4B143C4C2C7EAB51>I<B500FE90383FFFF0A5C601F0903803E0006D6C
495A013F4A5A6D6C49C7FC6E5B6D6C137E6DEB807C6D6D5A6DEBC1F0EDE3E06DEBF7C06E
B45A806E90C8FC5D6E7E6E7F6E7FA24A7F4A7F8291381F3FFCEC3E1F027C7F4A6C7E4948
6C7F01036D7F49487E02C08049486C7F49C76C7E013E6E7E017E141FB500E090B512FCA5
362C7EAB3B>I<B6903803FFFCA5000101E09038003E006C163C80017F5D8017F8013F5D
6E1301011F5D6E1303010F5D6E13076D5DED800F6D92C7FC15C05E6DEBE01E163E6D143C
EDF07C027F1378EDF8F8023F5B15FD021F5B15FF6E5BA36E5BA26E90C8FCA26E5AA26E5A
A21578A215F85D14015D001F1303D83F805B387FC007D8FFE05B140F92C9FC5C143E495A
387FC1F8EB07F06CB45A6C5B000790CAFCEA01FC36407EAB3B>I
E /Fq 17 118 df<EA03F0487EEA0FFE121F487E1480A214C0A37E7E7E7EEA001F133F14
80A2137F14005B485A1203EA0FFCEA3FF8B45A5B5B5B007EC7FC1238121F6A8D3E>44
D<EA0780EA1FE0EA3FF0EA7FF8A2EAFFFCA4EA7FF8A2EA3FF0EA1FE0EA07800E0E688D3E
>46 D<ED7FE0913803FFF8020F13FE023F6D7E91B67E49814981010F9038C03FF890391F
FE000FD93FF86D7ED97FE06D7E4A130149486D7E4890C8FC4848903803FC7F49D90FFF13
804848013F13FF5D484890B612C0495A001F5B01C0140F913807FC03003F49487E018049
6C13E04A48137F127F010049133F143F4B131F5A48137FA292C7120FA96F131FA26C013F
15C07E6F133F021F158001806D137F123F6E6CEBFF0001C06D5A001F6D6C485A913903FF
0FFC01E014FF000F6D5C6D6C5C6C6C6D5B6F5B6C6C010F90C7FC6DEB03FC6C6C90C9FC6C
6DEC0FC06D6CEC1FE06E143FD93FF814FFD91FFE130390270FFFC01F1380010390B61200
6D5D6D5D023F14F0020F14C0020391C7FC9138007FF0334B7BC93E>64
D<90380FFFC0017F13F848B512FE486E7E4815E04881823A1FFC007FFC49EB0FFE1507ED
01FFA26C486D7F6C48147FC97F163FA60203B5FC147F0103B6FC131F137F90B7FC0003EC
C03F48EBF800481380D81FFCC7FCEA3FF05B485A5B12FF90C8FCA56D147F127F6D14FF6C
6C130301F8010F7F6CB490B612F86C90B7FC18FC6C15CF000115076CDAFC0313F8013F90
38F0007F010790C9FC363679B43E>97 D<383FFF805AB57EA37E7EEA003FAEED07FC9238
3FFF8092B512E002C314F802CF8002DF8091B7FCDBF80F1380DBC00113C092C713E04A14
3F4AEC1FF04A15F84A140F4AEC07FCA217034A15FE1701A318FF83A95F18FEA280170318
FC6E140718F86E140FEF1FF06E143F6EEC7FE06EECFFC0DBC0031380EDF01F92B6120002
DF14FC02CF5C02C35CD91F8114C090260F807F90C7FC90C7EA0FF8384A7FC83E>I<9138
07FFF0023F13FE49B61280010715C04915E04915F0137F903AFFFC003FF84801E0131F48
138091C7FC485A4848EC0FF049EC07E0484891C7FC5B123F5B127F5BA312FF90CAFCA97F
127FA27F123F7F17FC6C6CEC01FE7F6C7E6C6C14036DEC07FC6C01C0130F6C01F0EB1FF8
6C01FEEBFFF06DB612E06D15C0010F15806D1500010114FC6D6C13F0020790C7FC2F3678
B43E>I<923803FFF85D4B7FA38181ED0003AEEC1FF0ECFFFE0103EBFF83010F14E34914
F3017F14FB90B7FC48EBF80F48EBC00191C7FC4848143F4848141F5B4848140F49140712
3F491403127F5BA312FF90C8FCA97F127FA216077F123F6D140FA26C6C141F6D143F000F
157F6C6C14FF01FF5B6C6D5A6CD9F01FEBFFFC6C90B500FB13FE6D02F313FF6D14E3010F
14C36D020113FE010101FC14FC9026003FE0C8FC384A7CC83E>I<EC1FF891B57E010314
E0010F14F84980017F8090B7FC48D9F80F1380DAC00113C048496C13E04848C7123F4848
EC1FF049140F484815F81607484815FCA248481403A24915FEA200FF1501A290B7FCA517
FCA290CAFC7FA2127FA27F123F6D15FCA26C6CEC01FE7F6C6C14036C6C14076DEC0FFC6C
6D131F6C01E0EB7FF86C9039FC03FFF06DB612E06D15C06D158001071500010114FC6D6C
13E0020790C7FC2F3679B43E>I<923801FFC0030F13F0033F13FC92B512FE5C4A14FF5C
4A1303EC1FF89238F001FEEC3FE09238C000FC027F14005DAA003FB712F05AB812F8A36C
16F0A2C7D87F80C7FCB3B3003FB7FCA2481680A36C1600A2304A7CC93E>I<143E147F4A
7E497FA56D5B6EC8FC143E91C9FCAC003FB57E5A81A47EC7123FB3B3007FB71280B812C0
A56C16802A4A76C93E>105 D<007FB512C0B6FC81A47EC7121FB3B3B3A5007FB712F8B8
12FCA56C16F82E4978C83E>108 D<ED07FC3B3FFF803FFF804891B512E0B500C38002C7
8002CF806C01DF806C9038FFF80FD8003F9038C003FFED00014A7F4A815C177F5CA25CA3
5CB3A8003FB5D8C07FB51280486EB612C0B66C15E0A36C4A15C06C4A6C14803B347FB33E
>110 D<EC1FF0ECFFFE01036D7E010F14E04980017F14FC90B67E489038F01FFFECC007
48D90001138048486D13C04848EC7FE049143F4848EC1FF049140F003F16F8491407A248
48EC03FCA448C8EA01FEAA6D1403007F16FCA26D1407A2003F16F86D140F6C6CEC1FF0A2
6C6CEC3FE06D147F6C6CECFFC06D5B6CD9C00713806CD9F01F13006C90B55A6D5C6D5C01
0F14E001031480010049C7FCEC1FF02F3679B43E>I<EE07FE263FFFF890387FFFC0484A
B512E0B5D8FC0714F05D4B14F86C5C6C91387FFC0FD80003EBFFC002FD90380007F0DAFF
FEEB03E003F890C7FC5D5DA25D5DA292C9FCA25CA45CB3A3003FB612FC4881B7FCA37E6C
5D35347CB33E>114 D<903901FFF00F011F9038FE1F8090B612BF000315FF5A5A5A393F
FE003F01F01307D87FC0130190C8FC5A48157FA47EEE3F00D87FC091C7FC13F0EA3FFE38
1FFFF06CEBFFC06C14FE6C6E7EC615E0013F14F8010780D9003F7F02007F030713800300
13C0003EED3FE0007F151F48150F17F06D1407A37FA26D140F6D15E0161F01FCEC3FC06D
14FF9026FFC00F138091B612005E485D013F5C6D14E0D8FC0714802778007FF8C7FC2C36
77B43E>I<147C14FC497EAD003FB712FC5AB87EA36C5EA2260001FEC9FCB3A6173FA2EF
7F80A76E14FF6D16006F5A9238C007FE91387FF01F92B55A6E5C6E5C6E5C6E1480020149
C7FC9138003FF031437DC13E>I<263FFF80EB7FFF4892B5FCB56C4880A36C806C81D800
3FEC007FB3AC17FFA25E5E80011F140F6E5B02FE90B612806DB812C06D17E083010114FE
6DDAF83F13C0023F01E01480020790C9FC3B347FB23E>I E /Fr
2 104 df<EE1FE0ED01FF150F92383FF800EDFFC04A90C7FC4A5A4A5A4A5A4A5A5DA214
3F5DB3B1147F5D14FF92C8FC5B495A495A495AEB3FE0EBFF80D87FFEC9FCEAFFF8A2EA7F
FEC66C7EEB3FE0EB0FF86D7E6D7E6D7E7F81147F81143FB3B181141FA2816E7E6E7E6E7E
6E7E6E13C0ED3FF892380FFFE01501ED001F2B7878D93C>102 D<B4FC13F813FF000313
C038007FF0EB1FF8EB07FC6D7E6D7E6D7F147FA281143FB3B181141F81140F816E7E6E7E
6E7E6E6C7EED3FF092380FFFC0030113E0A2030F13C092383FF000ED7F804A48C7FC4A5A
4A5A4A5A5D141F5D143F5DB3B1147F5DA214FF4990C8FC495A495AEB1FF8EB7FF03803FF
C0B5C9FC13F890CAFC2B7878D93C>I E /Fs 38 122 df<133E13FF4813805A14C05AA4
7E1480EA00FB130313071400A25B130E131EA25BA25B137013F0485A5B1203485A48C7FC
121E5A5A5A12601223788B24>44 D<EA07C0EA1FF0123FEA7FF8A312FF13F0A2EA7FE013
C0EA1F000D0C738B24>46 D<16FF030713E0033F13F892387F01FC913901FC00FEDA03F0
133FDA0FE0EB1F804A5A4A48EB0FC092C7FC027E15E05C01011507495AA2494815F0A249
48140F131FA2495AA2137F5C171F13FF91C813E05AA249153F1203A218C049157F1207A3
4848EDFF80A448484A1300A448484A5AA35F491407127FA24C5AA2495DA2161F5F12FF90
C8485AA25F167F94C7FC6C5D5E15015E4B5A5E6C14074B5A6D495A001F4A5A6D49C8FC6C
6C13FE3907F003F83903FC0FF06CB512C06C6C90C9FCEB0FF0345173CE3C>48
D<EE7FC0923803FFF8030F13FE92393F807F809239FC001FC0DA03F0EB07E04A4814F0DA
0F8013034AC7EA01F8143E4A15FC4A14005C1301ECE060010301F0130114C001071370EC
8078A21703010F017014F8140015F06D6C48EB07F01481DAC7C0EB0FE06DB45A6D48C7EA
1FC0D900F8EC3F8091C8FCEF7F0017FE4C5AEE07F8EE0FE0EE7FC00203B5C7FC16FC4A13
F08291380001FEED007F707E707EA2707EA283A8161FA2121FEA7F80163F00FF5EA390C8
485A5A00F04B5AA24B90C7FC5E6C4A5A4B5A00784A5A007C4A5A6C4A5A6C02FFC8FC6C6C
485A3907F00FF86CB512E0C691C9FCEB1FF0365175CE3C>51 D<EF0780EF0FC0171FA217
3F1880A3177F1800A317FEA316015FA24C5AA34C5AA34C5AA24C5AA25F163FA24CC7FCA2
16FEA25E15015E15035E15075E4B5A151F5E153F93C8FC157EA25D913901F801C0EE07E0
EC03F0913807E00F15C0140F91381F801FDA3F005B143E147E4A133F49485C495A495A49
48137F494891C7FC91C7FC133E495C48485C485A3807FFF048EBFF01003FECC1FC4814F9
39FF000FFF00F80101EC078048D9003FB512C00060140FC8000314004B13F004F0C7FCA3
150F5EA3151F5EA3153F5EA3157F93C8FCA3157E153C32667BCE3C>I<0206150EDA0780
143EDA0FE0EB01FC03FEEB1FF892B612F018E04A1580EFFE005F17F04A148091263C3FFC
C7FC92C9FCA2147C1478A314F85CA313015CA313035CA2ED1FE0903907C1FFF8028713FE
91399FC03F809139BE001FC0D90FF8130F4A804A6D7E148049C76C7E131EA290C87FA716
07A4160F5FA2EA0F80D83FC0141F6D5D127FA2494A5A12FF494A5A90C8FC00F05E16FF4B
90C7FC6C5D4B5A00781407007C5D4B5A6C4A5A003FEC7FC06C6C49C8FC9038C003FE390F
F00FF86CB55A000114C06C6C48C9FCEB1FF0375174CE3C>I<EE7F80923807FFF0031F13
FC92387F80FE913901FC003F4A48EB1F804A48EB0FC04A5ADA3FC0EB07E04A5A4AC7FC49
4815F05C01031503495A010F15075C011F16F8A2495AA2137F5C170FA201FF16F05C171F
A25A91C8FC173FA218E049157FA217FF18C05E12005E4C1380017E1406017F140E6D141D
6E01391300011F147190390FC001E1903A07E007C3FE6DB512036D13FE903A007FF007FC
91C7FC5F160F5F161F5FA24C5A5F167F4CC7FC5E1501D81F805C003F4A5A486C495A00FF
4A5A4B5A49133F90C7485A4802FEC8FC00F8495A4A5A007CEB0FF0397F807FC06CB5C9FC
6C13FC000713F0C61380355174CE3C>57 D<EB01F0EB07F8EB0FFC131FA2133FA314F8A2
EB1FE0EB078090C7FCB3A9EA07C0EA1FF0123F487EA312FF5BA26C5A5B001FC7FC163373
B224>I<F001E01803851807A2180F181FA2183FA2187FA218FFA25F5F18DFEF079F85EF
0F1F180F171E173E173C177C177817F0A2EE01E0160317C016071780DC0F007FA2161E18
075E167C16785EA24B5AA24B5A15075E150F93C7FC031E81A24B1403A25D92B7FCA25CA2
DA03C0C71203A24A5A140F92C8FC141E855C845C14F85C13015C495A13075C130F131F13
3F017F84496C5D00076D030F7FB500FE0203B61280A24A5CA2495579D457>65
D<020FB712FEF1FFC04A17F01AFC9126000FFCC7EA0FFE6F48EC03FF731380030F81F27F
C04C16E01A3F151F1BF05E1A1F153FA24C153FA2157F1BE05E1A7F03FF17C01AFF93C913
80614A18004F5A4B15074F5A02034C5A4F5A4BED7FC04F5A0207030390C7FCF00FFC4BEC
7FF092B712805C19F003F0C7EA0FFCF003FE021FED00FF737E4B82737E143F737E5D8614
7F190F5DA214FF191F92C9FCA25B624A163FA2010360197F4A5F19FF01074C5BA24A4B90
C7FC4E5A010F4C5A4E5A4A4B5A4E5A011F4B485A05075B017FDB3FFEC8FCB912F818E018
8005F8C9FC4C5277D152>I<DD1FF814384CB51478040F02C01370047F02F013F0923B01
FFF803F8010307903980007E03DB0FFCC7383F07E0DB3FF0141FDB7FC0EC0F8F4A4848EC
07DF4A48C83803FFC04A5A4A4881EC3FF0DA7FC06F13804A5A5B92CA127F49481800495A
495A131F4A177E495A137F5C01FF187C485BA24890CBFC1A78485AA2485A97C7FC121F5B
A2123F5BA3127F5BA312FF5BA65B191EA3193E193CA2197C197819F8007F606D16016118
03003F4D5A6D5F180F6C6C4CC8FC183E6C6C5E00075F6D4B5A6C6C4B5A6C6C4B5A6C6D4A
5A6D6C023FC9FC6D6C14FCD91FFCEB03F8903A0FFF801FE0010390B5128001004ACAFC02
1F13F8020313804D566ED354>I<020FB712FEF1FFE04A17F8869126000FFEC7EA1FFF6F
4802037F07007F030FEE3FE0747E4C150F747E031F707EA24C6F7EA2033F83865EA2037F
EF7F80A25EA215FF1CC05EA25CA293CAFCA24A18FFA25D1C801407A24B5EA2140F1C004B
5EA2141F634B1607A2023F601A0F5D63027F171F635D505A14FF505A5D505A4996C7FC61
92C95B4F5A491707624A4C5A4F5A01074D5A4F5A4A4CC8FC4E5A010F4C5AF00FF84A4B5A
F07FC0011F4B485ADD07FEC9FC017FED7FFCB912F018C04DCAFC17E0525278D158>I<02
0FB912FCA25CA29126000FFEC712016F48EC001F1A0F030FEE03F8A24C1501A2151F1A00
5EA2033F17F0A25EA2157FA24C1501A203FFDA07C013E019805EA24A030F90C7FC96C8FC
93C7FC605C183E5D187E020715FEEF07FC92B6FCA25C609238F8000F1703021F1401605D
A2143F605DA2027F0203141F4E131E5D1A3E02FF91C8123CA24B167C1A784918F86292C9
1201A2494D5AA24A4C5AA20107170F624A161F193F010F4DC7FC614A4B5A1803011F160F
F07FFC017FED07FFBA5AA3614E5278D14F>I<020FB612C0A24A1580A2DA000F90C7FC6F
5A5E150FA25EA2151FA25EA2153FA25EA2157FA25EA215FFA25EA25CA293C8FCA25CA25D
A21407A25DA2140FA25DA2141FA25DA2143FA25DA2147FA25DA214FFA25DA25BA292C9FC
A25BA25CA21307A25CA2130FA25CA2131FA2137FB612FCA4325278D12D>73
D<020FB612F0A4DA000F0180C8FC6F48C9FC5E150FA25EA2151FA25EA2153FA25EA2157F
A25EA215FFA25EA25CA293CAFCA25CA25DA21407A25DA2140FA25DA2141FA25DA2143FA2
5DA2027FEE0F801A005D6102FF161EA24B153E193C49177CA292C9127819F85B4E5A5C18
0301074C5AA24A4B5A181F010F163F4E5A4A15FF1703011F4B90C7FC173F017F4AB5FC00
7FB85AB9FCA260415278D149>76 D<DC07FCEB038093393FFF800793B500E013000303EC
F80F923A0FF807FC1F923A3FC000FE3F4B48EB3F3E03FEC7EA1F7E4A48EC0FFE4A5A4A48
6E5A4A5A18034A5A4A485DA24AC81201A24A5E5CA301015FA3180361A295C8FC80A28181
816D13F815FF16E06E13FE6EEBFFC017F86E80020714FF6E81020081031F801501DB003F
7F16071600EF3FF8171FA2170FA21707A4D803C01503A217071207605BA2000F160F60A2
4D5A487E4D5AA24DC8FC486C157E17FE6D4A5A6D4A5A007F4B5A01FE4A5AD87E7FEC3FC0
267C3FC0495A28F81FF803FEC9FC0107B55AD8F00114F0486C6C138048D907FCCAFC4156
77D342>83 D<90BB1280A25AA29129F0001FF8000F13004890C749130101FC023F804984
48484B805B49027F153E120F495DA248C812FFA2001E4C143C123E5D123C007C93C8FC00
78197C4B167812F8485DA21507C894C7FC5EA2150FA25EA2151FA25EA2153FA25EA2157F
A25EA215FFA25EA25CA293CBFCA25CA25DA21407A25DA2140FA25DA2141FA25DA2143FA2
5DA2147F14FF01037F003FB7FCA449516BD054>I<000FB600C0013FB512E0A2484B4914
C0A2D8000F90C80001EBF0006D489238007FC04A5F010F71C7FC193E4A163CA2011F177C
19785CA2013F17F8615CA2017F1601615CA201FF1603615CA24817076191C9FCA248170F
96C8FC5BA200075F181E5BA2000F173E183C5BA2001F177C18785BA2003F17F8605BA200
7F1601605BA2170300FF5F5BA24D5AA2170F90C990C9FC5F171E173E173C177C5F6C6C4A
5A5F1603003F4B5A6D4A5A001F4BCAFC6D147E6C6C5C6C6CEB03F06C6CEB0FE03A01FF80
7FC06C90B5CBFC013F13FC010F13F0010190CCFC4B5468D157>I<EC01FCEC07FF021FEB
C0E091397F03E3F8903901FC01F3903903F800FF4948137F49485C4948133F495A137F49
C76C5A5B1201485A5F120749143F120F495D121F167F123F4992C7FCA25E127F495CA215
01A248485CA21503EF03C016F890C7FC150717076CDA0FF01380A2031F130F033F14006C
6CEB7FE003FF5B001FD901F7131E9026C003E7133E000F903907C3F03C2707E00F83137C
3B03F03F01F8F83B01FFFC00FFF026007FF06D5AD91FC0EB1F80323574B33C>97
D<EB03FEEA03FF485BA3EA00075C13031307A25CA2130FA25CA2131FA25CA2133FA25CA2
137FA291C8FCA25BA25BEC01FC0001EB0FFF4A13C09039FC7E07E09138F803F03A03FFF0
01F802C013FCEC800091C712FE485AA249147F5B120F5B4914FFA2121FA25BA2003F5CA2
5BA2007F5C16FE90C7FCA2150716FC12FEA2ED0FF8A216F0151F16E048143F6C15C0007E
EC7F8016005D4A5A003E5C003F495A6C495A6D485A390FC03F806C6C48C7FC3803FFFCC6
13F0EB3F80285473D236>I<ED3FC0913801FFF8020F13FE91383FE07F91397F001F80D9
01FE130FD903F8EB07C0494813034948131F4948133F4948137F137F49C7FC485A178048
48EC3F00000715084991C7FC120FA2485AA2123F5BA3127F5BA4485AA5127FA2EE0180EE
03C01607003FED0F80161FEE3F006C6C147E5E6C6CEB03F06C6CEB0FE06C6CEB3F802701
FE03FEC7FC39007FFFF8011F13E0D907FEC8FC2A3574B336>I<EF07FCEE07FF4C13F8A3
EE000F18F01707170FA218E0A2171FA218C0A2173FA21880A2177FA21800A25FA25FA216
01A25FEC01FC913807FF03021F13C391397F03E3F8903901FC01F3903903F800FF494813
7F49485C4948133F495A137F49C76C5A5B1201485A5F120749143F120F495D121F167F12
3F4992C7FCA25E127F495CA21501A248485CA21503EF03C016F890C7FC150717076CDA0F
F01380A2031F130F033F14006C6CEB7FE003FF5B001FD901F7131E9026C003E7133E000F
903907C3F03C2707E00F83137C3B03F03F01F8F83B01FFFC00FFF026007FF06D5AD91FC0
EB1F80365474D23C>I<ED7F80913807FFF0021F7F91387F80FE903901FE003FD907F87F
49481480D91FC0130F495A137F49C7FC485A485A0007151F491500000F5D49147E001F15
FE4B5A4848EB07F0ED7FE091387FFF8048B548C7FC15E00280C8FC01C0C9FC12FF5BA590
CAFCA66C1503EE0780160FEE1F006C6C5C167E001F5D6D495A000FEC07E06C6CEB1FC06C
6C017FC7FC3901FC07FC6CB512F0013F13C0D907FCC8FC293573B336>I<EF1F80EF7FF0
933801FFF8933803F0FC933807E07E93380FC1FE161F1783163FA2EF03FC047F13F8EF00
F0180016FEA415015EA415035EA415075EA4021FB512FE5CA39126000FE0C7FC151F5EA4
153F5EA4157F93C8FCA45DA25DA414015DA414035DA414075DA4140F5DA3141F5DA4143F
5DA3147F92C9FCA3147E14FEA25C121EEA3F81007F5B12FFEB83F0A2EB03E0495A38FC0F
80D87E1FCAFCEA3FFE6C5AEA03F0376C83D324>I<ED07F0ED1FFC92397FFF0380913A01
FC0F8FE0913907F007CF91390FE003FF4A487EDA3F8014C04AC7FC14FE13014948EC7F80
495AA2495A1800495A013F5DA24A5C137F160113FF4A5CA216035A91C75BA21607A2495D
1203160FA25F6C5A161FA24C5A167F6D14FF12004B5B017E5B017F5B6D5B90271F803E7F
C7FC90380FC0FC6DB4485A010113E06D6CC65A91C7FC1501A25EA21503A25EA215075E15
0F001E5DD87F80131F5E00FF4A5A4BC8FC15FE90380003FC48495AEC3FE0007FB5128000
1F49C9FC000313E0334C7AB336>I<EC3FE0EB3FFF495BA3EB007F5D143F147FA292C9FC
A25CA25CA21301A25CA21303A25CA21307A25CA2130FA25CED07F8011FEB3FFF92B57E91
39C3F81FE09138C7C00790263FDF807F9138FE00034A805C137F5C5C5C13FF5CA291C7FC
481507495DA25B0003150F5F5BA20007151F5F5B163F000F5EA249147F94C7FC121F4C13
78495CA2003F020114F84C13F0491303EEF801007F17E0A290C7EC03C016F048EE078017
0F481700923801F81E177C486EB45AEE7FE00070ED0F80355477D23C>I<EC01E0EC03F0
EC07F8140FA315F015E0EC038091C7FCB2EB07C0EB3FF0EB7FFCEBF87C3801E07E3803C0
3E3807803F120F495A5A121E123E003C5B5C127CEA78015CEAF8035C120013075CA2130F
5CA2131F5C133F5CA2137F91C7FCA24913785BA2000114F84913F01203EBF80115E0A2EC
03C013F0EC0780140F15000001131EEBF87C6CB45AEB7FE0EB1F801D5077CE24>I<ECFF
8090B5FC15005AA2EA00016D5AA21301A25CA21303A25CA21307A25CA2130FA25CA2131F
A25CA2133FA25CA2137FA291C7FCA25BA25BA21201A25BA21203A25BA21207A25BA2120F
A25BA2121FA25BA2123FA25BA2127F14781300A24813F85C5AA213015C12FC13035C1307
007E5B130F6C48C7FCEA1FFE6C5AEA03F0195475D21E>108 D<013EDA1FE0EC7F80D9FF
C0D9FFFC903803FFF048D9E0036D010F7F3F03E3F00FE07F803F81FE2907C1F81F001F90
387C007ED80F81017EDAC1F8137F902601FCF890260FC3E07F001FD9FDF0DAE7C080001E
4A5D02FF15EF003E4A02FFC7FC003C4A5C92C75B5B007C495D12784A5DD8F807031F157F
4A4B92C7FC12004A5D010F033F5D634A5DA2011F037F1401634A92C7FC1A03013F4B5DA2
4A4A140763017F1401080FEB078091C74915E0A2490203031F130F09C01300494B143F51
5A00010307171EA2494B5E1B000003030F5F1CF8494B5E97381F81E0F387C0494B6EB45A
7448C7FCD801C06EC912F8593577B360>I<013EEC1FE0D9FFC0EBFFFC48D9E0037F3C03
E3F00FE07F803B07C1F81F001FD80F81017E80902601FCF8130F001FD9FDF080001E5C14
FF003E5C003C5C92C7FC5B007C5B12785CD8F807151F4A5D12005C010F153F605CA2011F
157F95C7FC5C5F013F5DA24A13015F137F0403EB01E091C713F8A2490207130305F013C0
49140FEFE00700011880A249EE0F0017C00003171E183E49163C706C5AEFE1F0496EB45A
701380D801C0DA003EC7FC3B3577B342>I<ED3FC0913801FFF8020F13FE91393FE07F80
91397F001FC0D901FEEB0FE0D903F8EB07F0495A4948EB03F8495A4948EB01FC137F49C7
13FE485AA2485A12075B120FA2485A1603123F5BA21607007F16FC5BA2160F17F8485AA2
EE1FF0A2EE3FE0007F16C0167F178016FF1700003F4A5A4B5A5E6C6C495A4B5A6C6C495A
6C6CEB7F806C6C01FEC7FC3901FE07F839007FFFE0011F1380D907FCC8FC2F3574B33C>
I<023E147F913AFFC003FFC0496D4813F0903B03E3F01F81F8903B07C1F83E00FCD90F81
01FC137E912601FDF0137F011FD9FFE07F011E4A14805E133E013C91C7EA1FC05D140301
7C5B017849143FA2EBF807A201005BA2020F157FA25DA2021F15FF19805DA2023F5C1900
5DA2027F4A5AA292C75B17074A5D170F604D5A495E173F6F495A95C7FC496D13FE4C5A91
39FBE003F89139F9F00FE0903A07F8F81FC0DB7FFFC8FC9138F03FFCED0FE0010F90CAFC
A25CA2131FA25CA2133FA25CA2137FA291CBFCA25B5A007FEBFF80A2B6CAFCA23A4B7FB3
3C>I<013F14FF9026FFC00313C048D9E00F13F03B03E3F03F01F83B07C1F87C007C0181
49137E3B0F01FDF001FE9138FFE003001E14C0A2003E91388007FC003CEC000317F84948
EB01E0007C92C7FC00785BA238F807F8A200005BA2130FA25CA2131FA25CA2133FA25CA2
137FA291C9FCA25BA25BA21201A25BA21203A25BA35BA2EA01C02F3577B331>114
D<EC01FE91380FFFC0023F13F09138FE03F8903901F000FC4948137C4948133E4948131E
011F143E91C712FE1501133EA2137E16FCED00F8017F1400A2808014FC90383FFFE015F8
6D13FE6D7F6D1480010114C06D6C13E014079138007FF0151F150F15071503A2121FEA7F
80A200FF15E0A390C7EA07C05A00F8EC0F80151F1600007C143E007E14FC6C495A391FE0
0FE00007B51280000149C7FC38003FF0273577B330>I<140F4A7E143FA3147F92C7FCA3
5C5CA313015CA313035CA313075CA2007FB61280B7FC1600A226000FE0C7FC131F5CA313
3F5CA3137F91C8FCA35B5BA312015BA312035BA312075BA3000F143C5B157C1578121F49
13F85D14014A5A01805B14074A5A92C7FC380FC03E5C3807E1F86CB45A6C13C0D8007EC8
FC214C75CA27>I<EB0FC0D93FF0EC03C0D97FFCEC07E0D9F07C140F3801E07E2603C03E
141F2607803F15C0120F495A48163F001E1780123E003C5B4A147F007C1700EA78015CD8
F8035D4A5C120013074A13015F130F5C1603011F5D5CA21607013F5D5CA2160F017FEDE0
0F91C7FCA2161FEFC01F181EA2043F133E047F133C17806D02FF137C4B14786E4814F801
1F903907CFC0F09139C00F8FC1903B0FF03F07E3E0903B03FFFC03FFC06DD9F001138090
3B003FC0007E00383577B33F>I<D90FC01478D93FF014FED97FFC1301D9F07CEB03FF38
01E07E3803C03E3807803F120F49487F4881121E003E167F003C5B4A143E127CEA78015C
EAF8034A143C120013074A147C1778130F5C17F8011F15F05CA21601013F15E05C160317
C0137F91C7EA0780A3EE0F00A2161EA25E5E7F6E5B011F495A6E485A6D6C485A902607F8
1FC7FC903803FFFE010013F8EC1FE0303577B336>I<EB0FC0D93FF0EC03C0D97FFCEC07
E0D9F07C140F3801E07E2603C03E141F2607803F15C0120F495A48163F001E1780123E00
3C5B4A147F007C1700EA78015CD8F8035D4A5C120013074A13015F130F5C1603011F5D5C
A21607013F5D5CA2160F017F5D91C7FCA2161F5FA3163F4C5AA26D14FF5D6E4890C7FC01
1F5B6E5A90380FF03F903903FFFCFE6D13F09038003FC0EC00015EA215035EA2D803C049
5AEA07F0000F4A5A121F4B5A4B5A4991C8FC5D018013FE391E0001FC001F495A6CEB07E0
9038801FC03907E07F802603FFFEC9FCC613F8EB3F80334C77B339>121
D E /Ft 26 122 df[<96380FFFFE060FB612E04DB712FC051F16FF94B912C004078404
1F18F8047F9126FC001F7F4BB6008001017F030702F8C8EA3FFF4B02E0030F7F033F0280
4B7F4B49C9127F92B54893B57E4A02F05D4A4A4B804A4A5D4A4A84634A91C9FC4A5BA24A
5B5180755C91B5FC5EA3755CA2755C755C755CE23FFEC8FCF40FF899CAFCAF083FB612FC
BFFCA9C702FCC912038787B3B3B3B2003FB800F0013FB812F0A9>116
144 123 271 129 12 D[<96260FFFFE0507B5FC060FB600E00307B612F04DB700FC92B7
12FE051F04FF020F707E94B900C0017F17E00407DEF003B97E041FDEF80F18FC047F9126
FC001FD9FC3F9126FE000F7F4BB6008001006DB600C001007F030702F8C8003FB600FCC8
001F7F4B02E0030F03F003077F033F02804B03C04B7F4B49C9007F92C9123F92B54893B6
484C7F4A02F04B03F893B5FC4A4A4B4B4B804A4A4B4B5D4A4A4F8451614A91C95E4A4997
C9FCA24A496159807D5C91B5FC4C61A375735CA275735C75735C75745B76071F90C8FCA1
EA07FCA1CAFCAF101FB612FEC5B5FCA9C702FCCA6C49C912018FA17EB3B3B3B2003FB800
F0011FB800F8011FB812F8A9>181 144 123 271 194 14 D<BA12F0B33C137DB74D>45
D[<F31FE0F37FF8A2517EA2507FA3507FA25080A35080A25080A35080A25080A397B67E
A24F81A34F81A24F82A34F82A24F82A21AFBDF3FF981A2DF7FF1811AF06207FF6D80A24E
01C081871A804E6E80A24E0100828761060F6E81A24E48838761063F6E81A24E48838761
06FF6F80A24D498388614D7080A24D90C8FC768160050F7081A260051F708160053F7081
A260057F70816005FF7180A2604C7280604C7280A295CAFC4C72815F040F7281A294BDFC
4C88A24C88A34C88A293BE7E05E0CB7E5F4B7480A24B497280A294CCFC4B7481A24B4873
81A25E031F7481A24B487381A25E037F7481A24B487480A25E4A7680A24A497480A293CE
FC4A7681A24A4875814A7E0107B512FCB96C043FBA12FCA9>158
145 120 272 175 65 D[<C212F8A48DA5C7000303C0C9123FF5007F1E0F0C0180787E1F
1F8B8B1F018BA27A7E8C8CA28CA28CA28C8EA28CA38CA38EA2E21FF0157FA67B7EA40A3F
93C8FCA41C7FA21CFFA26363631B1F1B7F0807B5FC95B8FCA99538C00007F2007F1B1F1B
07878787A21C7FA21C3FA3FA7FC01C1FA2FAFF80A6571300A299CAFCA369A26AA22107A3
210F6AA2211FA2213FA2575AA221FFA26868565BA26868207F9DB5FC555C1F071F1F1F7F
0C03B6FC1E3F0B1FB7FCC35AA66AA3>138 141 120 268 153 69
D[<B900C00C7FB812E0729BB9FC72657265A37265A27265C70003A101F8C8FC72F51FEF
A2706EF43FCFA3706EF47F8FA2706EF4FF0FA2706EF301FEA3706EF303FCA2706EF307F8
A2706EF30FF0A2706EF31FE0A3716EF23FC0A2716EF27F80A2716EF2FF00A2716E4F5AA3
716E4F5AA2716E4F5AA2716E4F5AA3716E4F5AA2726E4E5AA2726E4E5AA2726E4EC7FCA3
726E4D5AA2726E4D5AA2726E4D5AA2726E4D5AA3726E4D5AA2736E4C5AA2736E4C5AA373
6E4CC8FCA2736E4B5AA2736E4B5AA2736E4B5AA3736E4B5AA2736E4B5AA2746E4A5AA274
6E4A5AA3746E4AC9FCA2746E495AA2746E495AA3746E495AA2746E495AA2746E495AA275
6E485AA3756E485AA2756E48CAFCA275ECF1FEA275ECFBFCA375ECFFF8A2755DA2755DA3
765CA2765CA27691CBFCA2765BA34A6D715B49B512FEB900FC6F490303BB12E0A2765BA2
765BA3775A0B1FC9FC>203 142 120 269 220 77 D[<B900E04EB912F884848484A284
8585C700037094C7000302FCC7FC73DF000F90C8FC7C5A85858585A27081708170817081
868270817081708187837181718171817181A27181718171817281888472817281728172
81A272817281738173818985738173817381898573817481748174818A86748174817481
8A8675817581758175818B877581758175818C887681768176817681A276817681768177
158021C0897715E07715F07715F87715FCA27715FE7715FF7815877815C722E78A7815F7
7815FF8AA28A8A8B8B8BA28B8B8B8BA28B8C8C8C8CA28C8C8C8CA28D8D8D8D8DA24A6D88
49B500FE88B900FC86227FA2223F221F220F2207A27C5A>165 142
120 269 182 I[<BE12F8F5FFF01EFF1FE01FFCF7FF8020E020F820FEC700030380C800
0781E2003F15C00B03810B00810C3F8078800C07807880788178818E8B8E8B8E8B8EA28E
A28B8EA42380AC2300A46A67A26AA26A676A676A9CB65A6A665492C7FC545C0C1F5C545C
9BB612E00B075D0B3F5D0A07B648C8FC95BB12F820E0208055C9FC1FF09CCAFC1EF00BF8
CBFC06C0D0FCB3B3B2BCFCA9>137 142 120 269 159 80 D[<93260FFFF8163E4BB600
E0153F031F03FE5D037FDBFFC05C0203B800F05B020F05FC5B4A05FF5B027FF0C00F91B5
26FE000FECF01F010302C0D9007F6D5A4991C800076D5A4901FC030090B6FC4901F0163F
4949160F4901808290B5170192CBFC4849844849181F87484984A2484984874886A24849
8588A24887A388A2B58680A36E85A280A26E8580A2818103F0725A6C6E96C7FC15FE8116
E06C15FEEEFFE017FF6C17F0F0FF806C18F8F1FFC06C19FCF2FF806C1AE01BF86C1AFE6C
747E6D1AE0886D866D866D1AFF6D876D87010087806E86020F86020386020086153F030F
851501DB001F19801601DC000F18C0EF007F060717E0F0003F070316F0F1003F1A0F0803
15F81A00871B1F877514FCA287007F86486C85A288A388A36D86A31EF87FA37F1EF0A26D
626D1CE0A27F6D5013C0A26E1B806E96B5FC6E1B0002F8606E4E5B6E626E6C5F03E04D5B
03F84D5B03FE057F5BDBFFC093B55A04F803035C496CD9FF80021F91C7FCD9FC1F02FF49
B55AD9F80792B75A496C19F049C66149011F18804901074DC8FC90C817F848031F16C048
030003FCC9FC007C04011480>102 146 115 271 129 83 D[<BB00E0050FB812F0A9C7
001F92CE00014AC7FCE7000F13C07209035B6E5590C8FC846E555A846E555AA2846E555A
846E555A846F545A84A26F535B846F535B856F5390C9FC856F66210F856F535A856F535A
856F66217F8570525A8570515B8570656886705190CAFC8670515A867064201F8670515A
8670515A86716320FF86714F5B86714F5B877198CBFC6787714F5A87714F5A8771621F3F
87714F5A87724E5A87724D5B87A2724D5B88724D90CCFC88724D5A8872601E1F88724D5A
88724D5A88735F1EFF88734B5B1CFF734B5B1D837394CDFC1D871DC773EDCFFE1DEF73ED
FFFCA2735EA3735EA2745DA2745DA3745DA27492CEFCA2745CA3745CA2745CA2745CA375
5BA2755BA2755BA27590CFFCA2F303FC>164 144 123 269 175
86 D<93B512FC037FECFFF00207B8FC023F17E091B912F84918FE0107727E499126C000
7F14E04901E0C7000F80496D020380496D020014FE6F6F7F90B570806F6F8085486E6F80
7380A27380A28885886C5CA26D4982886D5B6D5B010713C0010190CAFC90CCFCA90603B7
FC050FB8FC0403B9FC167F0307BAFC153F4AB7EA807F020FEDE000023F02FCC7FC91B612
E0010392C8FC4914FC011F14F04914C0495C90B548C9FC485C485C485C485C5A5D485CA2
4891CAFCA3B6FC5CA397B6FCA461806C60F107EF6C6E150F6F16CF6C183F6FDB7F8F806C
6EDBFF0F14E06C02FCDA03FE15FE6C6E91260FFC0791B5FC6C6E6CD93FF817806C923AF8
03FFF003013F91B6487E010FEF8000010394C77E010004FC141F021F03F0140702010380
DA007F1400DA000701F8CDFC695F79DD71>97 D[<ED1FF0017FB5FCB7FCA9EA003F1307
A27FB3B296383FFFC00607B512FE063FECFFE04DB712F8050716FF051F17C0057F17F094
B5D8C00F8004F301FCC714FE04F701E0023F7F93B50080020F804DC86C14E005F8030180
4D6F804D707F05808294CA804C717F4C7180A24C71808BA27680A28B88A28BA28BA3888B
A52080B02000A56764A267A3676467A2525CA267647062704D91C7FC704D5BA2714C5B71
93B55A05F04B5CDCBFF84B5CDC1FFC030F5C4B6CB44B91C8FC7001C0027F5B4B6C01F001
03B55A4BC601FF013F14F04B6D90B712C04B011F94C9FC4B6D16FC4B010316F092C86C15
804A030F02F8CAFC90CB49CBFC>113 144 121 270 129 I<94387FFFF0041FB612E093
B712FE0307707E031F17F092B97E4A18FE020784021F9126F8000F14804A0280010014C0
4A49C74814E049B500F85C494A17F0494A5C495C494A4A14F84991C8FC5D495B90B5FC5D
5A485C7314F05A4B6F14E05A7314C0487214804B93383FFE00F20FF84896C8FCA4485CA5
B6FCB07EA281A37EA36C80A37E6F18FE6CF201FFA26C6E5F1CFE6C801B076C6EEF0FFC6D
7F70EE1FF86DF13FF06D6E167F6D6EEEFFE06D02F84B13C06D6E5D6D02FF030F13806D03
C0023F1300023F02F0903801FFFC6E9126FF801F5B020792B65A6E18C0020060033F4CC7
FC030716F8030016C0041F4AC8FCDC007F13C0585F78DD67>I<94387FFFC0040FB6FC93
B712E0030716FC031F16FF037F17C04AB912F00207DAF80380021F912680003F13FE4A49
C7000F7F4A01F802038049B5486E804902C06E6C7F494A6F7F4991C9FC49727F4949707F
4B84498490B548707F5A4B198048855D481CC086481CE05D5A871DF05AA25D5AA21DF887
A2B6FCA392BBFCA51DF00380CDFCA77EA4817EA37EA2817EA26CF307F06FF00FF87E816C
1B1F6F19F06C1B3F6D6DF07FE06D7FF4FFC06D6E4C13806D6E5E6D02F04C13006D6EEE1F
FE6D6E4C5A6D6C01FFEEFFF86E02E002035B6E02FC021F5B02079126FFC003B55A6E92B7
C7FC020060033F17F8030F17E003011780DB003F03FCC8FC040315C0DC000F01F8C9FC5D
5F7ADD6A>101 D[<95383FFF80050FB512F094B612FE040781041F16C0047F824BB87E03
07DAF8077F031FDAC00F7F4B49C6487F4B495B92B500F0814A4A5B4A5C4A93B612805F4A
91C7FC5C5E5C5E5C731400A24C6E5B91B56F5BA2735B070313E00700138097C8FCB3A4BA
12F8A9C702FCCBFCB3B3B3B3A2003FB9FCA9>81 144 121 271 71
I[<ED1FF0017FB5FCB7FCA9EA003F1307A27FB3B2963803FFFC073FEBFFE096B612F806
0715FE061F6F7E4E16E095B87E4DD9FC03804DD9C000804D48C76C7FDD0FF880DD1FE082
4D486E804D5A05FEC881DCF1FC815F04F385EEF7F04D81EEFFC0A24D84A294C9FCA25EA3
5EA45EB3B3AFB9D8E001B912C0A9>114 143 119 270 129 104
D[<EC3FC0ECFFF0010313FC497F497F498049804980A290B67EA24881A86C5DA26D5CA2
6D5C6D5C6D91C8FC6D5B6D5B010013F0EC3FC091CAFCB3A3ED1FF0017FB5FCB7FCA9EA00
3F1307A27FB3B3B3B0B91280A9>49 144 119 271 65 I[<ED1FF0017FB5FCB7FCA9EA00
3F1307A27FB3B3B3B3B3B3ACB912C0A9>50 143 119 270 65 108
D<DB3FE0912601FFFC943801FFFC017FB5031FD9FFE0041FEBFFE0B792B600FC93B612FC
060303FF030315FF060F04C0020F16C0063F04F0023F16F095B86C91B87E4DD9FC036E49
D9FC03804DD9C0006E49D9C000804D48C7003F6D4948C7003F7FDD0FF86EDB0FF880D800
3F4B48714848830107DB3FC06E9126C03FC06E804D484E5A6D4BC86F48C881DCE1FE6FDA
E1FE814D61DCE3F8DEF3F884DCE7F0F0F7F04D6F4B81DCEFC0F0FFC0A2DCFF804F84A294
C993C9FCA24C61A34C61A44C61B3B3AFB900E090B900E090B912E0A9B35D77DCC2>I<DB
3FE0913803FFFC017FB5033FEBFFE0B792B612F8060715FE061F6F7E4E16E095B87E4DD9
FC03804DD9C000804D48C76C7FDD0FF880D8003FDB1FE08201074B486E804D5A6D03FEC8
81DCE1FC815F04E385EEE7F04D81EEEFC0A2DCFF8084A294C9FCA25EA35EA45EB3B3AFB9
D8E001B912C0A9725D77DC81>I<94381FFFF00407B612C0047F15FC0303B87E030F17E0
037F17FC4ABAFC4A9126FC007F80020F02C0010714E04A49C880027F01F8033F13FC91B5
486F7F4902C003077F494A6F804991C96C80494970804949717F49874949717FA290B548
717F48884B83481D80A2481DC04B83481DE0A2481DF0A3484A7114F8A4481DFCA5B61BFE
AF6C1DFCA56C6E4D14F8A36C1DF0A36C1DE06F5F6C1DC0A26C6E4D1480A26C1D006F5F6C
646D6D4D5B6F94B5FC6D636D6D4C5C6D6E4B5C6D6E4B5C6D02F0031F5C6D6E4B91C7FC6D
6C01FE92B512FC6ED9FFC001075C6E02FC017F5C020791B812C0020196C8FC6E6C17FC03
1F17F003031780DB007F03FCC9FC040715C0DC001F01F0CAFC675F7ADD74>I<DB7FC049
B47E90B6021F13F8B7027F13FE4DB67E4D15E04D814D814D01077F94263FF00F7F94387F
C01F4D48487FD8003F16000107DAC1FE491480EEC3FC6D5DEEC7F05F16CF5F16DF4D6D14
00A204FFC76C5BA2735B4C6E5B735B070013C04C92C8FCA45EA65EB3B3AAB912FCA9515D
79DC5F>114 D<92261FFFF814F80203B638C001FC023FEDFC0791B8121F010317FF130F
013F9038F8001F4990C8FCD9FFF8153F4801E0150F484915034849814890CAFC197F4848
173F191F485AA2007F180FA31907487EA27FA28002E0705A6E93C8FC14FC14FF15F06CEC
FF8016FCEEFFF06CEEFF8018F06C17FE727E6C18E0856C18FC6C846C727E6C856D84011F
846D841303010084023F83140F020183EC001FDB007F16801603DC000F15C01700183F06
0F14E0007F1703486C82727E857F85857FA2857F1BC07FA27F1B806D5F7F1B006E5E6E5F
6E163F6E4C5A02FC4C5A6E03035B6E6C4A5B03F0023F5B03FF0107B55A01F991B7C7FCD9
F07F16FCD9E01F16F0D9800716C0D9000193C8FC48D9003F14F8007C020349C9FC4B5F78
DD5C>I[<ED03FEA81507A5150FA4151FA3153FA2157FA215FFA25CA25C5CA25C5C5C5C91
B5FC13035B131F017F91B712F00007BAFCBBFCA7C74AC9FCB3B3AAF101FFB1616E17FE82
A219076E17FC836EEE0FF871131F6E6EEB3FF071137F6E6EEBFFE06EDAFF0313C06E92B5
12806E1700033F5D6F5D03075D030015E0041F1480040001FCC7FC>72
132 124 258 90 I<B800FE017FB700F8023FB612F8A9D8000F02F0C8000702C0C9003F
EBF800100313806D6E6F7390C7FC775E6D69706F6E1607A26D6E6F6277160F6D6970706D
161FA26E6E6F61516D163F6E687192B6167FA26E68714A6F15FF6E68714A608A6E9DC8FC
714A6F5C6E6771DA0FFD17078A6E06F86071021F6F140F6E67714A486C161F8A6F4D6C5F
72017F6F143F6F667249486C167F8A6F4D6C5F72487113FFA26F02F04A6C4B5B4F17C06F
4C6D94C9FCDEF807715AA26F02FC496D4B5A070F17F06F4C6D5EDEFE1FEFF80FA26F02FF
496E4A5A073F17FC704B6E5D07FFEFFE3FA2704B6E4A5A1FFF704B6E5D20FFA27092C86C
5DA2704A6F92CAFCA3704A6F5CA2704A6F5CA3704A705BA27149705BA37149705BA27149
705BA37190CA6C5BA271487190CBFC7148715A9D5D7BDBA8>119
D<007FB800C04AB71280A9D800034ACA000791C7FC6D080013F0775A6D6E4E5AA26E6E60
64836E4F90C8FC836E4F5A836E4F5AA26E6E4C5AA26E6E5F1C3F6E6E5F1C7F836E4F5A84
6F4D5B846F4D90C9FCA26F6E4A5AA26F6E5D1B0F846F4D5A846F4D5A846F4D5AA26F6E4A
5AA2706E5C627002C091CAFC6219E0704B5A19F0704B5AA2706E485AA2706E485AA27002
FE5B1A7F19FF704B5AA2715DA27192CBFCA2715CA2715CA3715CA2715CA2715CA2715CA2
725BA27290CCFCA3725AA2725AA24E5AA24E5AA261187FA24E5AA24D5B13FE2603FF804A
90CDFC000F13E0486D4A5A487F486D4A5AA260B56C141F4D5AA24D5A17FF604C5B4A4990
CEFC6C5D4C5A6C49EB3FFC4A495A6C4948485A9026FE80075B270FFFC03F5B6C90B6CFFC
6C5D6C15F86C6C5C011F14C0010749D0FC9038007FE071857CDB7B>121
D E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop -42 367 a Ft(A)78 b(New)f(Sc)-6 b(heme)78 b(for)f
(Memory-E\016cien)-6 b(t)-42 583 y(Probabilistic)76 b(V)-19
b(eri\014cation)-42 932 y Fs(Ulrich)42 b(Stern)f(and)g(David)h(L.)g
(Dil)6 b(l)-42 1081 y(Stanfor)-6 b(d)41 b(University)-42
1230 y(Dep)-6 b(artment)41 b(of)h(Computer)e(Scienc)-6
b(e,)40 b(Stanfor)-6 b(d)41 b(University,)g(Stanfor)-6
b(d,)40 b(CA)-42 1380 y(94305,)h(USA)-42 1529 y(Email:)h
Fr(f)p Fq(uli@beet,)16 b(dill@cs)p Fr(g)p Fq(.stanf)o(or)o(d.)o(ed)o(u)
1634 2236 y Fp(Abstract)-42 2352 y Fo(In)27 b(v)m(eri\014cation)f(b)m
(y)h(explicit)e(state)h(en)m(umeration,)g(for)f(eac)m(h)j(reac)m(hable)
e(state)h(of)e(the)i(proto)s(col)e(b)s(eing)-42 2468
y(v)m(eri\014ed)40 b(the)f(full)e(state)j(descriptor)f(is)f(stored)i
(in)e(a)g(state)h(table.)g(Tw)m(o)h(probabilistic)c(metho)s(ds)i({)-42
2584 y(bitstate)e(hashing)g(and)g(hash)h(compaction)e({)g(ha)m(v)m(e)j
(b)s(een)f(prop)s(osed)f(in)g(the)g(literature)f(that)h(store)-42
2701 y(m)m(uc)m(h)27 b(few)m(er)f(bits)g(for)f(eac)m(h)h(state)g(but)g
(come)f(at)h(the)g(price)f(of)g(some)h(probabilit)m(y)d(that)j(not)f
(all)f(reac)m(h-)-42 2817 y(able)i(states)i(will)c(b)s(e)i(explored)h
(during)f(the)h(searc)m(h,)g(and)g(that)f(the)h(v)m(eri\014er)g(ma)m(y)
f(th)m(us)h(pro)s(duce)h(false)-42 2933 y(p)s(ositiv)m(es.)38
b(Holzmann)e(in)m(tro)s(duced)i(bitstate)f(hashing)g(and)g(deriv)m(ed)h
(an)g(appro)m(ximation)d(form)m(ula)-42 3049 y(for)h(the)h(a)m(v)m
(erage)g(probabilit)m(y)e(that)h(a)g(particular)e(state)j(is)f(not)g
(omitted)f(during)g(the)i(searc)m(h,)h(but)-42 3166 y(this)d(form)m
(ula)e(do)s(es)i(not)g(giv)m(e)g(a)f(b)s(ound)h(on)g(the)g(probabilit)m
(y)e(of)i(false)f(p)s(ositiv)m(es.)h(In)g(con)m(trast,)h(the)-42
3282 y(analysis)41 b(for)f(hash)h(compaction,)f(in)m(tro)s(duced)h(b)m
(y)h(W)-8 b(olp)s(er)40 b(and)h(Lero)m(y)g(and)g(impro)m(v)m(ed)g(up)s
(on)g(b)m(y)-42 3398 y(Stern)i(and)f(Dill,)d(yielded)j(a)g(b)s(ound)g
(on)g(the)h(probabilit)m(y)d(that)i(not)g(ev)m(en)i(one)e(state)h(is)e
(omitted)-42 3514 y(during)32 b(the)h(searc)m(h,)h(th)m(us)g(pro)m
(viding)e(a)g(b)s(ound)h(on)f(the)h(probabilit)m(y)e(of)h(false)g(p)s
(ositiv)m(es.)56 3631 y(In)27 b(this)g(pap)s(er,)g(w)m(e)h(prop)s(ose)f
(and)g(analyze)g(a)g(new)h(sc)m(heme)g(for)e(probabilistic)e(v)m
(eri\014cation)j(that)f(is)-42 3747 y(a)h(v)-5 b(ariation)24
b(of)j(the)g(impro)m(v)m(ed)g(hash)g(compaction)f(sc)m(heme.)i(The)f
(main)f(di\013erence)h(is)f(that)h(a)f(tigh)m(ter)-42
3863 y(b)s(ound)i(on)g(the)g(probabilit)m(y)e(of)h(false)g(p)s(ositiv)m
(es)g(is)h(calculated)e(b)m(y)j(reasoning)e(ab)s(out)g(a)h(longest)f
(path)-42 3979 y(in)32 b(the)i(breadth-\014rst)f(searc)m(h)h(tree)f(of)
g(the)g(reac)m(hable)g(state)g(space.)h(In)f(addition,)e(the)i(new)h
(sc)m(heme)-42 4095 y(emplo)m(ys)d(ordered)g(hashing)f(to)g(reduce)i
(the)f(omission)d(probabilit)m(y)h(when)j(inserting)d(in)m(to)h(the)h
(state)-42 4212 y(table.)40 b(In)g(the)h(industrial)d(proto)s(cols)h(w)
m(e)i(examined,)f(the)g(new)h(sc)m(heme)h(yielded)e(an)g(exp)s(onen)m
(tial)-42 4328 y(reduction)30 b(in)e(the)i(b)s(ound)f(on)g(the)g
(probabilit)m(y)f(of)g(false)h(p)s(ositiv)m(es,)g(whic)m(h)h(enabled)f
(a)g(roughly)f(50\045)-42 4444 y(reduction)34 b(in)e(the)h(n)m(um)m(b)s
(er)h(of)e(bits)h(needed)i(for)d(a)h(compressed)h(state.)g(F)-8
b(urthermore,)33 b(w)m(e)h(prop)s(ose)-42 4560 y(a)39
b(memory)f(e\016cien)m(t)h(w)m(a)m(y)h(to)f(store)g(the)g(information)d
(needed)k(for)e(error)h(trace)g(generation.)f(The)-42
4677 y(outcomes)33 b(of)f(exp)s(erimen)m(ts)h(using)g(the)g(new)g(sc)m
(heme)h(con\014rmed)f(the)g(analysis.)1606 4926 y Fp(Keyw)m(ords)-42
5042 y Fo(Probabilistic)d(v)m(eri\014cation,)i(explicit)f(state)h(en)m
(umeration,)g(reac)m(habilit)m(y)f(analysis,)h(bitstate)g(hash-)-42
5158 y(ing,)g(hash)h(compaction,)f(Mur)p Fn(')h Fo(v)m(eri\014er)p
eop
%%Page: 2 2
2 1 bop -42 100 a Fm(2)1474 b Fl(A)30 b(New)g(Scheme)g(for)g
(Memory-E\016cient)i(Pr)l(ob)l(abilistic)g(V)-6 b(eri\014c)l(ation)-42
365 y Fk(1)117 b(INTR)m(ODUCTION)-42 617 y Fo(Complex)40
b(proto)s(cols)f(are)h(often)g(v)m(eri\014ed)h(b)m(y)g(examining)e(all)
f(reac)m(hable)i(proto)s(col)e(states)j(from)e(a)-42
733 y(set)46 b(of)e(p)s(ossible)g(start)h(states.)g(This)g(reac)m
(habilit)m(y)e(analysis)h(can)h(b)s(e)g(done)g(using)f(t)m(w)m(o)i
(di\013eren)m(t)-42 850 y(metho)s(ds:)31 b(the)f(states)i(can)e(b)s(e)h
(explicitly)d(en)m(umerated)j(b)m(y)g(storing)f(them)g(individually)d
(in)j(a)g(table,)-42 966 y(or)j(a)f(sym)m(b)s(olic)f(metho)s(d)h(can)h
(b)s(e)f(used,)i(suc)m(h)g(as)f(represen)m(ting)g(the)g(reac)m(hable)g
(state)g(space)g(with)f(a)-42 1082 y(binary)h(decision)f(diagram)e
(\(BDD\))i(\(Burc)m(h)h(et)g(al.)e(1990\).)56 1218 y(The)c(biggest)f
(obstacle)g(of)g(b)s(oth)g(metho)s(ds)h(is)e(the)i(often)f
(unmanageably)g(large)f(n)m(um)m(b)s(er)i(of)f(reac)m(h-)-42
1334 y(able)33 b(states)h({)f(the)g(`state)h(explosion)f(problem'.)f
(Sym)m(b)s(olic)f(metho)s(ds)i(can)h(alleviate)d(the)i(state)h(ex-)-42
1450 y(plosion)e(problem)f(in)h(some)h(cases.)h(Ho)m(w)m(ev)m(er,)h(in)
d(researc)m(h)i(done)f(in)f(our)g(group)h(for)f(some)g(t)m(yp)s(es)i
(of)-42 1566 y(industrial)28 b(proto)s(cols,)h(explicit)f(state)j(en)m
(umeration)e(has)h(out-p)s(erformed)f(the)h(sym)m(b)s(olic)f(approac)m
(h)-42 1683 y(\(Hu)k(et)g(al.)f(1994\).)56 1818 y(In)41
b(explicit)f(state)h(en)m(umeration)g(algorithms,)d(a)j(state)g(table)f
(is)h(main)m(tained)e(that)h(ev)m(en)m(tually)-42 1934
y(holds)g(all)e(reac)m(hable)i(states)g(of)g(the)g(proto)s(col)e(under)
j(v)m(eri\014cation)e(unless)i(an)e(error)h(is)f(detected.)-42
2051 y(This)i(state)f(table)f(is)g(usually)g(implemen)m(ted)g(as)h(a)g
(hash)g(table.)f(In)h(practice,)g(the)h(total)d(memory)-42
2167 y(a)m(v)-5 b(ailable)23 b(for)i(the)g(hash)h(table)f(is)f(the)i
(limiting)21 b(resource)26 b(in)f(v)m(eri\014cation.)f(Therefore,)j(it)
d(is)h(desirable)-42 2283 y(to)33 b(use)g(the)g(most)f(compact)g
(represen)m(tation)i(for)e(this)g(table.)56 2419 y(When)c(using)e(a)h
(con)m(v)m(en)m(tional)g(table,)f(for)h(eac)m(h)g(state)h(the)f(full)e
(state)i(descriptor)g(is)g(stored,)g(whic)m(h)-42 2535
y(t)m(ypically)33 b(has)h(sev)m(eral)g(h)m(undreds)h(of)e(bits.)h(Tw)m
(o)g(probabilistic)d(metho)s(ds)i({)h(bitstate)f(hashing)g(and)-42
2651 y(hash)28 b(compaction)e({)g(ha)m(v)m(e)j(b)s(een)e(prop)s(osed)h
(that)e(store)i(man)m(y)f(few)m(er)h(bits)e(for)h(eac)m(h)h(state)f
(but)g(come)-42 2767 y(at)34 b(the)g(price)g(of)f(some)g(probabilit)m
(y)f(that)h(not)h(all)e(reac)m(hable)i(states)g(will)e(b)s(e)h
(explored)i(during)e(the)-42 2884 y(searc)m(h,)38 b(and)f(that)f(th)m
(us)i(proto)s(col)d(errors)h(migh)m(t)f(go)h(undetected.)j(In)e(the)g
(case)g(that)f(all)e(proto)s(col)-42 3000 y(errors)f(are)g(undetected)i
(the)e(v)m(eri\014er)g(is)f(said)g(to)g(pro)s(duce)h
Fp(false)38 b(p)s(ositiv)m(es)p Fo(.)56 3135 y(Bitstate)26
b(hashing,)h(in)m(tro)s(duced)g(b)m(y)h(Holzmann)d(\(1987,)h(1991\),)g
(main)m(tains)f(a)h(table)h(of)f(bits)g(whic)m(h)-42
3252 y(are)31 b(initially)26 b(set)31 b(to)f(zero)h(instead)f(of)g
(main)m(taining)d(a)j(con)m(v)m(en)m(tional)h(state)f(table.)g(When)i
(a)e(state)g(is)-42 3368 y(inserted)36 b(in)m(to)e(the)h(table,)f(t)m
(w)m(o)h(hash)g(v)-5 b(alues)35 b(are)g(calculated)e(from)h(the)h
(state)g(descriptor)g(and)g(the)-42 3484 y(bits)j(corresp)s(onding)f
(to)g(these)i(hash)f(v)-5 b(alues)37 b(are)h(set)g(to)f(one.)h(When)h
(the)e(algorithm)e(examines)i(a)-42 3600 y(newly)i(reac)m(hed)h(state)f
(and)f(\014nds)h(that)g(the)f(t)m(w)m(o)h(bits)f(corresp)s(onding)g(to)
g(this)g(state)h(are)f(already)-42 3717 y(set)29 b(to)f(one,)h(it)e
(assumes)i(that)f(it)f(has)h(visited)g(the)h(newly)f(reac)m(hed)i
(state)e(earlier.)f(Holzmann)g(\(1995\))-42 3833 y(also)i(presen)m(ted)
j(an)e(appro)m(ximate)f(analysis)g(for)g(the)i(a)m(v)m(erage)g
(probabilit)m(y)c(that)j(a)f(particular)g(state)-42 3949
y(is)40 b(not)f(omitted.)f(Unfortunately)-8 b(,)40 b(this)f
Fp(a)m(v)m(erage)h Fo(do)s(es)g(not)g(pro)m(vide)g(us)g(with)f(a)g
Fp(b)s(ound)i Fo(on)f(the)-42 4065 y(omission)29 b(probabilit)m(y)f
(for)i(a)g(particular)f(state.)i(Some)f(states)h(migh)m(t)e(ha)m(v)m(e)
j(m)m(uc)m(h)f(higher)f(omission)-42 4182 y(probabilities)i(than)i
(this)g(a)m(v)m(erage.)i(In)m(tuitiv)m(ely)-8 b(,)34
b(these)h(are)g(the)f(states)i(whic)m(h)f(are)f(only)g(reac)m(hable)-42
4298 y(b)m(y)j(one)e(or)g(few)h(long)d(paths,)j(since)g(these)g(states)
g(can)g(only)e(b)s(e)i(visited)e(if)g(man)m(y)i(other)f(states)h(are)
-42 4414 y(visited)h(as)h(w)m(ell.)e(Th)m(us,)j(errors)f(migh)m(t)d(go)
i(undetected)i(with)e(high)g(probabilit)m(y)e(and)i(w)m(e)h(ha)m(v)m(e)
h(no)-42 4530 y(b)s(ound)25 b(on)f(the)g(probabilit)m(y)e(of)i(false)g
(p)s(ositiv)m(es,)g(ev)m(en)h(if)e(the)i(a)m(v)m(erage)g(probabilit)m
(y)d(that)i(a)g(particular)-42 4646 y(state)33 b(is)f(omitted)f(is)g
(small.)f(Hence,)k(when)f(a)f(v)m(eri\014er)h(based)g(on)f(this)g(sc)m
(heme)i(rep)s(orts)e(`no)g(errors',)-42 4763 y(it)g(is)g(imp)s(ossible)
e(for)i(the)h(user)h(to)e(assess)j(the)e(probabilit)m(y)d(\(b)s(ound\))
j(that)f(this)h(rep)s(ort)f(is)g(false.)56 4898 y(In)39
b(con)m(trast,)g(W)-8 b(olp)s(er)37 b(and)h(Lero)m(y)h(\(1993\))f
(presen)m(ted)i(an)e(analysis)g(for)g(a)g(new)h(sc)m(heme,)g(whic)m(h)
-42 5015 y(they)46 b(called)e(hash)h(compaction,)f(that)g(yields)h(an)f
(upp)s(er)h(b)s(ound)g(on)g(the)g(probabilit)m(y)e(that)i(the)-42
5131 y(searc)m(h)h(b)s(ecomes)e(incomplete,)e(i.e.)i(that)f(one)h(has)g
(ev)m(en)i(one)e(omission)d(during)j(the)g(searc)m(h.)h(T)-8
b(o)-42 5247 y(ac)m(hiev)m(e)40 b(this)d(impro)m(v)m(emen)m(t)h(in)f
(the)i(reliabilit)m(y)34 b(of)k(the)g(sc)m(heme,)i(the)e(hash)h
(compaction)e(metho)s(d)-42 5363 y(requires)i(more)e(memory:)g(it)g
(stores)i(compressed)g(v)-5 b(alues)38 b(with)f(t)m(ypically)g(64)g
(bits)h(for)f(eac)m(h)i(state)-42 5479 y(in)30 b(a)g(con)m(v)m(en)m
(tional)g(hash)h(table.)e(F)-8 b(urthermore,)30 b(W)-8
b(olp)s(er)29 b(and)i(Lero)m(y)g(found)f(the)g(hash)h(compaction)-42
5596 y(sc)m(heme)37 b(to)d(b)s(e)i(sligh)m(tly)d(sup)s(erior)h(to)h(a)g
(bitstate)f(hashing)h(sc)m(heme)h(in)f(whic)m(h)g(m)m(ultiple)d
(instead)j(of)-42 5712 y(t)m(w)m(o)h(bits/hash)g(v)-5
b(alues)35 b(are)g(used)h(for)f(eac)m(h)h(state.)g(When)g(a)f(v)m
(eri\014er)g(based)h(on)g(hash)f(compaction)p eop
%%Page: 3 3
3 2 bop -42 100 a Fl(Intr)l(o)l(duction)3296 b Fm(3)-42
365 y Fo(rep)s(orts)29 b(`no)g(errors',)g(it)f(can)h(also)e(rep)s(ort)i
(a)f(b)s(ound)h(\(t)m(ypically)e(0.1\045\))i(on)f(the)h(probabilit)m(y)
e(that)i(the)-42 482 y(rep)s(ort)k(is)f(false.)56 598
y(An)46 b(impro)m(v)m(emen)m(t)g(of)f(the)h(hash)h(compaction)d(sc)m
(heme)j(w)m(as)g(in)m(tro)s(duced)f(b)m(y)h(Stern)f(and)g(Dill)-42
714 y(\(1995b\),)31 b(whic)m(h)h(di\013ers)f(from)f(the)i(previous)g
(sc)m(heme)g(in)f(t)m(w)m(o)h(w)m(a)m(ys.)h(First,)e(the)g(impro)m(v)m
(ed)h(sc)m(heme)-42 830 y(uses)j(op)s(en)e(addressing)h(instead)e(of)h
(c)m(haining)f(to)h(resolv)m(e)g(collisions)e(in)h(the)h(hash)h(table.)
e(Chaining)-42 946 y(requires)39 b(storing)d(an)h(additional)e(p)s(oin)
m(ter)i(b)s(esides)h(the)g(compressed)g(state.)g(Since)g(a)f(p)s(oin)m
(ter)g(has)-42 1063 y(roughly)45 b(the)g(same)g(size)h(as)f(the)h
(compressed)g(state,)g(c)m(haining)e(roughly)g(doubles)h(the)h(memory)
-42 1179 y(requiremen)m(ts.)31 b(Second,)g(in)e(the)h(impro)m(v)m(ed)f
(sc)m(heme)i(the)f(prob)s(e)g(sequence)i(of)d(a)h(state)g({)f(the)h
(indices)-42 1295 y(for)44 b(searc)m(hing)g(the)g(hash)g(table)f({)g
(is)g(calculated)g(indep)s(enden)m(tly)h(from)e(the)i(compressed)h(v)-5
b(alue.)-42 1411 y(Th)m(us,)33 b(the)e(n)m(um)m(b)s(er)h(of)e(bits)g
(one)i(has)f(to)f(store)i(for)e(eac)m(h)i(state)f(is)f(reduced)j(to)d
(t)m(ypically)g(40.)g(In)i(the)-42 1528 y(impro)m(v)m(ed)39
b(sc)m(heme,)h(the)e(probabilit)m(y)f(that)h(a)g(particular)f(state)i
(is)e(omitted)g(during)h(its)g(insertion)-42 1644 y(in)m(to)25
b(the)g(hash)h(table)e(is)g(roughly)h(prop)s(ortional)d(to)j(the)g
(length)g(of)f(the)i(prob)s(e)f(sequence)i(used)g(during)-42
1760 y(the)33 b(insertion.)56 1876 y(In)h(this)f(pap)s(er,)g(w)m(e)i
(presen)m(t)g(and)e(analyze)g(a)g(new)i(probabilistic)30
b(v)m(eri\014cation)j(sc)m(heme)h(that)f(is)g(a)-42 1993
y(v)-5 b(ariation)28 b(of)i(the)h(impro)m(v)m(ed)f(hash)g(compaction)f
(metho)s(d.)h(The)h(ma)5 b(jor)29 b(di\013erence)i(is)e(that)h(the)h
(new)-42 2109 y(algorithm)37 b(calculates)i(a)h(b)s(ound)f(on)h(the)g
(omission)e(probabilit)m(y)g(for)h(eac)m(h)i Fp(particular)d
Fo(state)i(b)m(y)-42 2225 y(reasoning)31 b(ab)s(out)g(a)g(longest)g
(path)g(in)f(the)i(breadth-\014rst)g(tree)f(of)g(the)h(reac)m(hable)f
(state)h(space.)g(The)-42 2341 y(new)g(analysis)d(yields)h(a)g(tigh)m
(ter)g(b)s(ound)h(on)f(the)g(probabilit)m(y)f(of)h(false)f(p)s(ositiv)m
(es)h(and)h(th)m(us)g(requires)-42 2457 y(few)m(er)39
b(bits)e(p)s(er)h(state)g(for)e(the)i(same)f(v)-5 b(alue)37
b(of)g(the)h(b)s(ound)g(on)f(the)h(probabilit)m(y)-8
b(.)35 b(The)k(analysis)d(is)-42 2574 y(based)30 b(on)f(the)h(insigh)m
(t)e(that)h(an)g(error)g(state)g(will)e(not)i(b)s(e)g(omitted)f(if)g
(no)h(state)g(is)g(omitted)e(on)i(some)-42 2690 y Fp(path)36
b Fo(from)e(the)i(startstate)f(to)g(the)h(error)f(state.)h(The)g
(omission)d(probabilit)m(y)g(for)i(the)g(error)h(state)-42
2806 y(th)m(us)d(dep)s(ends)g(on)f(the)g(length)f(of)h(the)g(paths)g
(leading)e(to)h(it.)g(By)h(emplo)m(ying)e(breadth-\014rst)j(searc)m(h,)
-42 2922 y(the)43 b(analysis)f(can)h(use)g(a)g(shortest)g(path)g(to)f
(the)h(error)f(state)h(for)f(calculating)e(a)i(b)s(ound)h(on)g(the)-42
3039 y(omission)36 b(probabilit)m(y)-8 b(.)36 b(In)m(tuitiv)m(ely)-8
b(,)37 b(if)f(one)i(has)g(a)f(large)g(state)g(space)i(with)e(one)h
(error)f(state,)i(the)-42 3155 y(error)d(state)f(will)e(b)s(e)j
(explored)f(if)g(none)g(of)g(p)s(ossibly)g(man)m(y)g(omissions)f(hits)h
(the)h(shortest)g(path)f(to)-42 3271 y(the)f(error)f(state.)h(The)g
(previous)f(analysis,)g(in)f(con)m(trast,)i(allo)m(w)m(ed)e(not)h(ev)m
(en)i(one)e(omission)e(among)-42 3387 y(the)i(reac)m(hable)f(states.)h
(F)-8 b(urthermore,)31 b(the)i(new)g(sc)m(heme)g(emplo)m(ys)f(ordered)g
(hashing)g(\(Am)m(ble)f(and)-42 3504 y(Kn)m(uth)26 b(1974\),)f(whic)m
(h)h(can)f(reduce)i(the)f(length)f(of)g(the)g(prob)s(e)h(sequences)i
(for)d(unsuccessful)j(searc)m(hes)-42 3620 y(in)k(op)s(en)h(addressing)
g(and)g(th)m(us)g(also)f(reduce)i(the)f(omission)e(probabilit)m(y)-8
b(.)56 3736 y(If)37 b Fn(n)g Fo(denotes)h(the)f(n)m(um)m(b)s(er)g(of)f
(states)i(in)e(the)h(reac)m(habilit)m(y)f(graph)g(and)h
Fn(d)f Fo(is)h(its)f(diameter,)g(the)-42 3852 y(new)28
b(sc)m(heme)f(roughly)f(sa)m(v)m(es)i(a)e(factor)g(of)f
Fn(n=d)h Fo(in)g(the)g(b)s(ound)h(on)f(the)h(probabilit)m(y)d(of)h
(false)h(p)s(ositiv)m(es)-42 3968 y(in)34 b(comparison)f(to)h(the)g
(previous)h(hash)g(compaction)d(sc)m(heme,)k(or)e(roughly)f(log)2988
3992 y Fj(2)3028 3968 y Fo(\()p Fn(n=d)p Fo(\))g(bits)h(in)g(the)-42
4085 y(compressed)25 b(state)f(descriptor.)g(In)g(the)g(industrial)d
(proto)s(cols)i(w)m(e)h(examined,)f(the)h(ratio)e(of)h
Fn(n=d)g Fo(grew)-42 4201 y(exp)s(onen)m(tially)39 b(with)h(the)h(n)m
(um)m(b)s(er)f(of)g(pro)s(cessors)h(of)f(the)g(proto)s(cols,)f(whic)m
(h)i(enabled)f(a)g(roughly)-42 4317 y(50\045)33 b(reduction)f(in)g(the)
h(size)g(of)f(the)h(compressed)h(v)-5 b(alues.)56 4433
y(W)d(e)31 b(implemen)m(ted)e(the)i(new)g(sc)m(heme)h(in)d(the)i(con)m
(text)h(of)e(the)h(Mur)p Fn(')f Fo(v)m(eri\014cation)g(system)i(dev)m
(el-)-42 4550 y(op)s(ed)h(at)g(Stanford)f(\(Dill)d(et)k(al.)e(1992\).)h
(The)i(new)f(implemen)m(tation)d(includes)i(a)g(memory)g(e\016cien)m(t)
-42 4666 y(metho)s(d)g(to)h(store)g(the)g(information)c(needed)34
b(for)e(error)h(trace)g(generation.)f(A)g(\014le)g(is)h(used)g(to)g
(store)-42 4782 y(this)h(information)c(instead)j(of)g(the)h(main)e
(memory)-8 b(.)32 b(In)i(exp)s(erimen)m(ts)g(with)f(one)h(arti\014cial)
d(and)i(t)m(w)m(o)-42 4898 y(industrial)23 b(proto)s(cols,)g(w)m(e)i
(measured)f(the)h(probabilities)c(of)j(false)f(p)s(ositiv)m(es)h(b)m(y)
h(running)f(the)g(v)m(eri\014er)-42 5015 y(100)i(times)g(and)h
(compared)g(the)g(resulting)e(v)-5 b(alues)27 b(with)f(the)h(b)s(ounds)
h(on)e(this)h(probabilit)m(y)d(obtained)-42 5131 y(b)m(y)40
b(the)g(analysis.)e(In)h(all)e(three)j(exp)s(erimen)m(ts,)g(the)f(b)s
(ounds)h(on)f(the)g(probabilit)m(y)e(yielded)i(b)m(y)h(the)-42
5247 y(analysis)30 b(w)m(ere)i(conserv)-5 b(ativ)m(e)32
b(but)f(still)d(quite)j(accurate.)g(This)g(accuracy)h(is)e(remark)-5
b(able,)29 b(since)j(the)-42 5363 y(analysis)g(uses)i(only)e(one)g(of)g
(the)h(shortest)g(paths)g(to)f(eac)m(h)i(state,)e(while)g(t)m(ypical)f
(proto)s(cols)h(usually)-42 5479 y(ha)m(v)m(e)42 b(man)m(y)e(paths)g
(leading)f(to)g(a)h(state,)g(whic)m(h,)h(in)m(tuitiv)m(ely)-8
b(,)38 b(migh)m(t)h(reduce)i(the)f(probabilit)m(y)e(of)-42
5596 y(false)33 b(p)s(ositiv)m(es.)56 5712 y(The)k(pap)s(er)f(is)f
(organized)g(as)i(follo)m(ws.)d(Section)i(2)g(reviews)h(the)f(kno)m(wn)
h(probabilistic)c(metho)s(ds)p eop
%%Page: 4 4
4 3 bop -42 100 a Fm(4)1474 b Fl(A)30 b(New)g(Scheme)g(for)g
(Memory-E\016cient)i(Pr)l(ob)l(abilistic)g(V)-6 b(eri\014c)l(ation)-42
365 y Fo(for)38 b(explicit)e(state)i(en)m(umeration.)f(The)h(new)h(sc)m
(heme)g(is)e(presen)m(ted)i(and)f(analyzed)g(in)f(Section)g(3.)-42
482 y(In)g(Sections)f(4)f(and)h(5,)g(w)m(e)g(discuss)h(the)g(implemen)m
(tation)32 b(of)j(the)i(new)f(sc)m(heme)h(and)f(describ)s(e)h(the)-42
598 y(results)32 b(on)f(sample)f(proto)s(cols.)g(Finally)-8
b(,)28 b(Section)i(6)h(con)m(tains)g(some)g(conclusions)f(and)h
(suggestions)-42 714 y(for)i(future)f(researc)m(h.)-42
1071 y Fk(2)117 b(PR)m(OBABILISTIC)38 b(METHODS)h(F)m(OR)g(EXPLICIT)f
(ST)-10 b(A)g(TE)134 1204 y(ENUMERA)g(TION)-42 1507 y
Fi(2.1)136 b(Explicit)46 b(state)g(en)l(umeration)-42
1740 y Fo(In)34 b(explicit)d(state)i(en)m(umeration,)f(the)i(automatic)
d(v)m(eri\014er)i(tries)g(to)f(examine)g(all)f(reac)m(hable)i(states)
-42 1856 y(from)k(a)h(set)g(of)g(p)s(ossible)f(start)h(states.)h
(Either)f(breadth-\014rst)g(or)g(depth-\014rst)g(searc)m(h)i(can)e(b)s
(e)g(em-)-42 1973 y(plo)m(y)m(ed)i(for)e(the)h(state)f(en)m(umeration)g
(pro)s(cess.)i(Both)f(the)g(breadth-\014rst)g(and)f(the)h
(depth-\014rst)h(al-)-42 2089 y(gorithms)31 b(are)i(straigh)m(tforw)m
(ard.)f(A)h(depth-\014rst)g(algorithm)d(w)m(as,)j(for)f(example,)h(giv)
m(en)f(b)m(y)i(W)-8 b(olp)s(er)-42 2205 y(and)33 b(Lero)m(y)g
(\(1993\).)56 2322 y(Tw)m(o)42 b(data)f(structures)h(are)f(needed)i
(for)d(p)s(erforming)f(the)j(state)f(en)m(umeration.)g(First,)f(a)h
(state)-42 2438 y(table)30 b(stores)h(all)c(the)k(states)g(that)e(ha)m
(v)m(e)j(b)s(een)e(examined)g(so)g(far)f(and)h(is)g(used)h(to)f(decide)
g(whether)h(a)-42 2555 y(newly-reac)m(hed)j(state)e(is)f(old)g(\(has)h
(b)s(een)g(visited)g(b)s(efore\))f(or)h(new)g(\(has)g(not)g(b)s(een)h
(visited)e(b)s(efore\).)-42 2671 y(Besides)37 b(the)e(state)h(table,)e
(a)h(state)h(queue)h(holds)d(all)f(activ)m(e)j(states)g(\(states)g
(that)f(still)e(need)j(to)f(b)s(e)-42 2787 y(explored\).)i(Dep)s
(ending)e(on)g(the)h(organization)e(of)h(this)g(queue,)i(the)g(v)m
(eri\014er)f(do)s(es)g(a)f(breadth-\014rst)-42 2903 y(or)e(a)f
(depth-\014rst)h(searc)m(h.)56 3021 y(The)41 b(state)f(table)f(will)e
(ev)m(en)m(tually)k(hold)e(all)e(reac)m(hable)j(states,)h(unless)f(the)
h(n)m(um)m(b)s(er)f(of)f(states)-42 3137 y(exceeds)30
b(the)d(capacit)m(y)g(of)f(the)i(table,)e(in)g(whic)m(h)h(case)h(the)f
(v)m(eri\014er)g(halts)g(with)f(an)h(error)f(message.)i(In)-42
3253 y(practice,)33 b(the)g(total)e(memory)h(a)m(v)-5
b(ailable)30 b(for)i(the)h(table)f(is)g(the)h(limiting)28
b(resource)34 b(in)e(v)m(eri\014cation.)-42 3502 y Fi(2.2)136
b(The)44 b(bitstate)j(hashing)e(metho)t(d)-42 3735 y
Fo(The)30 b(bitstate)f(hashing)f(or)g(sup)s(ertrace)i(metho)s(d)e(in)m
(tro)s(duced)h(b)m(y)h(Holzmann)d(\(1987,)h(1991\))g(aims)f(at)-42
3851 y(reducing)36 b(the)g(memory)e(requiremen)m(ts)i(for)f(the)h
(state)g(table.)e(Instead)j(of)e(main)m(taining)d(a)j(con)m(v)m(en-)-42
3968 y(tional)g(table)h(in)g(whic)m(h)i(the)f(state)g(descriptors)h
(are)f(stored,)g(bitstate)g(hashing)f(only)g(main)m(tains)f(a)-42
4084 y(h)m(uge)g(table)e(of)h(bits)f(whic)m(h)h(are)g(initially)c(set)k
(to)g(zero.)g(When)h(a)e(state)i(is)e(inserted)h(in)m(to)f(the)i
(table,)-42 4200 y(t)m(w)m(o)41 b(hash)g(v)-5 b(alues)40
b(are)g(calculated)g(from)f(the)h(state)h(descriptor)f(and)h(the)f
(bits)g(corresp)s(onding)g(to)-42 4316 y(these)30 b(hash)g(v)-5
b(alues)28 b(are)h(set)h(to)e(one.)h(When)h(the)f(algorithm)c(examines)
k(a)f(newly)i(reac)m(hed)g(state)f(and)-42 4432 y(\014nds)k(that)e(the)
h(t)m(w)m(o)g(bits)f(corresp)s(onding)g(to)g(this)g(state)h(are)g
(already)f(set)h(to)f(one,)g(it)g(assumes)h(that)-42
4549 y(it)k(has)g(visited)g(the)g(newly)h(reac)m(hed)g(state)g
(earlier.)d(If)i(the)h(assumption)e(is)h(incorrect,)g(this)g(results)
-42 4665 y(in)e(the)h Fp(omission)e Fo(of)h(the)h(newly)g(reac)m(hed)g
(state)g(and)g({)f(since)h(the)g(searc)m(h)g(algorithm)d(bac)m(ktrac)m
(ks)-42 4781 y(when)e(it)e(\014nds)i(a)f(state)g(that)g(has)g(b)s(een)h
(searc)m(hed)g(already)f({)f(ma)m(y)h(p)s(oten)m(tially)e(cause)j(the)f
(omission)-42 4897 y(of)k(all)d(successor)35 b(states)e(of)g(the)g
(omitted)e(state.)56 5015 y(Holzmann)39 b(\(1995\))h(also)f(deriv)m(ed)
j(appro)m(ximation)c(form)m(ulas)h(for)h(the)h(exp)s(ected)i
Fp(co)m(v)m(erage)d Fo(of)-42 5131 y(the)30 b(bitstate)e(hashing)h
(metho)s(d,)f(where)i(co)m(v)m(erage)g(is)f(de\014ned)h(as)f(the)g(p)s
(ercen)m(tage)h(of)e(the)i(reac)m(hable)-42 5247 y(states)25
b(actually)e(explored)h(b)m(y)h(the)f(v)m(eri\014er.)h(Note)f(that)f
(the)i(exp)s(ected)g(co)m(v)m(erage)g(equals)g(the)f(a)m(v)m(erage)-42
5363 y(probabilit)m(y)29 b(that)h(a)g(particular)e(state)j(is)f(not)g
(omitted,)f(where)j(the)e(a)m(v)m(erage)i(is)d(calculated)h(o)m(v)m(er)
h(all)-42 5479 y(reac)m(hable)23 b(states.)h(Ho)m(w)m(ev)m(er,)g(this)f
Fp(a)m(v)m(erage)g Fo(do)s(es)g(not)f(pro)m(vide)h(us)g(with)f(a)g
Fp(b)s(ound)i Fo(on)e(the)h(omission)-42 5596 y(probabilit)m(y)32
b(for)i(a)f(particular)f(state.)j(Some)e(states)i(migh)m(t)e(ha)m(v)m
(e)i(an)f(omission)e(probabilit)m(y)f(whic)m(h)-42 5712
y(is)c(m)m(uc)m(h)h(higher)e(than)i(this)e(a)m(v)m(erage.)j(In)m
(tuitiv)m(ely)-8 b(,)26 b(these)j(are)e(the)g(states)h(whic)m(h)g(are)f
(only)g(reac)m(hable)p eop
%%Page: 5 5
5 4 bop -42 100 a Fl(Pr)l(ob)l(abilistic)33 b(Metho)l(ds)e(for)f
(Explicit)h(State)e(Enumer)l(ation)1822 b Fm(5)-42 365
y Fo(b)m(y)37 b(one)e(or)g(few)h(long)d(paths,)j(since)g(these)g
(states)g(can)g(only)e(b)s(e)i(visited)e(if)g(man)m(y)i(other)f(states)
h(are)-42 482 y(visited)d(as)f(w)m(ell.)56 601 y(Clearly)-8
b(,)25 b(the)g(states)i(with)e(a)g(high)g(omission)e(probabilit)m(y)h
(migh)m(t)g(v)m(ery)j(w)m(ell)d(b)s(e)i(the)g(only)f(states)h(to)-42
717 y(displa)m(y)32 b(proto)s(col)e(errors,)i(whose)h(exp)s(osure)h(is)
d(the)h(goal)e(of)i(v)m(eri\014cation.)f(Therefore,)i(the)f(bitstate)
-42 833 y(hashing)h(metho)s(d)f(do)s(es)h(not)g(pro)m(vide)g(a)f(b)s
(ound)h(on)g(the)g(probabilit)m(y)e(that)h(the)h(v)m(eri\014er)h
(misses)f(the)-42 949 y(proto)s(col)27 b(errors)i(and)f(pro)s(duces)i
(false)e(p)s(ositiv)m(es.)g(In)h(addition,)d(the)j(omission)d
(probabilit)m(y)h(of)h(these)-42 1066 y(states)37 b(migh)m(t)c(b)s(e)j
(close)f(to)g(one,)h(so)f(that)g(ev)m(en)i(re-running)e(the)g(v)m
(eri\014er)h(with)f(indep)s(enden)m(t)h(hash)-42 1182
y(functions)d(will)d(not)j(signi\014can)m(tly)e(reduce)j(the)f(high)f
(omission)f(probabilit)m(y)-8 b(.)-42 1448 y Fi(2.3)136
b(The)44 b(hash)h(compaction)g(metho)t(d)-42 1700 y Fs(Basic)d(scheme)
-42 1836 y Fo(The)34 b(hash)e(compaction)f(metho)s(d)h(w)m(as)h(in)m
(tro)s(duced)f(b)m(y)h(W)-8 b(olp)s(er)32 b(and)g(Lero)m(y)h(\(1993\).)
e(Lik)m(e)h(bitstate)-42 1952 y(hashing,)f(hash)h(compaction)e(aims)g
(at)h(reducing)g(the)g(memory)g(requiremen)m(ts)h(for)e(the)i(state)g
(table.)-42 2069 y(Ho)m(w)m(ev)m(er,)42 b(hash)e(compaction)d(stores)j
(a)f(compressed)i(state)e(descriptor)g(in)g(a)g(con)m(v)m(en)m(tional)g
(table)-42 2185 y(instead)33 b(of)e(setting)h(t)m(w)m(o)h(bits)e
(corresp)s(onding)h(to)g(hash)h(v)-5 b(alues)32 b(of)f(the)i(state)f
(descriptor)h(in)e(a)h(table)-42 2301 y(of)h(bits.)56
2420 y(F)-8 b(urthermore,)28 b(W)-8 b(olp)s(er)28 b(and)i(Lero)m(y)f
(deriv)m(ed)h(an)f(upp)s(er)g(b)s(ound)g(on)g(the)h(probabilit)m(y)c
(of)j(omitting)-42 2536 y Fp(ev)m(en)49 b(one)42 b Fo(state,)g(whic)m
(h)g(is)g(the)g(probabilit)m(y)d(that)j(full)e(co)m(v)m(erage)j(is)e
(not)g(ac)m(hiev)m(ed.)i(Note)f(that)-42 2653 y(this)32
b(probabilit)m(y)d(is)i(di\013eren)m(t)h(from)e(the)i(probabilit)m(y)e
(that)h(a)g(particular)f(state)i(is)f(omitted,)f(whose)-42
2769 y(a)m(v)m(erage)35 b(o)m(v)m(er)g(all)c(states)k(w)m(as)f(appro)m
(ximated)f(b)m(y)i(Holzmann)d(for)h(bitstate)g(hashing.)g(W)-8
b(e)34 b(will)e(call)-42 2885 y(the)37 b(probabilit)m(y)e(that)h(a)g
(particular)e(state)j(is)f(omitted)f Fp(state)42 b(omission)e
(probabilit)m(y)34 b Fo(and)j(the)-42 3001 y(probabilit)m(y)31
b(of)h(omitting)e(ev)m(en)k(one)f(state)g Fp(omission)j(probabilit)m(y)
p Fo(.)56 3120 y(In)h(hash)g(compaction,)e(a)i(compression)f(function)g
Fn(c)g Fo(is)g(used)i(to)e(obtain)g(the)h(compressed)h(v)-5
b(alue)-42 3237 y Fn(c)p Fo(\()p Fn(s)p Fo(\))28 b Fh(2)g(f)p
Fo(0)p Fn(;)17 b(:)g(:)g(:)e(;)i(l)5 b Fh(\000)s Fo(1)p
Fh(g)32 b Fo(to)f(b)s(e)h(stored)g(in)e(the)i(table)f(for)g(eac)m(h)h
(state)g Fn(s)p Fo(.)f(Here,)i Fn(l)g Fo(denotes)g(the)f(n)m(um)m(b)s
(er)-42 3353 y(of)h(all)d(p)s(ossible)i(compressed)i(v)-5
b(alues.)32 b(If)h(w)m(e)h(use)f Fn(b)g Fo(bits)f(for)g(these)i(v)-5
b(alues,)33 b Fn(l)13 b Fo(=)e(2)2974 3317 y Fg(b)3008
3353 y Fo(.)56 3472 y(In)33 b(practice,)g(one)g(can)g(use)h(univ)m
(ersal)f(hashing)f(\(Carter)h(and)g(W)-8 b(egman)33 b(1979\))e(to)i
(calculate)f(the)-42 3588 y(compressed)39 b(v)-5 b(alue)37
b(from)g(the)h(state)g(descriptor,)g(as)f(suggested)i(b)m(y)g(W)-8
b(olp)s(er)36 b(and)i(Lero)m(y)g(\(1995\))f(.)-42 3704
y(Then,)25 b(the)e(probabilit)m(y)f(that)g(t)m(w)m(o)i(di\013eren)m(t)g
(states)g(ha)m(v)m(e)g(the)g(same)e(compressed)j(v)-5
b(alue)22 b(is)h(b)s(ounded,)-42 3821 y(namely)36 b(Pr\()p
Fn(c)p Fo(\()p Fn(s)569 3836 y Fj(1)609 3821 y Fo(\))11
b(=)g Fn(c)p Fo(\()p Fn(s)871 3836 y Fj(2)910 3821 y
Fo(\)\))35 b Fh(\024)g Fo(1)p Fn(=l)r Fo(,)i(for)f(all)f
Fn(s)1665 3836 y Fj(1)1704 3821 y Fn(;)17 b(s)1794 3836
y Fj(2)1868 3821 y Fh(2)35 b Fn(S)6 b Fo(,)37 b Fn(s)2145
3836 y Fj(1)2202 3821 y Fh(6)p Fo(=)18 b Fn(s)2342 3836
y Fj(2)2382 3821 y Fo(,)37 b(where)h Fn(S)k Fo(denotes)c(the)f(set)h
(of)e(all)-42 3937 y(p)s(ossible)e(states.)h(This)f(b)s(ound)h(is)e(ac)
m(hiev)m(ed)j(b)m(y)f(c)m(ho)s(osing)f(the)g(compression)g(function)g
(at)g(random)-42 4053 y(from)44 b(a)h(univ)m(ersal)g(class)g(of)g(hash)
h(functions)f(at)f(the)i(start)f(of)f(the)i(v)m(eri\014er,)g(thereb)m
(y)h(defeating)-42 4169 y(p)s(ossible)41 b(adv)m(ersaries.)h(A)g
(consequence)i(of)c(this)h(b)s(ound)h(is)e(that)h(the)h(omission)d
(probabilit)m(y)g(will)-42 4286 y(also)32 b(b)s(e)h(b)s(ounded.)-42
4527 y Fs(Impr)-6 b(ovements)40 b(to)i(the)f(b)-6 b(asic)41
b(scheme)-42 4663 y Fo(T)m(ypically)-8 b(,)33 b(the)h(state)g(table)f
(is)f(implemen)m(ted)g(as)i(a)f(hash)h(table.)f(One)h(problem)e(in)h
(hashing)g(is)g(the)-42 4779 y(o)s(ccurrence)e(of)e(collisions.)e(A)i
(collision)d(o)s(ccurs)k(if)e(t)m(w)m(o)i(states)g(hash)g(to)e(the)i
(same)f(slot)g(in)f(the)i(table.)-42 4895 y(This)g(collision)25
b(can)k(b)s(e)g(resolv)m(ed)h(b)m(y)g(either)f(c)m(haining)e(or)i(op)s
(en)g(addressing)g(\(Cormen)g(et)g(al.)f(1990\).)-42
5012 y(Chaining)38 b(requires)i(storing)f(an)g(additional)d(p)s(oin)m
(ter)j(b)s(esides)h(the)f(compressed)i(state.)f(Ho)m(w)m(ev)m(er,)-42
5128 y(a)e(p)s(oin)m(ter)g(has)g(roughly)g(the)g(same)g(size)g(as)g
(the)h(compressed)g(state)g(and)f(th)m(us)h(c)m(haining)e(appro)m(x-)
-42 5244 y(imately)i(doubles)h(the)h(memory)e(requiremen)m(ts.)j
(Consequen)m(tly)-8 b(,)42 b(op)s(en)f(addressing)f(is)g(preferable)-42
5360 y(o)m(v)m(er)34 b(c)m(haining)e(for)g(hash)h(compaction.)56
5479 y(In)24 b(op)s(en)g(addressing,)g(a)g(v)m(ectorial)f(hash)h
(function)f Fn(h)p 1944 5492 57 4 v 24 w Fo(is)h(applied)e(to)i(eac)m
(h)g(state)h Fn(s)e Fo(yielding)f(a)i(prob)s(e)-42 5596
y(sequence)32 b Fn(h)415 5611 y Fj(0)454 5596 y Fo(\()p
Fn(s)p Fo(\))p Fn(;)17 b(h)676 5611 y Fj(1)716 5596 y
Fo(\()p Fn(s)p Fo(\))p Fn(;)g(:)g(:)g(:)e(;)i(h)1112
5611 y Fg(m)p Ff(\000)p Fj(1)1269 5596 y Fo(\()p Fn(s)p
Fo(\),)28 b(where)i Fn(m)f Fo(denotes)h(the)f(n)m(um)m(b)s(er)g(of)f
(slots)h(in)e(the)i(hash)h(table)-42 5712 y(and)41 b
Fn(h)212 5727 y Fg(i)241 5712 y Fo(\()p Fn(s)p Fo(\))f(is)g(an)h(index)
g(in)m(to)f(the)h(table.)f(When)h(inserting)f(a)g(state)h(in)f(the)h
(table,)f(the)i(slots)e(are)p eop
%%Page: 6 6
6 5 bop -42 100 a Fm(6)1474 b Fl(A)30 b(New)g(Scheme)g(for)g
(Memory-E\016cient)i(Pr)l(ob)l(abilistic)g(V)-6 b(eri\014c)l(ation)552
166 y
 20472597 8288501 0 0 19997655 8091156 startTexFig
 552 166 a
%%BeginDocument: fi:ProbVer.eps
/$F2psDict 32 dict def 
$F2psDict begin
	$F2psDict /mtrx matrix put

 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y translate xrad yrad scale 0 0 1 startangle endangle arc
	savematrix setmatrix
	} def newpath 0 0 0 0 0 1 DrawEllipse stroke

	end
	/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
	/$F2psEnd {$F2psEnteredState restore end} def
	%%EndProlog

$F2psBegin
1 setlinecap 1 setlinejoin
-2 2 translate
0.000000 123.000000 translate 0.900 -0.900 scale
0.6 setlinewidth
% Ellipse
newpath 156 89 52 15 0 360 DrawEllipse stroke
/Times-Roman findfont 12.000 scalefont setfont
113 93 moveto 
1 -1 scale
(compressed value) gsave  0.000 rotate show grestore 1 -1 scale
/Times-Roman findfont 12.000 scalefont setfont
29 75 moveto 
1 -1 scale
(state) gsave  0.000 rotate show grestore 1 -1 scale
/Times-Roman findfont 12.000 scalefont setfont
36 86 moveto 
1 -1 scale
(s) gsave  0.000 rotate show grestore 1 -1 scale
% Ellipse
newpath 40 75 27 17 0 360 DrawEllipse stroke
% Ellipse
newpath 156 28 52 15 0 360 DrawEllipse stroke
/Times-Roman findfont 12.000 scalefont setfont
118 31 moveto 
1 -1 scale
(probe sequence) gsave  0.000 rotate show grestore 1 -1 scale
% Polyline
newpath 73 38 moveto 80 38 lineto  stroke
/Times-Roman findfont 12.000 scalefont setfont
73 36 moveto 
1 -1 scale
(h) gsave  0.000 rotate show grestore 1 -1 scale
% Polyline
newpath 291 115 moveto 291 45 lineto 256 45 lineto 256 115 lineto closepath  stroke
% Polyline
newpath 256 55 moveto 291 55 lineto  stroke
% Polyline
newpath 256 65 moveto 291 65 lineto  stroke
% Polyline
newpath 256 75 moveto 291 75 lineto  stroke
% Polyline
newpath 256 85 moveto 291 85 lineto  stroke
% Polyline
newpath 256 95 moveto 291 95 lineto  stroke
% Polyline
newpath 256 105 moveto 291 105 lineto  stroke
/Times-Roman findfont 12.000 scalefont setfont
261 27 moveto 
1 -1 scale
(hash ) gsave  0.000 rotate show grestore 1 -1 scale
/Times-Roman findfont 12.000 scalefont setfont
261 40 moveto 
1 -1 scale
(table) gsave  0.000 rotate show grestore 1 -1 scale
/Times-Roman findfont 12.000 scalefont setfont
295 84 moveto 
1 -1 scale
(m slots) gsave  0.000 rotate show grestore 1 -1 scale
/Times-Roman findfont 12.000 scalefont setfont
261 126 moveto 
1 -1 scale
(b bits) gsave  0.000 rotate show grestore 1 -1 scale
newpath 95.794 28.812 moveto 104.000 28.000 lineto 97.142 32.578 lineto stroke
newpath 139.040 125.923 104.003 -142.075 -109.689 arc
stroke
newpath 95.948 87.220 moveto 104.000 89.000 lineto 96.058 91.219 lineto stroke
newpath 102.015 16.603 72.424 118.912 88.429 arcn
stroke
	[4.000000] 0 setdash
% Polyline
newpath 208 90 moveto 256 90 lineto  stroke
	[] 0 setdash
newpath 248.000 88.000 moveto 256.000 90.000 lineto 248.000 92.000 lineto stroke
% Polyline
%newpath 340 2 moveto 2 2 lineto 2 138 moveto 340 138 lineto closepath  stroke
%	[4.000000] 0 setdash
% Interpolated spline
newpath 209 29 moveto
	216.678 31.130 219.928 32.380 222 34 curveto
	224.421 35.893 227.800 41.368 229 44 curveto
	230.622 47.556 232.533 56.204 233 60 curveto
	233.638 65.179 233.638 72.679 233 90 curveto
 stroke
	[] 0 setdash
newpath 235.293 82.079 moveto 233.000 90.000 lineto 231.296 81.932 lineto stroke
/Times-Roman findfont 12.000 scalefont setfont
79 96 moveto 
1 -1 scale
(c) gsave  0.000 rotate show grestore 1 -1 scale
$F2psEnd
%%EndDocument

 endTexFig
 359 1355 a Fp(Figure)37 b(1)56 b Fo(The)34 b(state)f(insertion)e(pro)s
(cess)j(in)e(the)h(hash)g(compaction)e(sc)m(heme)-42
2017 y(tested)e(for)d(emptiness)i(according)e(to)h(this)f(prob)s(e)h
(sequence.)j(The)e(compressed)h(state)e Fn(c)p Fo(\()p
Fn(s)p Fo(\))g(is)f(stored)-42 2133 y(in)34 b(the)g(\014rst)g(empt)m(y)
h(slot)e(found)h(during)f(the)i(prob)s(e)f(sequence.)i(Note,)f(that)e
(eac)m(h)i(prob)s(e)f(sequence)-42 2249 y(has)f(to)g(b)s(e)f(a)h(p)s
(erm)m(utation)e(of)h Fh(f)p Fo(0)p Fn(;)17 b(:)g(:)g(:)e(;)i(m)6
b Fh(\000)g Fo(1)p Fh(g)32 b Fo(if)g(w)m(e)h(w)m(an)m(t)h(ev)m(ery)g
(slot)e(in)g(the)h(table)f(to)g(b)s(e)h(used.)56 2402
y(The)40 b(state)f(insertion)f(pro)s(cess)i(is)e(depicted)i(in)e
(Figure)g(1.)g(A)h(prob)s(e)g(can)g(yield)f(three)i(di\013eren)m(t)-42
2519 y(results:)-50 2935 y(1.)49 b(The)29 b(prob)s(ed)f(slot)f(ma)m(y)h
(b)s(e)h(empt)m(y)-8 b(.)28 b(The)h(state)g Fn(s)f Fo(has)g(not)g(b)s
(een)h(encoun)m(tered)h(previously)e(in)g(the)75 3051
y(searc)m(h)34 b(and)e(its)g(compressed)i(v)-5 b(alue)32
b Fn(c)p Fo(\()p Fn(s)p Fo(\))h(is)f(stored)h(in)f(the)h(slot.)-50
3167 y(2.)49 b(The)36 b(prob)s(ed)f(slot)f(con)m(tains)h(a)g
(compressed)h(state)g(di\013eren)m(t)f(from)f(the)h(compressed)i(state)
e Fn(c)p Fo(\()p Fn(s)p Fo(\))75 3283 y(b)s(eing)29 b(en)m(tered.)i
(This)f(is)f(called)g(a)g Fp(collision)p Fo(.)e(The)j(insertion)f
(algorithm)d(then)31 b(prob)s(es)f(the)g(next)75 3400
y(slot)i(giv)m(en)g(b)m(y)i(the)f(prob)s(e)f(sequence)k
Fn(h)p 1496 3413 57 4 v Fo(\()p Fn(s)p Fo(\).)-50 3516
y(3.)49 b(The)34 b(prob)s(ed)f(slot)f(con)m(tains)h(a)g(compressed)h
(state)f(equal)g(to)g(the)g(compressed)i(state)e Fn(c)p
Fo(\()p Fn(s)p Fo(\))g(b)s(eing)75 3632 y(en)m(tered.)27
b(In)f(this)f(case,)h(the)g(algorithm)c(assumes)27 b(that)e(the)h
(uncompressed)h(states)g(are)e(the)h(same,)75 3748 y(whic)m(h)35
b(ma)m(y)f(or)g(ma)m(y)g(not)g(b)s(e)h(true.)g(The)g(state)g(table)f
(is)f(not)i(mo)s(di\014ed,)e(and)h(the)h(successors)i(of)75
3864 y(the)30 b(curren)m(t)h(state)f Fn(s)g Fo(are)g(not)f(generated)i
(and)f(searc)m(hed.)i(When)e(the)h(uncompressed)g(states)g(are)75
3981 y(indeed)36 b(equal,)g(this)f(is)g(the)h(desired)h(result.)f(When)
g(the)g(uncompressed)i(states)f(are)e(not)h(equal,)75
4097 y(this)43 b(results)h(in)f(an)g Fp(omission)f Fo(of)h(the)h
(curren)m(t)h(state)f Fn(s)p Fo(,)f(and)h(the)g(p)s(ossible)f(omission)
e(of)j(its)75 4213 y(successors)35 b(in)d(the)h(state)g(graph.)56
4629 y(Observ)m(e)j(that)e(only)f(the)i(slots)f(examined)g(using)f(the)
i(prob)s(e)f(sequence)j(can)d(lead)g(to)f(omissions.)-42
4745 y(Usually)-8 b(,)25 b(only)g(a)g(few)h(slots)f(are)g(examined)g(b)
s(efore)h(an)f(empt)m(y)h(slot)f(is)f(found)i(\(whic)m(h)g(is)f(wh)m(y)
h(hashing)-42 4862 y(is)40 b(attractiv)m(e)h(in)e(the)i(\014rst)g
(place\).)f(Th)m(us,)i(if)d(one)i(calculates)f(prob)s(e)g(sequence)j
(and)e(compressed)-42 4978 y(v)-5 b(alue)25 b(indep)s(enden)m(tly)-8
b(,)26 b(the)g(same)f(compressed)i(v)-5 b(alue)24 b(can)i(b)s(e)f
(stored)h(at)f(sev)m(eral)h(lo)s(cations)d(without)-42
5094 y(leading)31 b(to)i(omissions.)56 5247 y(The)41
b(impro)m(v)m(ed)e(hash)h(compaction)f(sc)m(heme)i({)e(using)g(op)s(en)
h(addressing)g(and)g(an)g(indep)s(enden)m(t)-42 5363
y(calculation)i(of)i(prob)s(e)g(sequence)j(and)d(compressed)h(v)-5
b(alue)44 b({)f(w)m(as)i(presen)m(ted)i(and)d(analyzed)g(b)m(y)-42
5479 y(Stern)30 b(and)f(Dill)d(\(1995b\).)i(With)h(the)g(impro)m(v)m
(ed)g(sc)m(heme,)h(it)e(is)h(p)s(ossible,)f(for)h(example,)f(to)h
(store)g(80)-42 5596 y(million)g(states)k(in)f(a)g(hash)i(table)e(of)g
(size)g(400)g(megab)m(ytes)i(with)e(an)h(omission)d(probabilit)m(y)h
(smaller)-42 5712 y(than)i(0.13\045)f(using)h(40-bit)d(compression.)p
eop
%%Page: 7 7
7 6 bop -42 100 a Fl(The)31 b(New)f(Pr)l(ob)l(abilistic)i(V)-6
b(eri\014c)l(ation)30 b(Scheme)2193 b Fm(7)-42 365 y
Fk(3)117 b(THE)38 b(NEW)h(PR)m(OBABILISTIC)f(VERIFICA)-10
b(TION)38 b(SCHEME)-42 708 y Fi(3.1)136 b(Bounding)44
b(the)h(maxim)l(um)h(state)g(omission)g(probabilit)l(y)-42
950 y Fo(In)34 b(probabilistic)c(v)m(eri\014cation)i(sc)m(hemes,)j(the)
f(v)m(eri\014er)f(only)g(pro)s(duces)h(false)e(p)s(ositiv)m(es)h(if)f
(it)g(misses)-42 1066 y(all)k(error)h(states)h(of)e(the)i(proto)s(col.)
e(Therefore,)i(if)e(w)m(e)i(ha)m(v)m(e)g(a)f(b)s(ound)h(on)f(the)g
Fp(maxim)m(um)k(state)-42 1182 y(omission)d(probabilit)m(y)p
Fo(,)32 b(where)k(the)e(maxim)m(um)e(is)i(tak)m(en)h(o)m(v)m(er)g(all)d
(reac)m(hable)j(states,)g(it)e(is)h(also)-42 1298 y(a)43
b(b)s(ound)g(on)g(the)g(probabilit)m(y)e(of)h(the)h(v)m(eri\014er)h
(pro)s(ducing)e(false)g(p)s(ositiv)m(es.)h(Clearly)-8
b(,)42 b(the)h(omis-)-42 1415 y(sion)35 b(probabilit)m(y)e(calculated)i
(in)f(the)i(case)g(of)f(hash)h(compaction)e(also)g(pro)m(vides)i(a)f(b)
s(ound)g(on)h(the)-42 1531 y(probabilit)m(y)31 b(of)h(false)g(p)s
(ositiv)m(es)h(but)f(not)h(a)f(tigh)m(t)g(one.)56 1656
y(In)k(the)g(follo)m(wing)c(analysis,)j(w)m(e)h(will)d(assume)j(that)g
(breadth-\014rst)f(searc)m(h)i(is)e(emplo)m(y)m(ed)h(for)f(the)-42
1772 y(state)g(space)g(searc)m(h.)g(In)g(breadth-\014rst)f(searc)m(h,)i
(the)e(states)h(are)f(explored)g(in)g(lev)m(els,)g(where)h(states)-42
1889 y(in)27 b(the)g Fn(i)p Fo(th)h(lev)m(el)f(are)g(reac)m(hable)g
(from)f(the)h(startstate)h(in)e(no)h(less)h(than)f Fn(i)g
Fo(transitions.)f(Assume)i(that)-42 2005 y(the)34 b(length)f(of)g(the)g
(longest)g(of)g(the)g(shortest)h(paths)g(from)e(the)i(startstate)f(to)g
(an)m(y)h(reac)m(hable)g(state)-42 2121 y(is)f Fn(d)p
Fo(,)g(i.e.)g(the)h(diameter)e(of)g(the)i(reac)m(habilit)m(y)e(graph)h
(is)g Fn(d)p Fo(.)g(Clearly)-8 b(,)32 b(the)i(breadth-\014rst)g(searc)m
(h)g(will)-42 2237 y(then)g(explore)e(the)h(lev)m(els)g(0)p
Fn(;)17 b(:)g(:)g(:)f(;)h(d)p Fo(.)56 2362 y(W)-8 b(e)37
b(no)m(w)h(lo)s(ok)e(at)g(an)h(arbitrary)f(state)h Fn(s)1623
2377 y Fg(d)1701 2362 y Fo(in)f(lev)m(el)g Fn(d)p Fo(.)h(Let)g(one)g
(of)g(the)g(shortest)h(paths)g(from)d(a)-42 2479 y(startstate)d
Fn(s)443 2494 y Fj(0)513 2479 y Fo(to)e(this)g(state)h(b)s(e)g
Fn(s)1232 2494 y Fj(0)1272 2479 y Fn(s)1318 2494 y Fj(1)1357
2479 y Fn(:)17 b(:)g(:)f(s)1534 2494 y Fg(d)1575 2479
y Fo(,)30 b(where)i Fn(s)1958 2494 y Fg(i)2017 2479 y
Fo(is)e(a)h(state)g(in)f(the)h Fn(i)p Fo(th)g(lev)m(el.)f(In)m(tuitiv)m
(ely)-8 b(,)31 b(the)-42 2595 y(omission)g(probabilit)m(y)g(for)h
(state)h Fn(s)1288 2610 y Fg(d)1361 2595 y Fo(is)f(b)s(ounded)h(b)m(y)h
(the)f(omission)d(probabilit)m(y)h(for)h(this)g(path.)56
2720 y(More)i(formally)-8 b(,)30 b(let)j Fn(N)933 2735
y Fg(i)994 2720 y Fo(b)s(e)g(the)h(ev)m(en)m(t)h(that)e(state)h
Fn(s)2052 2735 y Fg(i)2113 2720 y Fo(will)d(not)i(b)s(e)h(omitted)d
(during)i(the)h(searc)m(h.)-42 2836 y(There)f(are)f(t)m(w)m(o)g(p)s
(ossible)e(causes)j(for)e(an)h(omission)d(of)i(state)h
Fn(s)2319 2851 y Fg(i)2347 2836 y Fo(.)f(First,)g(the)h(state)g(ma)m(y)
f(b)s(e)h(reac)m(hed)-42 2952 y(but)e(omitted)e(during)h(its)g
(insertion)f(in)m(to)h(the)h(state)g(table.)f(W)-8 b(e)30
b(call)d(the)j(ev)m(en)m(t)h(that)f(state)g Fn(s)3445
2967 y Fg(i)3502 2952 y Fo(is)f(not)-42 3069 y(omitted)i(during)g(its)g
Fp(insertion)g Fn(N)1312 3032 y Ff(0)1302 3093 y Fg(i)1335
3069 y Fo(.)h(Second,)h(an)f(ancestor)h(of)e(state)h
Fn(s)2665 3084 y Fg(i)2725 3069 y Fo(whic)m(h)h(w)m(as)f(necessary)i
(for)-42 3185 y(the)f(reac)m(habilit)m(y)f(of)g Fn(s)812
3200 y Fg(i)873 3185 y Fo(ma)m(y)g(ha)m(v)m(e)i(b)s(een)f(omitted.)e
(It)i(follo)m(ws)e(that)-42 3470 y Fn(N)36 3485 y Fg(i)92
3470 y Fh(\()d Fn(N)308 3429 y Ff(0)298 3495 y Fg(i)354
3470 y Fh(^)22 b Fn(N)520 3485 y Fg(i)p Ff(\000)p Fj(1)639
3470 y Fn(;)49 b Fo(for)32 b(0)11 b Fn(<)g(i)g Fh(\024)g
Fn(d;)115 b Fo(and)97 b Fn(N)1668 3485 y Fj(0)1736 3470
y Fh(,)27 b Fn(N)1951 3429 y Ff(0)1941 3495 y Fj(0)2029
3470 y Fn(:)-42 3747 y Fo(Note)36 b(that)f(there)i(can)e(b)s(e)h(m)m
(ultiple)d(startstates)k(and)e(th)m(us)i(startstates)f(can)g(b)s(e)g
(omitted)e(as)i(w)m(ell.)-42 3863 y(It)d(follo)m(ws)e(for)h(the)h
(probabilities)d(of)i(these)i(ev)m(en)m(ts)h(that)-42
4149 y(Pr\()p Fn(N)178 4164 y Fg(i)207 4149 y Fo(\))28
b Fh(\025)g Fo(Pr\()p Fn(N)608 4113 y Ff(0)598 4174 y
Fg(i)654 4149 y Fh(^)23 b Fn(N)821 4164 y Fg(i)p Ff(\000)p
Fj(1)939 4149 y Fo(\))28 b(=)f(Pr\()p Fn(N)1338 4113
y Ff(0)1328 4174 y Fg(i)1362 4149 y Fh(j)p Fn(N)1468
4164 y Fg(i)p Ff(\000)p Fj(1)1586 4149 y Fo(\))22 b(Pr\()p
Fn(N)1866 4164 y Fg(i)p Ff(\000)p Fj(1)1985 4149 y Fo(\))98
b(and)f(Pr\()p Fn(N)2595 4164 y Fj(0)2635 4149 y Fo(\))28
b(=)f(Pr\()p Fn(N)3034 4113 y Ff(0)3024 4174 y Fj(0)3064
4149 y Fo(\))49 b Fn(:)-42 4426 y Fo(Using)33 b(this)f(result)g
(recursiv)m(ely)i(yields)-42 4785 y(Pr\()p Fn(N)178 4800
y Fg(d)219 4785 y Fo(\))28 b Fh(\025)g Fo(Pr\()p Fn(N)620
4749 y Ff(0)610 4810 y Fj(0)650 4785 y Fo(\))765 4677
y Fg(d)731 4702 y Fe(Y)727 4884 y Fg(i)p Fj(=1)857 4785
y Fo(Pr\()p Fn(N)1087 4749 y Ff(0)1077 4810 y Fg(i)1111
4785 y Fh(j)p Fn(N)1217 4800 y Fg(i)p Ff(\000)p Fj(1)1336
4785 y Fo(\))48 b Fn(:)2164 b Fo(\(1\))-42 5131 y(This)38
b(inequalit)m(y)d(giv)m(es)j(a)e(lo)m(w)m(er)i(b)s(ound)f(on)g(the)g
(probabilit)m(y)e(that)i(state)g Fn(s)2856 5146 y Fg(d)2933
5131 y Fo(is)g(not)f(omitted)g(and)-42 5247 y(th)m(us)27
b(also)e(an)h(upp)s(er)g(b)s(ound)h(on)e(the)i(probabilit)m(y)d(that)h
(state)h Fn(s)2315 5262 y Fg(d)2382 5247 y Fo(is)f(omitted.)g(Since)h
(w)m(e)g(to)s(ok)g(a)g(state)-42 5363 y(out)i(of)g(the)g(last)f
(breadth-\014rst)h(lev)m(el)g(and)g(the)g(preceding)g(lev)m(els)g(ha)m
(v)m(e)h(smaller)d(upp)s(er)j(b)s(ounds,)f(this)-42 5479
y(inequalit)m(y)42 b(also)g(also)f(giv)m(es)i(us)h(the)f(desired)g(upp)
s(er)g(b)s(ound)g(on)f(the)i(maxim)m(um)c(state)j(omission)-42
5596 y(probabilit)m(y)-8 b(.)37 b(The)i(probabilities)c(on)j(the)g
(righ)m(t-hand)f(side)i(of)e(inequalit)m(y)g(\(1\))h(are)g(dep)s(enden)
m(t)i(on)-42 5712 y(the)33 b(hash)h(table)e(insertion)f(algorithm)e
(and)k(will)d(b)s(e)j(appro)m(ximated)f(in)g(the)h(follo)m(wing)d
(discussion.)p eop
%%Page: 8 8
8 7 bop -42 100 a Fm(8)1474 b Fl(A)30 b(New)g(Scheme)g(for)g
(Memory-E\016cient)i(Pr)l(ob)l(abilistic)g(V)-6 b(eri\014c)l(ation)-42
365 y Fi(3.2)136 b(Ordered)45 b(hashing)-42 651 y Fo(In)27
b(the)g(new)g(probabilistic)c(v)m(eri\014cation)j(sc)m(heme,)h(w)m(e)h
(emplo)m(y)d(some)h(ideas)g(from)f(hash)i(compaction.)-42
768 y(Compressed)i(state)e(descriptors)g(instead)g(of)f(the)i(full)d
(ones)i(are)g(stored)g(in)f(a)h(hash)g(table)f(and)h(w)m(e)h(use)-42
884 y(op)s(en)h(addressing)g(for)f(the)h(collision)c(resolution)i(in)h
(this)g(table.)g(Ho)m(w)m(ev)m(er,)j(there)e(is)f(one)h(problem)e(in)
-42 1000 y(the)j(previous)f(hash)h(compaction)e(sc)m(heme)i(whic)m(h)f
(w)m(ould)g(b)s(ecome)g(ev)m(en)i(w)m(orse)f(in)e(the)i(new)g(sc)m
(heme)-42 1116 y(if)35 b(w)m(e)h(used)g(the)g(same)f(algorithm)d(to)j
(insert)g(states)h(in)m(to)e(the)i(hash)g(table.)e(When)i(the)g(hash)g
(table)-42 1233 y(gets)28 b(almost)e(full,)g(the)i(a)m(v)m(erage)g
(length)g(of)f(the)g(prob)s(e)h(sequence)i(for)d(\014nding)g(an)h(empt)
m(y)g(slot)f(during)-42 1349 y(the)j(state)f(insertion)f(increases)i
(sharply)-8 b(.)29 b(F)-8 b(or)28 b(example,)h(to)f(\014nd)i(the)f
(last)f(empt)m(y)i(slot)e(in)g(the)i(table,)-42 1465
y(an)h(a)m(v)m(erage)h(of)560 1426 y Fg(m)p Fj(+1)p 560
1442 153 4 v 618 1499 a(2)753 1465 y Fo(prob)s(es)f(are)g(needed.)i
(The)f(probabilit)m(y)d(of)h(omission)f(during)h(these)i(insertions)-42
1581 y(also)24 b(increases)h(sharply)-8 b(,)25 b(since)g(it)e(is)h
(roughly)g(prop)s(ortional)e(to)i(the)h(length)f(of)g(the)h(prob)s(e)g
(sequences.)56 1751 y(F)-8 b(or)42 b(t)m(ypical)f(proto)s(cols,)g(this)
h(problem)f(w)m(ould)i(b)s(e)f(exacerbated)i(in)e(the)g(new)i(sc)m
(heme)f(b)m(y)h(the)-42 1867 y(c)m(haracteristic)33 b(shap)s(e)h(of)e
(the)i(distribution)d(of)h(the)h(reac)m(hable)g(states)h(o)m(v)m(er)g
(the)g(di\013eren)m(t)f(lev)m(els)g(in)-42 1984 y(the)j
(breadth-\014rst)f(searc)m(h.)h(Usually)-8 b(,)34 b(this)g
(distribution)f(is)h(b)s(ell-shap)s(ed,)f(i.e.)h(it)g(has)h(few)g
(states)h(in)-42 2100 y(the)g(\014rst)f(lev)m(els)g(and)g(last)g(lev)m
(els)g(and)g(the)g(ma)5 b(jorit)m(y)34 b(in)g(the)h(middle)f(lev)m
(els.)h(Th)m(us,)h(assuming)f(the)-42 2216 y(table)d(\014nally)e
(\014lls)h(up,)h(a)f(signi\014can)m(t)g(n)m(um)m(b)s(er)i(of)e(states)i
(from)d(the)i(`tail')e(lev)m(els)i(w)m(ould)g(exp)s(erience)-42
2332 y(an)h(almost)e(full)g(hash)i(table)f(and)g(th)m(us)i(the)f
(sharply)g(increased)g(probabilit)m(y)d(of)j(omission.)-42
3031 y Fs(The)42 b(algorithm)-42 3217 y Fo(F)-8 b(ortunately)g(,)35
b(there)i(is)e(a)h(hashing)f(sc)m(heme)i(whose)g(ob)5
b(jectiv)m(e)37 b(is)e(to)h(reduce)h(the)f(a)m(v)m(erage)h(n)m(um)m(b)s
(er)-42 3334 y(of)k(prob)s(es)i(needed)g(in)d(unsuccessful)k(searc)m
(hes)g({)d(ordered)h(hashing)f(in)m(tro)s(duced)h(b)m(y)g(Am)m(ble)f
(and)-42 3450 y(Kn)m(uth)32 b(\(1974\).)e(The)h(insertion)f(algorithm)d
(in)j(ordered)i(hashing)e(is)g(giv)m(en)h(in)f(Figure)g(2.)g(Here,)i
Fn(T)14 b Fo([)p Fn(i)p Fo(])-42 3566 y(denotes)29 b(the)f
Fn(i)p Fo(th)g(slot)e(in)h(the)h(hash)g(table)f(\()p
Fn(i)p Fo(=0)p Fn(;)17 b(:)g(:)g(:)e(;)i(m)-5 b Fh(\000)g
Fo(1\))28 b(and)f(also)g(the)h(v)-5 b(alue)27 b(in)f(this)h(slot)g(and)
h Fn(h)3715 3530 y Ff(0)-42 3682 y Fo(and)33 b Fn(h)204
3646 y Ff(00)280 3682 y Fo(are)g(t)m(w)m(o)g(hash)h(functions)e(whic)m
(h)i(are)f(used)h(to)e(calculate)g(the)h(prob)s(e)g(sequence.)j(The)d
(hash)-42 3799 y(function)j Fn(h)400 3762 y Ff(00)478
3799 y Fo(has)g(to)f(yield)f(v)-5 b(alues)36 b(that)f(are)h(relativ)m
(ely)e(prime)h(to)g Fn(m)h Fo(for)f(the)h(algorithm)c(to)j(w)m(ork)-42
3915 y(prop)s(erly)-8 b(.)38 b(T)m(ypically)-8 b(,)36
b Fn(m)i Fo(is)f(c)m(hosen)i(to)f(b)s(e)f(prime)g(and)g
Fn(h)2164 3879 y Ff(00)2244 3915 y Fo(yields)h(v)-5 b(alues)37
b(b)s(et)m(w)m(een)j(1)d(and)h Fn(m)9 b Fh(\000)g Fo(1.)-42
4031 y(Since)35 b Fn(h)271 3995 y Ff(00)347 4031 y Fo(is)e(applied)g
(to)h Fn(c)p Fo(\()p Fn(s)p Fo(\),)g(there)g(is)g(some)f(dep)s(endency)
k(b)s(et)m(w)m(een)f(the)e(compressed)h(v)-5 b(alue)34
b(and)-42 4147 y(the)i(prob)s(e)g(sequence)i(of)e(a)f(state,)h(whic)m
(h)g(has)g(to)f(b)s(e)h(tak)m(en)h(in)m(to)d(accoun)m(t)j(in)e(the)h
(analysis)e(of)i(the)-42 4263 y(new)e(sc)m(heme.)56 4433
y(The)28 b(algorithm)23 b(is)j(comp)s(osed)h(of)f(a)g(searc)m(h)i
(phase)f(and)g(an)f(insertion)g(phase.)h(Note)g(that)f(only)h(the)-42
4550 y(searc)m(h)40 b(phase)f(migh)m(t)e(lead)h(to)g(omissions,)e
(since)j(it)e(alone)h(ma)m(y)g(return)h(`state)f(already)g(presen)m
(t'.)-42 4666 y(The)30 b(searc)m(h)g(lo)s(op)e(is)g(left)g(as)h(so)s
(on)f(as)h(a)g(slot)f(is)g(found)h(whic)m(h)g(is)g(either)f(empt)m(y)i
Fp(or)e Fo(con)m(tains)h(a)g(v)-5 b(alue)-42 4782 y(that)40
b(is)e Fp(smaller)g Fo(than)h(the)h(compressed)h(v)-5
b(alue)39 b(to)g(b)s(e)g(en)m(tered.)i(This)f(new)g(w)m(a)m(y)g(of)f
(lea)m(ving)g(the)-42 4898 y(searc)m(h)44 b(lo)s(op)c(strongly)h
(reduces)i(the)g(a)m(v)m(erage)f(n)m(um)m(b)s(er)g(of)g(prob)s(es)g
(for)f(\(unsuccessful\))j(searc)m(hes,)-42 5015 y(esp)s(ecially)32
b(when)h(the)g(table)e(is)h(relativ)m(ely)f(full.)g(F)-8
b(or)31 b(example,)h(for)g(a)g(h)m(uge)h Fn(m)g Fo(the)f(algorithm)d
(only)-42 5131 y(do)s(es)j(an)g(a)m(v)m(erage)g(of)f(log)17
b Fn(m)32 b Fo(prob)s(es)g(in)e(the)i(searc)m(h)h(lo)s(op)d(if)g(there)
j(is)e(one)g(empt)m(y)h(slot)f(in)g(the)h(table.)-42
5247 y(The)c(insertion)d(phase)i(main)m(tains)e(the)i(correct)g
(arrangemen)m(t)f(in)f(the)i(table)f(to)g(mak)m(e)g(the)h(algorithm)-42
5363 y(w)m(ork)37 b(prop)s(erly)-8 b(.)35 b(Am)m(ble)g(and)h(Kn)m(uth)h
(sho)m(w)m(ed)g(that)f(the)g(a)m(v)m(erage)h(n)m(um)m(b)s(er)f(of)f
(prob)s(es)h(to)g(insert)f(a)-42 5479 y(state)30 b(in)m(to)e(an)g
(ordered)i(hash)f(table)f(is)g(the)i(same)e(as)h(in)f(the)h(con)m(v)m
(en)m(tional)g(hashing)f(case.)i(Only)f(the)-42 5596
y(in)m(terc)m(hanging)40 b(of)f(compressed)i(v)-5 b(alues)40
b(required)g(b)m(y)h(the)f(new)h(algorithm)36 b(results)k(in)f(a)h(run)
m(time)-42 5712 y(p)s(enalt)m(y)33 b(whic)m(h)g(w)m(as,)h(ho)m(w)m(ev)m
(er,)h(negligible)29 b(in)j(practice.)p eop
%%Page: 9 9
9 8 bop -42 100 a Fl(The)31 b(New)f(Pr)l(ob)l(abilistic)i(V)-6
b(eri\014c)l(ation)30 b(Scheme)2193 b Fm(9)p 596 195
2472 5 v 646 301 a Fo(Insert\(state)34 b Fn(s)p Fo(\))646
418 y(b)s(egin)744 534 y Fn(i)28 b Fo(:=)f Fn(h)991 498
y Ff(0)1015 534 y Fo(\()p Fn(s)p Fo(\);)744 650 y Fn(v)k
Fo(:=)d Fn(c)p Fo(\()p Fn(s)p Fo(\);)744 766 y(while)j(not)i(\()p
Fn(T)14 b Fo([)p Fn(i)p Fo(])32 b(is)g(empt)m(y)i(or)e
Fn(T)14 b Fo([)p Fn(i)p Fo(])28 b Fn(<)f(v)t Fo(\))32
b(do)195 b(//)33 b(searc)m(h)841 883 y(if)f Fn(T)14 b
Fo([)p Fn(i)p Fo(])27 b(=)h Fn(v)36 b Fo(then)d(return)h(`state)f
(already)f(presen)m(t';)841 999 y Fn(i)c Fo(:=)g([)p
Fn(i)22 b Fo(+)g Fn(h)1269 963 y Ff(00)1312 999 y Fo(\()p
Fn(v)t Fo(\)])g(mo)s(d)f Fn(m)p Fo(;)744 1115 y(end)744
1231 y(while)31 b Fn(T)14 b Fo([)p Fn(i)p Fo(])33 b(is)f(non-empt)m(y)h
(do)195 b(//)32 b(insertion)841 1347 y(if)g Fn(T)14 b
Fo([)p Fn(i)p Fo(])27 b Fn(<)h(v)36 b Fo(then)d(in)m(terc)m(hange)h
(the)f(v)-5 b(alues)32 b(of)g Fn(T)14 b Fo([)p Fn(i)p
Fo(])28 b Fh($)f Fn(v)t Fo(;)841 1464 y Fn(i)h Fo(:=)g([)p
Fn(i)22 b Fo(+)g Fn(h)1269 1428 y Ff(00)1312 1464 y Fo(\()p
Fn(v)t Fo(\)])g(mo)s(d)f Fn(m)p Fo(;)744 1580 y(end)744
1696 y Fn(T)14 b Fo([)p Fn(i)p Fo(])27 b(:=)h Fn(v)t
Fo(;)744 1812 y(return)33 b(`state)g(inserted';)646 1929
y(end)p 596 1993 V 848 2118 a Fp(Figure)k(2)56 b Fo(Insertion)33
b(in)m(to)e(an)i(ordered)g(hash)g(table)-42 2477 y Fs(The)42
b(analysis)-42 2610 y Fo(Let)j Fn(p)194 2625 y Fg(k)280
2610 y Fo(denote)g(the)f(probabilit)m(y)e(that)i(there)g(is)g(no)f
(omission)g(during)g(the)h(insertion)f(of)g(a)h(new)-42
2726 y(state,)34 b(assuming)f(there)g(are)h Fn(k)i Fo(states)e(already)
f(in)f(the)i(table.)e(An)i(appro)m(ximation)c(form)m(ula)i(for)g
Fn(p)3695 2741 y Fg(k)-42 2843 y Fo(assuming)g Fn(m)c
Fh(\035)g Fo(1)k(can)h(b)s(e)f(calculated)1444 2806 y
Fh(\003)1498 2843 y Fo(,)g(yielding)-42 3124 y Fn(p)7
3139 y Fg(k)78 3124 y Fo(=)27 b(1)22 b Fh(\000)362 3057
y Fo(2)p 362 3101 49 4 v 371 3193 a Fn(l)421 3124 y Fo(\()p
Fn(H)540 3139 y Fg(m)p Fj(+1)718 3124 y Fh(\000)h Fn(H)899
3139 y Fg(m)p Ff(\000)p Fg(k)1059 3124 y Fo(\))f(+)1227
3057 y(2)p Fn(m)g Fo(+)g Fn(k)s Fo(\()p Fn(m)g Fh(\000)h
Fn(k)s Fo(\))p 1227 3101 646 4 v 1238 3193 a Fn(ml)r
Fo(\()p Fn(m)g Fh(\000)g Fn(k)i Fo(+)d(1\))1931 3124
y Fn(:)1655 b Fo(\(2\))-42 3420 y(Here,)34 b Fn(H)297
3435 y Fg(n)371 3420 y Fo(=)475 3353 y Fe(P)563 3380
y Fg(n)563 3444 y(i)p Fj(=1)707 3381 y(1)p 707 3397 36
4 v 713 3454 a Fg(i)780 3420 y Fo(=)28 b(ln)16 b Fn(n)22
b Fo(+)g Fn(\015)27 b Fo(+)1368 3381 y Fj(1)p 1346 3397
79 4 v 1346 3454 a(2)p Fg(n)1457 3420 y Fh(\000)1622
3381 y Fj(1)p 1566 3397 148 4 v 1566 3454 a(12)p Fg(n)1679
3435 y Fd(2)1746 3420 y Fo(+)22 b Fn(O)s Fo(\()1990 3381
y Fj(1)p 1970 3397 78 4 v 1970 3454 a Fg(n)2013 3435
y Fd(4)2057 3420 y Fo(\))32 b(denotes)i(a)e(harmonic)f(n)m(um)m(b)s
(er.)56 3536 y(W)-8 b(e)35 b(can)g(use)g(this)f(form)m(ula)f(for)h
Fn(p)1329 3551 y Fg(k)1406 3536 y Fo(to)g(giv)m(e)h(a)f(b)s(ound)h(on)f
(the)h(probabilities)d(on)i(the)h(righ)m(t-hand)-42 3652
y(side)40 b(of)e(\(1\).)h(Assume)h(that)f(there)h(is)e(a)h(total)e(of)i
Fn(k)1911 3667 y Fg(i)1978 3652 y Fo(states)h(stored)g(in)e(the)h(hash)
h(table)e(when)j(the)-42 3768 y(algorithm)32 b(\014nishes)j(the)g
Fn(i)p Fo(th)f(lev)m(el.)g(Then,)i(there)f(w)m(ere)h(at)e(most)g
Fn(k)2504 3783 y Fg(i)2538 3768 y Fh(\000)7 b Fo(1)35
b(states)g(in)e(the)i(table)f(when)-42 3885 y(w)m(e)g(tried)e(to)g
(insert)h(state)g Fn(s)1011 3900 y Fg(i)1039 3885 y Fo(.)g(Th)m(us,)h
(w)m(e)f(ha)m(v)m(e)h(the)f(follo)m(wing)d(b)s(ounds:)-42
4113 y(Pr\()p Fn(N)188 4077 y Ff(0)178 4137 y Fg(i)213
4113 y Fh(j)p Fn(N)319 4128 y Fg(i)p Ff(\000)p Fj(1)437
4113 y Fo(\))d Fh(\025)h Fn(p)656 4128 y Fg(k)693 4138
y Fc(i)720 4128 y Ff(\000)p Fj(1)814 4113 y Fn(;)49 b
Fo(for)32 b(0)11 b Fn(<)g(i)g Fh(\024)g Fn(d;)115 b Fo(and)97
b(Pr\()p Fn(N)1995 4077 y Ff(0)1985 4137 y Fj(0)2025
4113 y Fo(\))28 b Fh(\025)g Fn(p)2245 4128 y Fg(k)2282
4137 y Fd(0)2316 4128 y Ff(\000)p Fj(1)2459 4113 y Fn(:)-42
4341 y Fo(By)34 b(plugging)c(these)k(inequalities)d(in)m(to)h(\(1\),)g
(w)m(e)h(obtain)-42 4648 y(Pr\()p Fn(N)178 4663 y Fg(d)219
4648 y Fo(\))28 b Fh(\025)429 4540 y Fg(d)394 4565 y
Fe(Y)390 4748 y Fg(i)p Fj(=0)521 4648 y Fn(p)570 4663
y Fg(k)607 4673 y Fc(i)633 4663 y Ff(\000)p Fj(1)776
4648 y Fn(:)2810 b Fo(\(3\))-42 4945 y(F)-8 b(or)28 b(eac)m(h)h(lev)m
(el,)f(a)g(b)s(ound)g(on)g(the)h(maxim)m(um)d(state)i(omission)f
(probabilit)m(y)f(for)h(all)g(states)i(explored)-42 5062
y(so)39 b(far)f(can)h(b)s(e)g(calculated)f(`on-line')f(\(i.e.)h(during)
g(the)h(state)g(space)g(searc)m(h\))h(b)m(y)g(the)f(v)m(eri\014cation)
-42 5178 y(algorithm.)g(Finally)-8 b(,)39 b(the)j(b)s(ound)g(on)g(the)g
(maxim)m(um)d(state)k(omission)c(probabilit)m(y)h(is)h(the)i(v)-5
b(alue)-42 5294 y(rep)s(orted)33 b(in)f(the)h(last)f(lev)m(el)g(observ)
m(ed.)56 5410 y(Note)43 b(that)f(the)h(last)f(lev)m(el)g(observ)m(ed)j
(migh)m(t)c(not)h(b)s(e)h(the)g(actual)e(last)h(lev)m(el)g(of)g(the)h
(proto)s(col.)-42 5526 y(Then,)f(the)e(v)m(eri\014er)g(migh)m(t)f(rep)s
(ort)g(to)s(o)g(optimistic)e(a)j(v)-5 b(alue)39 b(for)h(the)g(maxim)m
(um)e(state)i(omission)p -42 5621 3780 4 v -42 5682 a
Fb(\003)4 5712 y Fm(2-page)26 b(deriv)-5 b(ation)27 b(omitted.)p
eop
%%Page: 10 10
10 9 bop -42 100 a Fm(10)1432 b Fl(A)30 b(New)g(Scheme)g(for)g
(Memory-E\016cient)i(Pr)l(ob)l(abilistic)g(V)-6 b(eri\014c)l(ation)-42
365 y Fo(probabilit)m(y)e(.)36 b(Ho)m(w)m(ev)m(er,)41
b(this)c(ev)m(en)m(t)j(is)d(relativ)m(ely)g(rare.)h(Let)g(lev)m(el)g
Fn(t)g Fo(b)s(e)g(the)g(last)f(observ)m(ed)j(lev)m(el.)-42
482 y(Then,)30 b(all)d(states)i(of)f(lev)m(el)h Fn(t)m
Fo(+)m(1)g(m)m(ust)g(ha)m(v)m(e)h(b)s(een)f(omitted.)e(Ev)m(en)k(if)c
(lev)m(el)h Fn(t)m Fo(+)m(1)h(has)g(only)g(one)f(state,)-42
598 y(the)42 b(omission)e(probabilit)m(y)f(for)h(this)h(state)h(is)f(b)
s(ounded)h(b)m(y)g(1)28 b Fh(\000)2492 531 y Fe(Q)2571
558 y Fg(t)p Fj(+1)2571 622 y Fg(i)p Fj(=0)2707 598 y
Fn(p)2756 613 y Fg(k)2793 623 y Fc(i)2819 613 y Ff(\000)p
Fj(1)2913 598 y Fo(,)42 b(where)g Fn(k)3323 613 y Fg(t)p
Fj(+1)3485 598 y Fo(:=)h Fn(k)3682 613 y Fg(t)3711 598
y Fo(.)-42 714 y(This)g(expression)h(is)e(appro)m(ximately)f(1)28
b Fh(\000)1615 648 y Fe(Q)1693 674 y Fg(t)1693 739 y(i)p
Fj(=0)1828 714 y Fn(p)1877 729 y Fg(k)1914 739 y Fc(i)1940
729 y Ff(\000)p Fj(1)2034 714 y Fo(,)43 b(whic)m(h)g(w)m(as)g(rep)s
(orted)g(b)m(y)g(the)g(v)m(eri\014er)g(as)-42 830 y(the)e(b)s(ound)f
(on)g(the)h(maxim)m(um)c(state)k(omission)d(probabilit)m(y)-8
b(,)38 b(and)i(whic)m(h)h(is)e(t)m(ypically)g(small)f(in)-42
946 y(practice.)-42 1200 y Fi(3.3)136 b(Cho)t(osing)45
b(the)g(n)l(um)l(b)t(er)g(of)g(bits)g(p)t(er)g(state)-42
1434 y Fo(Let)e Fn(n)g Fo(denote)g(the)g(n)m(um)m(b)s(er)g(of)f(reac)m
(hable)g(states.)i(F)-8 b(or)41 b(calculating)f(an)j(accurate)g(v)-5
b(alue)42 b(of)g(the)-42 1550 y(b)s(ound)33 b(on)g(the)g(maxim)m(um)d
(state)k(omission)c(probabilit)m(y)-8 b(,)31 b(the)i(kno)m(wledge)h(of)
e(the)h(diameter)f Fn(d)g Fo(and)-42 1666 y(the)h(distribution)c
Fn(k)707 1681 y Fg(i)735 1666 y Fo(,)j(0)11 b Fh(\024)g
Fn(i)g Fh(\024)g Fn(d)p Fo(,)33 b(is)e(required.)h(F)-8
b(or)31 b(a)g(coarse)i(appro)m(ximation,)c(w)m(e)k(assume)f(that)g(the)
-42 1782 y(table)e(\014lls)e(up)i(completely)f(\()p Fn(m)11
b Fo(=)g Fn(n)p Fo(\))30 b(and)g(that)g(half)e(the)j(states)f(in)f(the)
i(path)f Fn(s)2922 1797 y Fj(0)2961 1782 y Fn(s)3007
1797 y Fj(1)3046 1782 y Fn(:)17 b(:)g(:)f(s)3223 1797
y Fg(d)3294 1782 y Fo(exp)s(erience)-42 1899 y(an)34
b(empt)m(y)h(table)e(during)g(their)g(insertion,)g(while)g(the)h(other)
g(half)f(exp)s(eriences)i(a)f(table)f(with)g(only)-42
2015 y(one)42 b(empt)m(y)f(slot.)f(This)h(mo)s(dels)f(\(crudely\))h
(the)g(t)m(ypically)f(b)s(ell-shap)s(ed)g(state)h(distribution)e(o)m(v)
m(er)-42 2131 y(the)31 b(breadth-\014rst)f(lev)m(els)h(0)p
Fn(;)17 b(:)g(:)g(:)e(;)i(d)p Fo(.)30 b(Assuming)f(further,)h(that)g
(the)h(individual)c(probabilities)g(in)i(\(3\))-42 2247
y(are)38 b(close)f(enough)h(to)f(1)g(to)g(appro)m(ximate)g(the)h(pro)s
(duct)f(b)m(y)h(a)g(sum,)f(w)m(e)h(obtain)f({)g(using)g(\(2\))g(and)-42
2364 y(assuming)f Fn(n)d Fh(\035)h Fo(1)h({)h(the)h(follo)m(wing)c
(appro)m(ximate)i(v)-5 b(alue)2241 2338 y(~)2189 2364
y Fn(P)2252 2387 y Fd(om)2377 2364 y Fo(for)35 b(the)i(b)s(ound)f(on)g
(the)g(maxim)m(um)-42 2480 y(state)d(omission)e(probabilit)m(y:)10
2739 y(~)-42 2764 y Fn(P)21 2787 y Fd(om)138 2764 y Fo(=)251
2696 y(1)p 251 2741 49 4 v 260 2832 a Fn(l)326 2764 y(d)17
b Fo(\(ln)f Fn(n)22 b Fh(\000)h Fo(1)p Fn(:)p Fo(2\))48
b Fn(:)2665 b Fo(\(4\))-42 3033 y(Note)26 b(that)g(this)f(form)m(ula)f
(w)m(as)i(only)g(deriv)m(ed)g(to)f(giv)m(e)h(an)g(estimate)e(of)i(the)g
(b)s(ound)g(on)f(the)h(maxim)m(um)-42 3149 y(state)h(omission)d
(probabilit)m(y)-8 b(.)24 b(A)i(real)f(but)h(conserv)-5
b(ativ)m(e)27 b(b)s(ound)f(could)g(b)s(e)g(calculated)f(b)m(y)i
(assuming)-42 3265 y(a)44 b(table)f(with)h(only)f(one)h(empt)m(y)g
(slot)f(for)h(the)g(whole)g(path)f Fn(s)2372 3280 y Fj(0)2412
3265 y Fn(s)2458 3280 y Fj(1)2497 3265 y Fn(:)17 b(:)g(:)f(s)2674
3280 y Fg(d)2715 3265 y Fo(,)44 b(whic)m(h)g(w)m(ould)g(basically)-42
3382 y(increase)379 3356 y(~)328 3382 y Fn(P)391 3405
y Fd(om)512 3382 y Fo(b)m(y)33 b(a)f(factor)g(of)g(t)m(w)m(o.)56
3499 y(Comparison)e(of)h(\(4\))g(to)f(the)i(form)m(ula)d(in)i(Stern)g
(and)h(Dill)c(\(1995b\))i(for)g(the)i(maxim)m(um)d(omission)-42
3616 y(probabilit)m(y)42 b(in)h(the)g(previous)h(hash)g(compaction)f
(sc)m(heme,)h Fn(P)2375 3639 y Fd(om)2510 3616 y Fh(\031)2644
3576 y Fj(1)p 2644 3592 36 4 v 2651 3650 a Fg(l)2705
3616 y Fn(n)17 b Fo(\(ln)f Fn(n)30 b Fh(\000)g Fo(1\),)43
b(sho)m(ws)i(that)-42 3732 y(w)m(e)37 b(essen)m(tially)f(replaced)g
(the)g(factor)f Fn(n)h Fo(b)m(y)h(the)f(factor)f Fn(d)p
Fo(.)h(This)g(corresp)s(onds)h(w)m(ell)e(with)g(the)h(fact)-42
3848 y(that)i(w)m(e)g(are)g(no)m(w)g(reasoning)f(ab)s(out)g(paths)i(of)
e(maxim)m(um)e(length)i Fn(d)p Fo(,)g(and)h(that)f(b)s(efore)h(w)m(e)h
(w)m(ere)-42 3964 y(reasoning)33 b(ab)s(out)f(all)e Fn(n)j
Fo(reac)m(hable)g(states.)56 4082 y(The)h(new)f(sc)m(heme)h(roughly)e
(sa)m(v)m(es)i(a)f(factor)f(of)g Fn(n=d)g Fo(in)g(the)h(b)s(ound)f(on)h
(the)g(probabilit)m(y)d(of)j(false)-42 4198 y(p)s(ositiv)m(es)41
b(in)g(comparison)e(to)i(the)h(previous)f(hash)h(compaction)d(sc)m
(heme,)k(or)e(roughly)f(log)3465 4222 y Fj(2)3504 4198
y Fo(\()p Fn(n=d)p Fo(\))-42 4314 y(bits)h(in)g(the)g(compressed)i
(state)e(descriptor.)h(Note)f(that)g(in)g(the)g(new)h(sc)m(heme,)h
(adding)d(just)i(one)-42 4431 y(bit)36 b(to)h(the)g(compressed)h(v)-5
b(alues)37 b(allo)m(ws)f(squaring)g(the)h(size)g(of)g(the)g(state)g
(space)h(or)e(doubling)g(the)-42 4547 y(diameter)c(assuming)g(the)h
(maxim)m(um)d(state)j(omission)e(probabilit)m(y)f(is)i(to)h(sta)m(y)g
(the)g(same.)56 4664 y(T)-8 b(able)41 b(1)h(sho)m(ws)h(the)f(diameter,)
f(the)h(n)m(um)m(b)s(er)g(of)f(reac)m(hable)h(states)g(and)g(the)g(n)m
(um)m(b)s(er)g(of)f(bits)-42 4781 y(in)i(the)h(\(uncompressed\))h
(state)f(descriptors)g(for)f(three)i(industrial)c(proto)s(cols)i(when)h
(a)f(proto)s(col)-42 4897 y(parameter)33 b(\(the)h(n)m(um)m(b)s(er)g
(of)e(pro)s(cessors\))j(is)e(v)-5 b(aried.)33 b(All)e(three)j(proto)s
(cols)e({)h(cac)m(he3,)i(SCI)f(\(IEEE)-42 5013 y(Std)g(1596{1992;)d
(Stern)i(and)g(Dill)d(1995a\))i(and)h(adash)g(\(Lenoski)h(et)f(al.)f
(1992\))g({)h(are)g(cac)m(he)h(coher-)-42 5129 y(ence)39
b(proto)s(cols.)e(Observ)m(e,)j(that)e(the)g(ratio)e(of)h
Fn(n=d)h Fo(gro)m(ws)g(exp)s(onen)m(tially)f(when)i(the)f(n)m(um)m(b)s
(er)g(of)-42 5246 y(pro)s(cessors)c(is)f(increased)g(and)g(that)f(the)h
(diameter)e Fn(d)i Fo(is)f(t)m(ypically)f(quite)i(small.)56
5363 y(T)-8 b(able)30 b(2)g(sho)m(ws)j(the)e(appro)m(ximate)e(b)s(ound)
1757 5338 y(~)1706 5363 y Fn(P)1769 5386 y Fd(om)1888
5363 y Fo(on)h(the)h(maxim)m(um)d(state)j(omission)e(probabilit)m(y)-42
5479 y(assuming)34 b Fn(n)p Fo(=10)616 5443 y Fj(9)690
5479 y Fo(reac)m(hable)h(states)h(while)d(v)-5 b(arying)34
b(the)h(diameter)f Fn(d)g Fo(and)h(the)g(n)m(um)m(b)s(er)g(of)f(bits)h
Fn(b)-42 5596 y Fo(for)k(the)g(compressed)h(v)-5 b(alues.)38
b(In)h(practice,)g(the)g(giv)m(en)g(form)m(ula)e(for)2668
5570 y(~)2617 5596 y Fn(P)2680 5619 y Fd(om)2807 5596
y Fo(t)m(ypically)g(yields)h(upp)s(er)-42 5712 y(b)s(ounds)k(that)f
(are)g(more)f(conserv)-5 b(ativ)m(e)42 b(than)f(the)g(b)s(ounds)h(rep)s
(orted)f(b)m(y)h(the)f(v)m(eri\014er)h(using)e(\(3\).)p
eop
%%Page: 11 11
11 10 bop -42 100 a Fl(Implementation)3131 b Fm(11)-42
345 y Fp(T)-9 b(able)40 b(1)56 b Fo(Diameter)34 b Fn(d)p
Fo(,)h(n)m(um)m(b)s(er)g(of)g(reac)m(hable)g(states)h
Fn(n)g Fo(and)f(n)m(um)m(b)s(er)g(of)g(bits)3051 318
y(^)3055 345 y Fn(b)g Fo(in)g(the)g(original)-42 461
y(state)e(descriptor)g(for)f(sample)g(proto)s(cols)p
412 548 2872 5 v 2100 654 a(pro)s(cs)p 1142 693 2143
5 v 462 770 a(proto)s(col)427 b(2)254 b(3)360 b(4)f(5)311
b(6)g(7)p 412 834 2872 5 v 412 838 V 497 944 a(cac)m(he3)201
b Fn(d)189 b Fo(16)205 b(23)310 b(27)h(31)262 b(35)g(39)973
1061 y Fn(n)161 b Fo(299)131 b(2796)213 b(8534)180 b(18)16
b(962)98 b(37)16 b(228)99 b(66)16 b(296)977 1165 y(^)981
1191 y Fn(b)194 b Fo(87)181 b(126)261 b(155)h(179)212
b(203)h(258)p 412 1255 V 557 1361 a(SCI)260 b Fn(d)189
b Fo(22)205 b(62)286 b(117)973 1477 y Fn(n)185 b Fo(96)124
b(18)16 b(193)98 b(9707)16 b(150)977 1581 y(^)981 1608
y Fn(b)170 b Fo(277)156 b(437)261 b(582)p 412 1672 V
515 1778 a(adash)217 b Fn(d)c Fo(7)230 b(37)283 b(n/a)973
1894 y Fn(n)185 b Fo(39)124 b(10)16 b(466)201 b(n/a)977
1998 y(^)981 2024 y Fn(b)170 b Fo(360)131 b(1126)213
b(3012)p 412 2088 V -42 2416 a Fp(T)-9 b(able)31 b(2)56
b Fo(Appro)m(ximate)27 b(b)s(ounds)1337 2391 y(~)1285
2416 y Fn(P)1348 2440 y Fd(om)1464 2416 y Fo(on)g(the)g(maxim)m(um)e
(state)i(omission)e(probabilit)m(y)g(for)i Fn(n)p Fo(=10)3699
2380 y Fj(9)-42 2533 y Fo(reac)m(hable)33 b(state)p 1108
2600 1481 5 v 1755 2706 a(diameter)f Fn(d)p 1379 2745
1210 5 v 1223 2822 a(b)244 b Fo(100)256 b(200)g(500)p
1108 2886 1481 5 v 1108 2890 V 1195 2997 a(16)185 b(3.0\045)197
b(6.0\045)211 b(15\045)1195 3113 y(20)160 b(0.19\045)148
b(0.37\045)h(0.93\045)1195 3229 y(24)136 b(0.012\045)99
b(0.023\045)g(0.058\045)p 1108 3293 V -42 3696 a(When)30
b(using)f(the)g(new)h(v)m(eri\014cation)e(sc)m(heme)i(with)f
Fn(b)p Fo(=20)g(bits)f(p)s(er)h(state)g(for)g(proto)s(cols)f(with)g(up)
h(to)-42 3812 y(10)56 3776 y Fj(9)121 3812 y Fo(reac)m(hable)c(states)h
(and)f(a)g(maxim)m(um)e(diameter)h Fn(d)h Fo(of)f(500,)h(the)g(maxim)m
(um)e(v)-5 b(alue)25 b(for)3341 3787 y(~)3289 3812 y
Fn(P)3352 3835 y Fd(om)3466 3812 y Fo(is)f(only)-42 3928
y(0.93\045.)40 b(Comparing)d(this)i(20)g(bits)g(p)s(er)h(state)g(with)f
(the)h(sizes)g(of)f(the)g(original)d(state)k(descriptors)-42
4045 y(in)f(T)-8 b(able)40 b(1)f(giv)m(es,)i(for)e(example,)g(a)h
(memory)e(sa)m(vings)j(factor)e(of)g(56)g(for)g(the)i(3-pro)s(cessor)f
(adash)-42 4161 y(proto)s(col.)-42 4542 y Fk(4)117 b(IMPLEMENT)-10
b(A)g(TION)-42 4778 y Fo(The)25 b(main)d(di\013erences)i(in)f(the)h
(implemen)m(tation)c(b)s(et)m(w)m(een)26 b(the)e(previous)f(hash)i
(compaction)d(sc)m(heme)-42 4895 y(and)30 b(the)g(new)h(one)f(are)g
(the)g(on-line)e(calculation)f(of)i(the)i(b)s(ound)f(on)f(the)h(maxim)m
(um)e(state)i(omission)-42 5011 y(probabilit)m(y)k(and)h(the)g(use)h
(of)f(ordered)g(hashing.)g(The)h(calculation)d(of)h(the)i(hash)f(and)h
(compressed)-42 5127 y(v)-5 b(alues)42 b(out)f(of)g(the)h(state)g
(descriptor)g(w)m(as)g(p)s(erformed)f(using)g(the)h Fn(H)2643
5142 y Fj(3)2724 5127 y Fo(univ)m(ersal)3104 5142 y Fj(2)3185
5127 y Fo(class)f(of)g(hash)-42 5243 y(functions)c(\(Carter)h(and)f(W)
-8 b(egman)36 b(1979\).)g(More)h(details)f(ab)s(out)g(this)h
(calculation)e(can)i(b)s(e)g(found)-42 5360 y(in)32 b(Stern)h(and)g
(Dill)c(\(1995b\).)56 5479 y(In)c(the)g(case)h(of)e(proto)s(col)g
(errors,)h(the)g(v)m(eri\014er)h(should)e(b)s(e)h(able)g(to)f(pro)m
(vide)h(the)g(proto)s(col)f(designer)-42 5596 y(with)35
b(an)f(error)h(trace,)g(i.e.)f(a)h(sequence)i(of)e(states)g(leading)e
(from)h(a)g(startstate)h(to)g(the)g(error)f(state.)-42
5712 y(When)g(the)f(v)m(eri\014er)g(\014nds)h(an)f(error)f(using)g
(depth-\014rst)i(searc)m(h,)g(the)f(state)g(queue)h(con)m(tains)f(suc)m
(h)h(a)p eop
%%Page: 12 12
12 11 bop -42 100 a Fm(12)1432 b Fl(A)30 b(New)g(Scheme)g(for)g
(Memory-E\016cient)i(Pr)l(ob)l(abilistic)g(V)-6 b(eri\014c)l(ation)158
166 y
 26688970 13616824 0 15787622 40258437 36311531 startTexFig
 158 166 a
%%BeginDocument: math.pro
%
% Original name of this file: mathematica2.1.pro
%
% This prolog was derived the output of 'psfix'.  To properly use it,
% the line 'Mathdict begin' must be placed just before the line
% 'MathPictureStart' in the Encapsulated PostScript file.
%
% All alterations made by me are noted by comments beginning '%T%'
%
%						-- Tony Guzzi [26-Jan-93]

/Mathdict 150 dict def
Mathdict begin
  /Mlmarg	1.0 72 mul def
  /Mrmarg	1.0 72 mul def
  /Mbmarg	1.0 72 mul def
  /Mtmarg	1.0 72 mul def
  /Mwidth	8.5 72 mul def
  /Mheight	11 72 mul def
  /Mtransform	{  } bind def
  /Mnodistort	true def
  /Mfixwid	true	def
  /Mfixdash	false def
  /Mrot		0	def
  /Mpstart { MathPictureStart } bind def
  /Mpend { MathPictureEnd } bind def
  /Mscale { 0 1 0 1 5 -1 roll MathScale } bind def
  /ISOLatin1Encoding dup where
  { pop pop }
  {
   [
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash
    /zero /one /two /three /four /five /six /seven
    /eight /nine /colon /semicolon /less /equal /greater /question
    /at /A /B /C /D /E /F /G
    /H /I /J /K /L /M /N /O
    /P /Q /R /S /T /U /V /W
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
    /quoteleft /a /b /c /d /e /f /g
    /h /i /j /k /l /m /n /o
    /p /q /r /s /t /u /v /w
    /x /y /z /braceleft /bar /braceright /asciitilde /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
    /dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section
    /dieresis /copyright /ordfeminine /guillemotleft
    /logicalnot /hyphen /registered /macron
    /degree /plusminus /twosuperior /threesuperior
    /acute /mu /paragraph /periodcentered
    /cedilla /onesuperior /ordmasculine /guillemotright
    /onequarter /onehalf /threequarters /questiondown
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
   ] def
  } ifelse
  /MFontDict 50 dict def
  /MStrCat {
    exch
    dup length
    2 index length add
    string
    dup 3 1 roll
    copy
    length
    exch dup
    4 2 roll exch
    putinterval
  } def
  /MCreateEncoding
  {
    1 index
    255 string cvs
    (-) MStrCat
    1 index MStrCat
    cvn exch
    (Encoding) MStrCat
    cvn dup where
    { exch get } { pop StandardEncoding } ifelse
    3 1 roll
    dup MFontDict exch known not
    {
      1 index findfont
      dup length dict
      begin
       {1 index /FID ne {def} {pop pop} ifelse } forall
       /Encoding 3 index def
       currentdict
      end
      1 index exch definefont pop
      MFontDict 1 index
      null put
    }
    if
    exch pop
    exch pop
  } def
  /ISOLatin1 { (ISOLatin1) MCreateEncoding } def
  /ISO8859 { (ISOLatin1) MCreateEncoding } def
  /Mcopyfont {
    dup
    maxlength
    dict
    exch
    { 1 index /FID eq { pop pop } { 2 index 3 1 roll put } ifelse } forall
  } def
  /Plain	/Courier findfont Mcopyfont definefont pop
  /Bold	/Courier-Bold findfont Mcopyfont definefont pop
  /Italic /Courier-Oblique findfont Mcopyfont definefont pop
  /MathPictureStart {
    gsave
    Mtransform
    Mlmarg
    Mbmarg
    translate
    Mwidth
    Mlmarg Mrmarg add
    sub
    /Mwidth exch def
    Mheight
    Mbmarg Mtmarg add
    sub
    /Mheight exch def
    /Mtmatrix matrix currentmatrix def
    /Mgmatrix matrix currentmatrix def
  } bind def
  /MathPictureEnd { grestore
		    %T% Next line added by Tony [26-Jan-93]
		    end
		    } bind def
  /MFill { 0 0 moveto
	   Mwidth 0 lineto
	   Mwidth Mheight lineto
	   0 Mheight lineto
           fill
          } bind def
  /MPlotRegion {
    3 index
    Mwidth mul
    2 index
    Mheight mul
    translate
    exch sub
    Mheight mul
    /Mheight exch def
    exch sub
    Mwidth mul
    /Mwidth exch def
  } bind def
  /MathSubStart {
    Momatrix
    Mgmatrix Mtmatrix
    Mwidth Mheight
    7 -2 roll
    moveto
    Mtmatrix setmatrix
    currentpoint
    Mgmatrix setmatrix
    9 -2 roll
    moveto
    Mtmatrix setmatrix
    currentpoint
    2 copy translate
    /Mtmatrix matrix currentmatrix def
    3 -1 roll
    exch sub
    /Mheight exch def
    sub
    /Mwidth exch def
  } bind def
  /MathSubEnd {
    /Mheight exch def
    /Mwidth exch def
    /Mtmatrix exch def
    dup setmatrix
    /Mgmatrix exch def
    /Momatrix exch def
  } bind def
  /Mdot    { moveto 0 0 rlineto stroke } bind def
  /Mtetra  { moveto lineto lineto lineto fill } bind def
  /Metetra { moveto lineto lineto lineto closepath
    	     gsave fill grestore 0 setgray stroke } bind def
  /Mistroke {
    flattenpath
    0 0 0
    { 4 2 roll pop pop }
    {
     4 -1 roll
     2 index
     sub dup mul
     4 -1 roll
     2 index
     sub dup mul
     add sqrt
     4 -1 roll
     add
     3 1 roll
    }
    { stop }
    { stop }
    pathforall
    pop pop
    currentpoint
    stroke
    moveto
    currentdash
    3 -1 roll
    add
    setdash
  } bind def
  /Mfstroke { stroke currentdash pop 0 setdash } bind def
  /Mrotsboxa {
    gsave
    dup
    /Mrot exch def
    Mrotcheck
    Mtmatrix
    dup
    setmatrix
    7 1 roll
    4 index
    4 index
    translate
    rotate
    3 index
    -1 mul
    3 index
    -1 mul
    translate
    /Mtmatrix matrix currentmatrix def
    grestore
    Msboxa
    3  -1 roll
    /Mtmatrix exch def
    /Mrot 0 def
  } bind def
  /Msboxa {
    newpath
    5 -1 roll
    Mvboxa
    pop
    Mboxout
    6 -1 roll
    5 -1 roll
    4 -1 roll
    Msboxa1
    5 -3 roll
    Msboxa1
    Mboxrot
    [
      7 -2 roll 2 copy
      [ 3 1 roll 10 -1 roll 9 -1 roll ]
      6 1 roll 5 -2 roll
    ]
  } bind def
  /Msboxa1 {
    sub
    2 div
    dup
    2 index
    1 add
    mul
    3 -1 roll
    -1 add
    3 -1 roll
    mul
  } bind def
  /Mvboxa {
    Mfixwid
    { Mvboxa1 }
    {
     dup
     Mwidthcal
     0 exch
     { add }
     forall
     exch
     Mvboxa1
     4 index
     7 -1 roll
     add
     4 -1 roll
     pop
     3 1 roll
    }
    ifelse
  } bind def
  /Mvboxa1 {
    gsave
    newpath
    [
      true
      3 -1 roll
      {
       Mbbox
       5 -1 roll
       { 0 5 1 roll }
       {
        7 -1 roll
        exch sub
        (m) stringwidth pop
        .3 mul
        sub
        7 1 roll
        6 -1 roll
        4 -1 roll
        Mmin
        3 -1 roll
        5 index
        add
        5 -1 roll
        4 -1 roll
        Mmax
        4 -1 roll
       }
       ifelse
       false
      }
      forall
      { stop } if
      counttomark
      1 add
      4 roll
    ]
    grestore
  } bind def
  /Mbbox {
    1 dict begin
    0 0 moveto
    /temp (T) def
    { gsave
      currentpoint newpath moveto
      temp 0 3 -1 roll put temp
      false charpath flattenpath currentpoint
      pathbbox
      grestore moveto lineto moveto
    } forall
    pathbbox
    newpath
    end
  } bind def
  /Mmin { 2 copy gt { exch } if pop } bind def
  /Mmax { 2 copy lt { exch } if pop } bind def
  /Mrotshowa {
    dup
    /Mrot exch def
    Mrotcheck
    Mtmatrix
    dup
    setmatrix
    7 1 roll
    4 index
    4 index
    translate
    rotate
    3 index
    -1 mul
    3 index
    -1 mul
    translate
    /Mtmatrix matrix currentmatrix def
    Mgmatrix setmatrix
    Mshowa
    /Mtmatrix exch def
    /Mrot 0 def
  } bind def
  /Mshowa {
    4 -2 roll
    moveto
    2 index
    Mtmatrix setmatrix
    Mvboxa
    7 1 roll
    Mboxout
    6 -1 roll
    5 -1 roll
    4 -1 roll
    Mshowa1
    4 1 roll
    Mshowa1
    rmoveto
    currentpoint
    Mfixwid
    { Mshowax }
    { Mshoway }
    ifelse
    pop pop pop pop
    Mgmatrix setmatrix
  } bind def
  /Mshowax {	
    0 1
    4 index length
    -1 add
    {
     2 index
     4 index
     2 index
     get
     3 index
     add
     moveto
     4 index
     exch get
     Mfixdash { Mfixdashp } if
     show
    } for
  } bind def
  /Mfixdashp {
    dup
    length
    1
    gt
    1 index
    true exch
    { 45 eq and } forall
    and
    {
     gsave
     (--) stringwidth pop
     (-)  stringwidth pop
     sub
     2 div
     0 rmoveto
     dup
     length
     1 sub
     { (-) show } repeat
    grestore
    }
    if
  } bind def	
  /Mshoway {
    3 index
    Mwidthcal
    5 1 roll
    0 1
    4 index length
    -1 add
    {
      2 index
      4 index
      2 index
      get
      3 index
      add
      moveto
      4 index
      exch get
      [
        6 index
        aload
        length
        2 add
        -1 roll
        {
          pop
          Strform
          stringwidth
          pop
          neg 
          exch
          add
          0 rmoveto
        }
        exch
        kshow
        cleartomark
        } for
        pop	
  } bind def
  /Mwidthcal {
    [ exch { Mwidthcal1 } forall ]
    [
     exch
     dup
     Maxlen
     -1 add
     0 1
     3 -1 roll
     {
     [
      exch
      2 index
      { 1 index Mget exch } forall		
      pop
      Maxget
      exch
     }
     for
     pop
     ]
     Mreva
  } bind def
  /Mreva { [ exch aload length -1 1 {1 roll} for ] } bind def
  /Mget	{
    1 index
    length
    -1 add
    1 index
    ge { get } { pop pop 0 } ifelse
  } bind def
  /Maxlen	{ [ exch { length } forall Maxget } bind def
  /Maxget	{ counttomark -1 add 1 1 3 -1 roll { pop Mmax } for exch pop } bind def
  /Mwidthcal1 { [ exch { Strform stringwidth pop } forall ] } bind def
  /Strform { /tem (x) def tem 0 3 -1 roll put tem } bind def
  /Mshowa1 { 2 copy add 4 1 roll sub mul sub -2 div } bind def
  /MathScale {
    Mwidth
    Mheight
    Mlp
    translate
    scale
    /yscale exch def
    /ybias exch def
    /xscale exch def
    /xbias exch def
    /Momatrix
    xscale yscale matrix scale
    xbias ybias matrix translate
    matrix concatmatrix def
    /Mgmatrix
    matrix currentmatrix
    def
  } bind def
  /Mlp {
    3 copy
    Mlpfirst
    {
      Mnodistort { Mmin dup } if
      4 index
      2 index
      2 index
      Mlprun
      11 index
      11 -1 roll
      10 -4 roll
      Mlp1
      8 index
      9 -5 roll
      Mlp1
      4 -1 roll
      and
      { exit } if
      3 -1 roll
      pop pop
    } loop
    exch
    3 1 roll
    7 -3 roll
    pop pop pop
  } bind def
  /Mlpfirst {
    3 -1 roll
    dup length
    2 copy
    -2 add
    get
    aload
    pop pop pop
    4 -2 roll
    -1 add
    get
    aload
    pop pop pop
    6 -1 roll
    3 -1 roll
    5 -1 roll
    sub
    div
    4 1 roll
    exch sub
    div
  } bind def
  /Mlprun {
    2 copy
    4 index
    0 get
    dup
    4 1 roll
    Mlprun1
    3 copy
    8 -2 roll
    9 -1 roll
    {
      3 copy
      Mlprun1
      3 copy
      11 -3 roll
      /gt Mlpminmax
      8 3 roll
      11 -3 roll
      /lt Mlpminmax
      8 3 roll
    } forall
    pop pop pop pop
    3 1 roll
    pop pop
    aload pop
    5 -1 roll
    aload pop
    exch
    6 -1 roll
    Mlprun2
    8 2 roll
    4 -1 roll
    Mlprun2
    6 2 roll
    3 -1 roll
    Mlprun2
    4 2 roll
    exch
    Mlprun2
    6 2 roll
  } bind def
  /Mlprun1 {
    aload pop
    exch
    6 -1 roll
    5 -1 roll
    mul add
    4 -2 roll
    mul
    3 -1 roll
    add
  } bind def
  /Mlprun2 { 2 copy add 2 div 3 1 roll exch sub } bind def
  /Mlpminmax {
    cvx
    2 index
    6 index
    2 index
    exec { 7 -3 roll 4 -1 roll } if
    1 index
    5 index
    3 -1 roll
    exec
    { 4  1 roll pop
      5 -1 roll
      aload
      pop pop
      4 -1 roll
      aload pop
      [
       8 -2 roll pop
       5 -2 roll pop
       6 -2 roll pop
       5 -1 roll
      ]
      4 1 roll pop
    }
    { pop pop pop }
    ifelse
  } bind def
  /Mlp1 {
    5 index
    3 index	sub
    5 index
    2 index mul
    1 index
    le
    1 index
    0 le
    or
    dup
    not
    { 1 index 3 index div .99999 mul 8 -1 roll pop 7 1 roll } if
    8 -1 roll
    2 div
    7 -2 roll
    pop sub
    5 index
    6 -3 roll
    pop pop
    mul sub
    exch
  } bind def
  /intop 0 def
  /inrht 0 def
  /inflag 0 def
  /outflag 0 def
  /xadrht 0 def
  /xadlft 0 def
  /yadtop 0 def
  /yadbot 0 def
  /Minner {
    outflag 1 eq { /outflag 0 def /intop 0 def /inrht 0 def } if		
    5 index
    gsave
    Mtmatrix setmatrix
    Mvboxa pop
    grestore
    3 -1 roll
    pop
    dup
    intop gt { /intop exch def } { pop } ifelse
    dup
    inrht gt { /inrht exch def } { pop } ifelse
    pop
    /inflag 1 def
  } bind def
  /Mouter {
    /xadrht 0 def
    /xadlft 0 def
    /yadtop 0 def
    /yadbot 0 def
    inflag
    1 eq
    {
     dup 0 lt { dup intop mul neg /yadtop exch def } if
     dup 0 gt { dup intop mul /yadbot exch def } if
     pop
     dup 0 lt { dup inrht mul neg /xadrht exch def } if
     dup 0 gt { dup inrht mul /xadlft exch def } if
     pop
     /outflag 1 def
    }
    { pop pop}
    ifelse
    /inflag 0 def
    /inrht 0 def
    /intop 0 def
  } bind def	
  /Mboxout {
    outflag
    1 eq {
     4 -1 roll
     xadlft
     leadjust
     add
     sub
     4 1 roll
     3 -1
     roll
     yadbot
     leadjust
     add
     sub
     3 1 roll
     exch
     xadrht
     leadjust
     add
     add
     exch
     yadtop
     leadjust
     add
     add
     /outflag 0 def
     /xadlft 0 def
     /yadbot 0 def
     /xadrht 0 def
     /yadtop 0 def
    } if
  } bind def
  /leadjust { (m) stringwidth pop .5 mul } bind def
  /Mrotcheck {
    dup
    90
    eq
    {
     yadbot
     /yadbot xadrht def	
     /xadrht yadtop def
     /yadtop xadlft def
     /xadlft exch def
    } if
    dup
    cos
    1 index
    sin
    Checkaux
    dup
    cos
    1 index
    sin neg
    exch
    Checkaux
    3 1 roll
    pop pop
  } bind def
  /Checkaux { 4 index exch 4 index mul 3 1 roll mul add 4 1 roll } bind def
  /Mboxrot {
    Mrot
    90 eq  { brotaux 4 2 roll } if
    Mrot
    180 eq { 4 2 roll brotaux 4 2 roll brotaux }	if
    Mrot
    270 eq { 4 2 roll brotaux } if
  } bind def
  /brotaux { neg exch neg } bind def
  /Mabsproc {
    0
    matrix defaultmatrix
    dtransform idtransform
    dup mul exch
    dup mul
    add sqrt
  } bind def
  /Mabswid { Mabsproc setlinewidth	} bind def
  /Mabsdash {
    exch
    [ exch { Mabsproc } forall ]
    exch
    setdash
  } bind def
  /MBeginOrig { Momatrix concat} bind def
  /MEndOrig { Mgmatrix setmatrix} bind def
  /sampledsound where
  { pop}
  { /sampledsound {
      exch
      pop
      exch
      5 1 roll
      mul
      4 idiv
      mul
      2 idiv
      exch pop
      exch
      /Mtempproc exch def
      { Mtempproc pop} repeat
    } bind def
  } ifelse
  /g { setgray} bind def
  /k { setcmykcolor} bind def
  /m { moveto} bind def
  /p { gsave} bind def
  /r { setrgbcolor} bind def
  /w { setlinewidth} bind def
  /C { curveto} bind def
  /F { fill} bind def
  /L { lineto} bind def
  /P { grestore} bind def
  /s { stroke} bind def
  /setcmykcolor where
  { pop}
  { /setcmykcolor {
      4 1 roll
      [ 4 1 roll ]
      {
       1 index sub
       1 sub neg
       dup
       0 lt { pop 0 } if
       dup
       1 gt { pop 1 } if
       exch
      } forall
      pop
      setrgbcolor
    } bind def
  } ifelse
  /Mcharproc { currentfile (x) readhexstring pop 0 get exch div } bind def
  /Mshadeproc {
    dup
    3 1
    roll
    { dup Mcharproc 3 1 roll } repeat
    1 eq { setgray }
         { 3 eq { setrgbcolor }
  	      { setcmykcolor }
  	      ifelse
         }
         ifelse
  } bind def
  /Mrectproc {
    3 index 2 index moveto
    2 index 3 -1 roll lineto
    dup 3 1 roll lineto
    lineto
    fill
  } bind def
  /Mcolorimage
  {
    7 1
    roll
    pop
    pop
    matrix
    invertmatrix
    concat
    2 exch exp
    1 sub
    3 1 roll
    1 1
    2 index
    {
      1 1
      4 index
      {
        dup 1 sub exch 2 index
        dup 1 sub exch 7 index
        9 index
        Mshadeproc
        Mrectproc
      } for
      pop
    } for
    pop pop pop pop
  } bind def
  /Mimage
  {
    pop
    matrix
    invertmatrix
    concat
    2 exch exp
    1 sub
    3 1 roll
    1 1
    2 index
    {
      1 1
      4 index
      {
        dup 1 sub exch 2 index
        dup 1 sub exch 7 index
        Mcharproc
        setgray
        Mrectproc
      } for
      pop
    } for
    pop pop pop
  } bind def
%T% Next line added by Tony [26-Jan-93]
end
%%EndDocument
 158 166 a
%%BeginDocument: fi:prob.branch.eps
Mathdict begin
MathPictureStart
/Courier findfont 13  scalefont  setfont
% Scaling calculations
0.0238095 0.0732601 0.0147151 0.721964 [
[(0)] .02381 0 0 2 0 Minner Mrotsboxa
[(2)] .17033 0 0 2 0 Minner Mrotsboxa
[(4)] .31685 0 0 2 0 Minner Mrotsboxa
[(6)] .46337 0 0 2 0 Minner Mrotsboxa
[(8)] .60989 0 0 2 0 Minner Mrotsboxa
[(10)] .75641 0 0 2 0 Minner Mrotsboxa
[(12)] .90293 0 0 2 0 Minner Mrotsboxa
[(number of bits \(b\))] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(0)] -0.0125 .01472 1 0 0 Minner Mrotsboxa
[(0.2)] -0.0125 .15911 1 0 0 Minner Mrotsboxa
[(0.4)] -0.0125 .3035 1 0 0 Minner Mrotsboxa
[(0.6)] -0.0125 .44789 1 0 0 Minner Mrotsboxa
[(0.8)] -0.0125 .59229 1 0 0 Minner Mrotsboxa
[(omission probability)] -0.0125 .30902 1 0 90 -1 0 Mouter Mrotsboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.02381 0 m
.02381 .00625 L
s
P
[(0)] .02381 0 0 2 0 Minner Mrotshowa
p
.002 w
.17033 0 m
.17033 .00625 L
s
P
[(2)] .17033 0 0 2 0 Minner Mrotshowa
p
.002 w
.31685 0 m
.31685 .00625 L
s
P
[(4)] .31685 0 0 2 0 Minner Mrotshowa
p
.002 w
.46337 0 m
.46337 .00625 L
s
P
[(6)] .46337 0 0 2 0 Minner Mrotshowa
p
.002 w
.60989 0 m
.60989 .00625 L
s
P
[(8)] .60989 0 0 2 0 Minner Mrotshowa
p
.002 w
.75641 0 m
.75641 .00625 L
s
P
[(10)] .75641 0 0 2 0 Minner Mrotshowa
p
.002 w
.90293 0 m
.90293 .00625 L
s
P
[(12)] .90293 0 0 2 0 Minner Mrotshowa
p
.001 w
.05311 0 m
.05311 .00375 L
s
P
p
.001 w
.08242 0 m
.08242 .00375 L
s
P
p
.001 w
.11172 0 m
.11172 .00375 L
s
P
p
.001 w
.14103 0 m
.14103 .00375 L
s
P
p
.001 w
.19963 0 m
.19963 .00375 L
s
P
p
.001 w
.22894 0 m
.22894 .00375 L
s
P
p
.001 w
.25824 0 m
.25824 .00375 L
s
P
p
.001 w
.28755 0 m
.28755 .00375 L
s
P
p
.001 w
.34615 0 m
.34615 .00375 L
s
P
p
.001 w
.37546 0 m
.37546 .00375 L
s
P
p
.001 w
.40476 0 m
.40476 .00375 L
s
P
p
.001 w
.43407 0 m
.43407 .00375 L
s
P
p
.001 w
.49267 0 m
.49267 .00375 L
s
P
p
.001 w
.52198 0 m
.52198 .00375 L
s
P
p
.001 w
.55128 0 m
.55128 .00375 L
s
P
p
.001 w
.58059 0 m
.58059 .00375 L
s
P
p
.001 w
.63919 0 m
.63919 .00375 L
s
P
p
.001 w
.6685 0 m
.6685 .00375 L
s
P
p
.001 w
.6978 0 m
.6978 .00375 L
s
P
p
.001 w
.72711 0 m
.72711 .00375 L
s
P
p
.001 w
.78571 0 m
.78571 .00375 L
s
P
p
.001 w
.81502 0 m
.81502 .00375 L
s
P
p
.001 w
.84432 0 m
.84432 .00375 L
s
P
p
.001 w
.87363 0 m
.87363 .00375 L
s
P
p
.001 w
.93223 0 m
.93223 .00375 L
s
P
p
.001 w
.96154 0 m
.96154 .00375 L
s
P
p
.001 w
.99084 0 m
.99084 .00375 L
s
P
[(number of bits \(b\))] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .01472 m
.00625 .01472 L
s
P
[(0)] -0.0125 .01472 1 0 0 Minner Mrotshowa
p
.002 w
0 .15911 m
.00625 .15911 L
s
P
[(0.2)] -0.0125 .15911 1 0 0 Minner Mrotshowa
p
.002 w
0 .3035 m
.00625 .3035 L
s
P
[(0.4)] -0.0125 .3035 1 0 0 Minner Mrotshowa
p
.002 w
0 .44789 m
.00625 .44789 L
s
P
[(0.6)] -0.0125 .44789 1 0 0 Minner Mrotshowa
p
.002 w
0 .59229 m
.00625 .59229 L
s
P
[(0.8)] -0.0125 .59229 1 0 0 Minner Mrotshowa
p
.001 w
0 .04359 m
.00375 .04359 L
s
P
p
.001 w
0 .07247 m
.00375 .07247 L
s
P
p
.001 w
0 .10135 m
.00375 .10135 L
s
P
p
.001 w
0 .13023 m
.00375 .13023 L
s
P
p
.001 w
0 .18799 m
.00375 .18799 L
s
P
p
.001 w
0 .21687 m
.00375 .21687 L
s
P
p
.001 w
0 .24574 m
.00375 .24574 L
s
P
p
.001 w
0 .27462 m
.00375 .27462 L
s
P
p
.001 w
0 .33238 m
.00375 .33238 L
s
P
p
.001 w
0 .36126 m
.00375 .36126 L
s
P
p
.001 w
0 .39014 m
.00375 .39014 L
s
P
p
.001 w
0 .41902 m
.00375 .41902 L
s
P
p
.001 w
0 .47677 m
.00375 .47677 L
s
P
p
.001 w
0 .50565 m
.00375 .50565 L
s
P
p
.001 w
0 .53453 m
.00375 .53453 L
s
P
p
.001 w
0 .56341 m
.00375 .56341 L
s
P
[(omission probability)] -0.0125 .30902 1 0 90 -1 0 Mouter Mrotshowa
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.02381 .61178 m
.02381 .61803 L
s
P
p
.002 w
.17033 .61178 m
.17033 .61803 L
s
P
p
.002 w
.31685 .61178 m
.31685 .61803 L
s
P
p
.002 w
.46337 .61178 m
.46337 .61803 L
s
P
p
.002 w
.60989 .61178 m
.60989 .61803 L
s
P
p
.002 w
.75641 .61178 m
.75641 .61803 L
s
P
p
.002 w
.90293 .61178 m
.90293 .61803 L
s
P
p
.001 w
.05311 .61428 m
.05311 .61803 L
s
P
p
.001 w
.08242 .61428 m
.08242 .61803 L
s
P
p
.001 w
.11172 .61428 m
.11172 .61803 L
s
P
p
.001 w
.14103 .61428 m
.14103 .61803 L
s
P
p
.001 w
.19963 .61428 m
.19963 .61803 L
s
P
p
.001 w
.22894 .61428 m
.22894 .61803 L
s
P
p
.001 w
.25824 .61428 m
.25824 .61803 L
s
P
p
.001 w
.28755 .61428 m
.28755 .61803 L
s
P
p
.001 w
.34615 .61428 m
.34615 .61803 L
s
P
p
.001 w
.37546 .61428 m
.37546 .61803 L
s
P
p
.001 w
.40476 .61428 m
.40476 .61803 L
s
P
p
.001 w
.43407 .61428 m
.43407 .61803 L
s
P
p
.001 w
.49267 .61428 m
.49267 .61803 L
s
P
p
.001 w
.52198 .61428 m
.52198 .61803 L
s
P
p
.001 w
.55128 .61428 m
.55128 .61803 L
s
P
p
.001 w
.58059 .61428 m
.58059 .61803 L
s
P
p
.001 w
.63919 .61428 m
.63919 .61803 L
s
P
p
.001 w
.6685 .61428 m
.6685 .61803 L
s
P
p
.001 w
.6978 .61428 m
.6978 .61803 L
s
P
p
.001 w
.72711 .61428 m
.72711 .61803 L
s
P
p
.001 w
.78571 .61428 m
.78571 .61803 L
s
P
p
.001 w
.81502 .61428 m
.81502 .61803 L
s
P
p
.001 w
.84432 .61428 m
.84432 .61803 L
s
P
p
.001 w
.87363 .61428 m
.87363 .61803 L
s
P
p
.001 w
.93223 .61428 m
.93223 .61803 L
s
P
p
.001 w
.96154 .61428 m
.96154 .61803 L
s
P
p
.001 w
.99084 .61428 m
.99084 .61803 L
s
P
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 .01472 m
1 .01472 L
s
P
p
.002 w
.99375 .15911 m
1 .15911 L
s
P
p
.002 w
.99375 .3035 m
1 .3035 L
s
P
p
.002 w
.99375 .44789 m
1 .44789 L
s
P
p
.002 w
.99375 .59229 m
1 .59229 L
s
P
p
.001 w
.99625 .04359 m
1 .04359 L
s
P
p
.001 w
.99625 .07247 m
1 .07247 L
s
P
p
.001 w
.99625 .10135 m
1 .10135 L
s
P
p
.001 w
.99625 .13023 m
1 .13023 L
s
P
p
.001 w
.99625 .18799 m
1 .18799 L
s
P
p
.001 w
.99625 .21687 m
1 .21687 L
s
P
p
.001 w
.99625 .24574 m
1 .24574 L
s
P
p
.001 w
.99625 .27462 m
1 .27462 L
s
P
p
.001 w
.99625 .33238 m
1 .33238 L
s
P
p
.001 w
.99625 .36126 m
1 .36126 L
s
P
p
.001 w
.99625 .39014 m
1 .39014 L
s
P
p
.001 w
.99625 .41902 m
1 .41902 L
s
P
p
.001 w
.99625 .47677 m
1 .47677 L
s
P
p
.001 w
.99625 .50565 m
1 .50565 L
s
P
p
.001 w
.99625 .53453 m
1 .53453 L
s
P
p
.001 w
.99625 .56341 m
1 .56341 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
.002 w
.09707 .60332 m
.17033 .47351 L
.24359 .34162 L
.31685 .23238 L
.39011 .15147 L
.46337 .09786 L
.53663 .06408 L
.60989 .04329 L
.68315 .03088 L
.75641 .02386 L
.82967 .0198 L
.90293 .01752 L
.97619 .01621 L
s
p
[ .005 .015 ] 0 setdash
.09707 .52009 m
.17033 .33238 L
.24359 .26018 L
.31685 .20965 L
.39011 .12301 L
.46337 .10135 L
.53663 .04359 L
.60989 .05803 L
.68315 .02915 L
.75641 .01472 L
.82967 .02193 L
.90293 .02193 L
.97619 .01472 L
s
P
p
[ .02 .02 ] 0 setdash
.09707 .45929 m
.17033 .27142 L
.24359 .20352 L
.31685 .15761 L
.39011 .08315 L
.46337 .06577 L
.53663 .02466 L
.60989 .03381 L
s
P
p
[ .02 .02 ] 0 setdash
.09707 .57429 m
.17033 .39531 L
.24359 .32212 L
.31685 .26929 L
.39011 .17466 L
.46337 .14984 L
.53663 .07911 L
.60989 .09773 L
s
P
P
% End of Graphics
MathPictureEnd
%%EndDocument

 endTexFig
 -42 2030 a Fp(Figure)50 b(3)56 b Fo(Last)43 b(state)h(omission)d
(probabilities)g(observ)m(ed)k(in)d(the)i(exp)s(erimen)m(ts)g
(\(dotted,)f(with)-42 2147 y(dashed)i(lines)d(indicating)f(90\045)i
(con\014dence)i(in)m(terv)-5 b(als\))43 b(and)g(b)s(ound)g(calculated)g
(b)m(y)h(the)f(v)m(eri\014er)-42 2263 y(\(solid\))32
b(for)g(the)h Fp(branc)m(hing)f Fo(proto)s(col)f(with)i
Fn(n)p Fo(=262)21 b(143,)32 b Fn(d)p Fo(=17)g(and)g Fn(m)p
Fo(=262)22 b(147)-42 2649 y(trace.)37 b(Ho)m(w)m(ev)m(er,)h(this)e
(trace)g(is)g(usually)f(man)m(y)h(orders)h(of)e(magnitude)g(longer)g
(than)h(the)h(shortest)-42 2765 y(p)s(ossible)g(trace)g(to)f(exp)s(ose)
i(the)g(error.)f(Breadth-\014rst)g(searc)m(h,)h(b)m(y)g(con)m(trast,)g
(can)f(\014nd)g(one)g(of)g(the)-42 2881 y(shortest)d(traces)f(to)g(an)f
(error,)h(but)g(requires)g(additional)d(information)f(to)j(b)s(e)h
(stored.)56 2999 y(In)48 b(the)g(previous)g(Mur)p Fn(')g
Fo(implemen)m(tation,)d(a)j(p)s(oin)m(ter)f(to)g(a)g(predecessor)k
(state)d(w)m(as)g(stored)-42 3115 y(together)34 b(with)f(eac)m(h)i
(state.)f(Ho)m(w)m(ev)m(er,)i(these)f(p)s(oin)m(ters)e(w)m(ould)g(no)m
(w)i(require)e(more)g(memory)g(than)-42 3232 y(the)i(compressed)g(v)-5
b(alues.)34 b(A)h(solution)d(to)i(this)g(problem)e(is)i(writing)e(a)i
(record)h({)f(consisting)f(of)h(the)-42 3348 y(index)28
b(of)e(the)i(predecessor's)i(record)e(and)f(the)g(compressed)i(v)-5
b(alue)26 b({)h(in)m(to)f(a)h(\014le)g(for)f(eac)m(h)i(new)g(state.)-42
3464 y(This)40 b(information)35 b(is)k(su\016cien)m(t)h(to)f(generate)g
(an)g(error)g(trace.)h(Clearly)-8 b(,)38 b(the)h(\014le)g(is)f(sequen)m
(tially)-42 3580 y(accessed;)d(in)d(practice,)h(no)f(slo)m(w-do)m(wn)h
(has)g(b)s(een)h(observ)m(ed)g(due)g(to)e(main)m(taining)d(this)j
(\014le.)-42 3943 y Fk(5)117 b(RESUL)-10 b(TS)39 b(ON)f(SAMPLE)h(PR)m
(OTOCOLS)-42 4177 y Fo(F)-8 b(or)34 b(all)e(the)i(exp)s(erimen)m(ts)h
(describ)s(ed)f(in)g(the)g(follo)m(wing,)d(w)m(e)36 b(v)-5
b(aried)33 b(the)h(n)m(um)m(b)s(er)h(of)e(bits)h Fn(b)g
Fo(in)g(the)-42 4293 y(compressed)c(v)-5 b(alues.)29
b(F)-8 b(or)27 b(eac)m(h)j(v)-5 b(alue)28 b(of)44 b Fn(b)p
Fo(,)29 b(w)m(e)g(conducted)h(100)e(runs)h(of)f(the)h(v)m(eri\014er)g
(and)g(coun)m(ted)-42 4409 y(the)35 b(n)m(um)m(b)s(er)f(of)f(runs)i(in)
e(whic)m(h)h(a)g(particular)e(state)i(w)m(as)g(omitted.)f(F)-8
b(or)33 b(this)g(state,)i(w)m(e)f(c)m(hose)i(the)-42
4526 y(last)27 b(state)g(that)g(is)f(explored)h(in)f(a)h
(breadth-\014rst)g(searc)m(h)i(without)d(omissions.)g(Clearly)-8
b(,)26 b(this)g(state)h(is)-42 4642 y(in)h(the)h(last)f
(breadth-\014rst)h(lev)m(el)f(and)g(should)h(ha)m(v)m(e)h(an)e
(omission)f(probabilit)m(y)f(that)i(appro)m(ximately)-42
4758 y(equals)42 b(the)g(b)s(ound)g(on)f(the)h(maxim)m(um)d(state)j
(omission)d(probabilit)m(y)g(rep)s(orted)j(b)m(y)g(the)g(v)m
(eri\014er,)-42 4874 y(assuming)33 b(there)h(are)f(not)g(to)s(o)g(man)m
(y)g(paths)h(to)f(this)g(state.)h(If)f(there)h(are)f(man)m(y)g(paths)h
(to)f(the)h(last)-42 4991 y(state,)28 b(one)g(w)m(ould)f(exp)s(ect)i
(the)f(observ)m(ed)h(omission)c(probabilit)m(y)h(to)h(b)s(e)g(smaller)f
(than)h(the)h(rep)s(orted)-42 5107 y(b)s(ound.)-42 5362
y Fi(5.1)136 b(An)44 b(arti\014cial)i(proto)t(col)-42
5596 y Fo(Figure)34 b(3)h(sho)m(ws)i(the)e(outcomes)g(of)g(our)f(exp)s
(erimen)m(ts)i(on)f(an)g(arti\014cial)d(`branc)m(hing')j(proto)s(col,)f
(in)-42 5712 y(whic)m(h)e(eac)m(h)g(state)g({)f(except)h(the)g(ones)g
(in)e(the)i(last)e(lev)m(el)h({)g(has)g(t)m(w)m(o)h(c)m(hildren)f(whic)
m(h)h(are)f(di\013eren)m(t)p eop
%%Page: 13 13
13 12 bop -42 100 a Fl(R)l(esults)29 b(on)h(Sample)g(Pr)l(oto)l(c)l
(ols)2678 b Fm(13)158 166 y
 26688970 13616824 0 15787622 40258437 36311531 startTexFig
 158 166 a
%%BeginDocument: math.pro
%
% Original name of this file: mathematica2.1.pro
%
% This prolog was derived the output of 'psfix'.  To properly use it,
% the line 'Mathdict begin' must be placed just before the line
% 'MathPictureStart' in the Encapsulated PostScript file.
%
% All alterations made by me are noted by comments beginning '%T%'
%
%						-- Tony Guzzi [26-Jan-93]

/Mathdict 150 dict def
Mathdict begin
  /Mlmarg	1.0 72 mul def
  /Mrmarg	1.0 72 mul def
  /Mbmarg	1.0 72 mul def
  /Mtmarg	1.0 72 mul def
  /Mwidth	8.5 72 mul def
  /Mheight	11 72 mul def
  /Mtransform	{  } bind def
  /Mnodistort	true def
  /Mfixwid	true	def
  /Mfixdash	false def
  /Mrot		0	def
  /Mpstart { MathPictureStart } bind def
  /Mpend { MathPictureEnd } bind def
  /Mscale { 0 1 0 1 5 -1 roll MathScale } bind def
  /ISOLatin1Encoding dup where
  { pop pop }
  {
   [
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash
    /zero /one /two /three /four /five /six /seven
    /eight /nine /colon /semicolon /less /equal /greater /question
    /at /A /B /C /D /E /F /G
    /H /I /J /K /L /M /N /O
    /P /Q /R /S /T /U /V /W
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
    /quoteleft /a /b /c /d /e /f /g
    /h /i /j /k /l /m /n /o
    /p /q /r /s /t /u /v /w
    /x /y /z /braceleft /bar /braceright /asciitilde /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
    /dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section
    /dieresis /copyright /ordfeminine /guillemotleft
    /logicalnot /hyphen /registered /macron
    /degree /plusminus /twosuperior /threesuperior
    /acute /mu /paragraph /periodcentered
    /cedilla /onesuperior /ordmasculine /guillemotright
    /onequarter /onehalf /threequarters /questiondown
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
   ] def
  } ifelse
  /MFontDict 50 dict def
  /MStrCat {
    exch
    dup length
    2 index length add
    string
    dup 3 1 roll
    copy
    length
    exch dup
    4 2 roll exch
    putinterval
  } def
  /MCreateEncoding
  {
    1 index
    255 string cvs
    (-) MStrCat
    1 index MStrCat
    cvn exch
    (Encoding) MStrCat
    cvn dup where
    { exch get } { pop StandardEncoding } ifelse
    3 1 roll
    dup MFontDict exch known not
    {
      1 index findfont
      dup length dict
      begin
       {1 index /FID ne {def} {pop pop} ifelse } forall
       /Encoding 3 index def
       currentdict
      end
      1 index exch definefont pop
      MFontDict 1 index
      null put
    }
    if
    exch pop
    exch pop
  } def
  /ISOLatin1 { (ISOLatin1) MCreateEncoding } def
  /ISO8859 { (ISOLatin1) MCreateEncoding } def
  /Mcopyfont {
    dup
    maxlength
    dict
    exch
    { 1 index /FID eq { pop pop } { 2 index 3 1 roll put } ifelse } forall
  } def
  /Plain	/Courier findfont Mcopyfont definefont pop
  /Bold	/Courier-Bold findfont Mcopyfont definefont pop
  /Italic /Courier-Oblique findfont Mcopyfont definefont pop
  /MathPictureStart {
    gsave
    Mtransform
    Mlmarg
    Mbmarg
    translate
    Mwidth
    Mlmarg Mrmarg add
    sub
    /Mwidth exch def
    Mheight
    Mbmarg Mtmarg add
    sub
    /Mheight exch def
    /Mtmatrix matrix currentmatrix def
    /Mgmatrix matrix currentmatrix def
  } bind def
  /MathPictureEnd { grestore
		    %T% Next line added by Tony [26-Jan-93]
		    end
		    } bind def
  /MFill { 0 0 moveto
	   Mwidth 0 lineto
	   Mwidth Mheight lineto
	   0 Mheight lineto
           fill
          } bind def
  /MPlotRegion {
    3 index
    Mwidth mul
    2 index
    Mheight mul
    translate
    exch sub
    Mheight mul
    /Mheight exch def
    exch sub
    Mwidth mul
    /Mwidth exch def
  } bind def
  /MathSubStart {
    Momatrix
    Mgmatrix Mtmatrix
    Mwidth Mheight
    7 -2 roll
    moveto
    Mtmatrix setmatrix
    currentpoint
    Mgmatrix setmatrix
    9 -2 roll
    moveto
    Mtmatrix setmatrix
    currentpoint
    2 copy translate
    /Mtmatrix matrix currentmatrix def
    3 -1 roll
    exch sub
    /Mheight exch def
    sub
    /Mwidth exch def
  } bind def
  /MathSubEnd {
    /Mheight exch def
    /Mwidth exch def
    /Mtmatrix exch def
    dup setmatrix
    /Mgmatrix exch def
    /Momatrix exch def
  } bind def
  /Mdot    { moveto 0 0 rlineto stroke } bind def
  /Mtetra  { moveto lineto lineto lineto fill } bind def
  /Metetra { moveto lineto lineto lineto closepath
    	     gsave fill grestore 0 setgray stroke } bind def
  /Mistroke {
    flattenpath
    0 0 0
    { 4 2 roll pop pop }
    {
     4 -1 roll
     2 index
     sub dup mul
     4 -1 roll
     2 index
     sub dup mul
     add sqrt
     4 -1 roll
     add
     3 1 roll
    }
    { stop }
    { stop }
    pathforall
    pop pop
    currentpoint
    stroke
    moveto
    currentdash
    3 -1 roll
    add
    setdash
  } bind def
  /Mfstroke { stroke currentdash pop 0 setdash } bind def
  /Mrotsboxa {
    gsave
    dup
    /Mrot exch def
    Mrotcheck
    Mtmatrix
    dup
    setmatrix
    7 1 roll
    4 index
    4 index
    translate
    rotate
    3 index
    -1 mul
    3 index
    -1 mul
    translate
    /Mtmatrix matrix currentmatrix def
    grestore
    Msboxa
    3  -1 roll
    /Mtmatrix exch def
    /Mrot 0 def
  } bind def
  /Msboxa {
    newpath
    5 -1 roll
    Mvboxa
    pop
    Mboxout
    6 -1 roll
    5 -1 roll
    4 -1 roll
    Msboxa1
    5 -3 roll
    Msboxa1
    Mboxrot
    [
      7 -2 roll 2 copy
      [ 3 1 roll 10 -1 roll 9 -1 roll ]
      6 1 roll 5 -2 roll
    ]
  } bind def
  /Msboxa1 {
    sub
    2 div
    dup
    2 index
    1 add
    mul
    3 -1 roll
    -1 add
    3 -1 roll
    mul
  } bind def
  /Mvboxa {
    Mfixwid
    { Mvboxa1 }
    {
     dup
     Mwidthcal
     0 exch
     { add }
     forall
     exch
     Mvboxa1
     4 index
     7 -1 roll
     add
     4 -1 roll
     pop
     3 1 roll
    }
    ifelse
  } bind def
  /Mvboxa1 {
    gsave
    newpath
    [
      true
      3 -1 roll
      {
       Mbbox
       5 -1 roll
       { 0 5 1 roll }
       {
        7 -1 roll
        exch sub
        (m) stringwidth pop
        .3 mul
        sub
        7 1 roll
        6 -1 roll
        4 -1 roll
        Mmin
        3 -1 roll
        5 index
        add
        5 -1 roll
        4 -1 roll
        Mmax
        4 -1 roll
       }
       ifelse
       false
      }
      forall
      { stop } if
      counttomark
      1 add
      4 roll
    ]
    grestore
  } bind def
  /Mbbox {
    1 dict begin
    0 0 moveto
    /temp (T) def
    { gsave
      currentpoint newpath moveto
      temp 0 3 -1 roll put temp
      false charpath flattenpath currentpoint
      pathbbox
      grestore moveto lineto moveto
    } forall
    pathbbox
    newpath
    end
  } bind def
  /Mmin { 2 copy gt { exch } if pop } bind def
  /Mmax { 2 copy lt { exch } if pop } bind def
  /Mrotshowa {
    dup
    /Mrot exch def
    Mrotcheck
    Mtmatrix
    dup
    setmatrix
    7 1 roll
    4 index
    4 index
    translate
    rotate
    3 index
    -1 mul
    3 index
    -1 mul
    translate
    /Mtmatrix matrix currentmatrix def
    Mgmatrix setmatrix
    Mshowa
    /Mtmatrix exch def
    /Mrot 0 def
  } bind def
  /Mshowa {
    4 -2 roll
    moveto
    2 index
    Mtmatrix setmatrix
    Mvboxa
    7 1 roll
    Mboxout
    6 -1 roll
    5 -1 roll
    4 -1 roll
    Mshowa1
    4 1 roll
    Mshowa1
    rmoveto
    currentpoint
    Mfixwid
    { Mshowax }
    { Mshoway }
    ifelse
    pop pop pop pop
    Mgmatrix setmatrix
  } bind def
  /Mshowax {	
    0 1
    4 index length
    -1 add
    {
     2 index
     4 index
     2 index
     get
     3 index
     add
     moveto
     4 index
     exch get
     Mfixdash { Mfixdashp } if
     show
    } for
  } bind def
  /Mfixdashp {
    dup
    length
    1
    gt
    1 index
    true exch
    { 45 eq and } forall
    and
    {
     gsave
     (--) stringwidth pop
     (-)  stringwidth pop
     sub
     2 div
     0 rmoveto
     dup
     length
     1 sub
     { (-) show } repeat
    grestore
    }
    if
  } bind def	
  /Mshoway {
    3 index
    Mwidthcal
    5 1 roll
    0 1
    4 index length
    -1 add
    {
      2 index
      4 index
      2 index
      get
      3 index
      add
      moveto
      4 index
      exch get
      [
        6 index
        aload
        length
        2 add
        -1 roll
        {
          pop
          Strform
          stringwidth
          pop
          neg 
          exch
          add
          0 rmoveto
        }
        exch
        kshow
        cleartomark
        } for
        pop	
  } bind def
  /Mwidthcal {
    [ exch { Mwidthcal1 } forall ]
    [
     exch
     dup
     Maxlen
     -1 add
     0 1
     3 -1 roll
     {
     [
      exch
      2 index
      { 1 index Mget exch } forall		
      pop
      Maxget
      exch
     }
     for
     pop
     ]
     Mreva
  } bind def
  /Mreva { [ exch aload length -1 1 {1 roll} for ] } bind def
  /Mget	{
    1 index
    length
    -1 add
    1 index
    ge { get } { pop pop 0 } ifelse
  } bind def
  /Maxlen	{ [ exch { length } forall Maxget } bind def
  /Maxget	{ counttomark -1 add 1 1 3 -1 roll { pop Mmax } for exch pop } bind def
  /Mwidthcal1 { [ exch { Strform stringwidth pop } forall ] } bind def
  /Strform { /tem (x) def tem 0 3 -1 roll put tem } bind def
  /Mshowa1 { 2 copy add 4 1 roll sub mul sub -2 div } bind def
  /MathScale {
    Mwidth
    Mheight
    Mlp
    translate
    scale
    /yscale exch def
    /ybias exch def
    /xscale exch def
    /xbias exch def
    /Momatrix
    xscale yscale matrix scale
    xbias ybias matrix translate
    matrix concatmatrix def
    /Mgmatrix
    matrix currentmatrix
    def
  } bind def
  /Mlp {
    3 copy
    Mlpfirst
    {
      Mnodistort { Mmin dup } if
      4 index
      2 index
      2 index
      Mlprun
      11 index
      11 -1 roll
      10 -4 roll
      Mlp1
      8 index
      9 -5 roll
      Mlp1
      4 -1 roll
      and
      { exit } if
      3 -1 roll
      pop pop
    } loop
    exch
    3 1 roll
    7 -3 roll
    pop pop pop
  } bind def
  /Mlpfirst {
    3 -1 roll
    dup length
    2 copy
    -2 add
    get
    aload
    pop pop pop
    4 -2 roll
    -1 add
    get
    aload
    pop pop pop
    6 -1 roll
    3 -1 roll
    5 -1 roll
    sub
    div
    4 1 roll
    exch sub
    div
  } bind def
  /Mlprun {
    2 copy
    4 index
    0 get
    dup
    4 1 roll
    Mlprun1
    3 copy
    8 -2 roll
    9 -1 roll
    {
      3 copy
      Mlprun1
      3 copy
      11 -3 roll
      /gt Mlpminmax
      8 3 roll
      11 -3 roll
      /lt Mlpminmax
      8 3 roll
    } forall
    pop pop pop pop
    3 1 roll
    pop pop
    aload pop
    5 -1 roll
    aload pop
    exch
    6 -1 roll
    Mlprun2
    8 2 roll
    4 -1 roll
    Mlprun2
    6 2 roll
    3 -1 roll
    Mlprun2
    4 2 roll
    exch
    Mlprun2
    6 2 roll
  } bind def
  /Mlprun1 {
    aload pop
    exch
    6 -1 roll
    5 -1 roll
    mul add
    4 -2 roll
    mul
    3 -1 roll
    add
  } bind def
  /Mlprun2 { 2 copy add 2 div 3 1 roll exch sub } bind def
  /Mlpminmax {
    cvx
    2 index
    6 index
    2 index
    exec { 7 -3 roll 4 -1 roll } if
    1 index
    5 index
    3 -1 roll
    exec
    { 4  1 roll pop
      5 -1 roll
      aload
      pop pop
      4 -1 roll
      aload pop
      [
       8 -2 roll pop
       5 -2 roll pop
       6 -2 roll pop
       5 -1 roll
      ]
      4 1 roll pop
    }
    { pop pop pop }
    ifelse
  } bind def
  /Mlp1 {
    5 index
    3 index	sub
    5 index
    2 index mul
    1 index
    le
    1 index
    0 le
    or
    dup
    not
    { 1 index 3 index div .99999 mul 8 -1 roll pop 7 1 roll } if
    8 -1 roll
    2 div
    7 -2 roll
    pop sub
    5 index
    6 -3 roll
    pop pop
    mul sub
    exch
  } bind def
  /intop 0 def
  /inrht 0 def
  /inflag 0 def
  /outflag 0 def
  /xadrht 0 def
  /xadlft 0 def
  /yadtop 0 def
  /yadbot 0 def
  /Minner {
    outflag 1 eq { /outflag 0 def /intop 0 def /inrht 0 def } if		
    5 index
    gsave
    Mtmatrix setmatrix
    Mvboxa pop
    grestore
    3 -1 roll
    pop
    dup
    intop gt { /intop exch def } { pop } ifelse
    dup
    inrht gt { /inrht exch def } { pop } ifelse
    pop
    /inflag 1 def
  } bind def
  /Mouter {
    /xadrht 0 def
    /xadlft 0 def
    /yadtop 0 def
    /yadbot 0 def
    inflag
    1 eq
    {
     dup 0 lt { dup intop mul neg /yadtop exch def } if
     dup 0 gt { dup intop mul /yadbot exch def } if
     pop
     dup 0 lt { dup inrht mul neg /xadrht exch def } if
     dup 0 gt { dup inrht mul /xadlft exch def } if
     pop
     /outflag 1 def
    }
    { pop pop}
    ifelse
    /inflag 0 def
    /inrht 0 def
    /intop 0 def
  } bind def	
  /Mboxout {
    outflag
    1 eq {
     4 -1 roll
     xadlft
     leadjust
     add
     sub
     4 1 roll
     3 -1
     roll
     yadbot
     leadjust
     add
     sub
     3 1 roll
     exch
     xadrht
     leadjust
     add
     add
     exch
     yadtop
     leadjust
     add
     add
     /outflag 0 def
     /xadlft 0 def
     /yadbot 0 def
     /xadrht 0 def
     /yadtop 0 def
    } if
  } bind def
  /leadjust { (m) stringwidth pop .5 mul } bind def
  /Mrotcheck {
    dup
    90
    eq
    {
     yadbot
     /yadbot xadrht def	
     /xadrht yadtop def
     /yadtop xadlft def
     /xadlft exch def
    } if
    dup
    cos
    1 index
    sin
    Checkaux
    dup
    cos
    1 index
    sin neg
    exch
    Checkaux
    3 1 roll
    pop pop
  } bind def
  /Checkaux { 4 index exch 4 index mul 3 1 roll mul add 4 1 roll } bind def
  /Mboxrot {
    Mrot
    90 eq  { brotaux 4 2 roll } if
    Mrot
    180 eq { 4 2 roll brotaux 4 2 roll brotaux }	if
    Mrot
    270 eq { 4 2 roll brotaux } if
  } bind def
  /brotaux { neg exch neg } bind def
  /Mabsproc {
    0
    matrix defaultmatrix
    dtransform idtransform
    dup mul exch
    dup mul
    add sqrt
  } bind def
  /Mabswid { Mabsproc setlinewidth	} bind def
  /Mabsdash {
    exch
    [ exch { Mabsproc } forall ]
    exch
    setdash
  } bind def
  /MBeginOrig { Momatrix concat} bind def
  /MEndOrig { Mgmatrix setmatrix} bind def
  /sampledsound where
  { pop}
  { /sampledsound {
      exch
      pop
      exch
      5 1 roll
      mul
      4 idiv
      mul
      2 idiv
      exch pop
      exch
      /Mtempproc exch def
      { Mtempproc pop} repeat
    } bind def
  } ifelse
  /g { setgray} bind def
  /k { setcmykcolor} bind def
  /m { moveto} bind def
  /p { gsave} bind def
  /r { setrgbcolor} bind def
  /w { setlinewidth} bind def
  /C { curveto} bind def
  /F { fill} bind def
  /L { lineto} bind def
  /P { grestore} bind def
  /s { stroke} bind def
  /setcmykcolor where
  { pop}
  { /setcmykcolor {
      4 1 roll
      [ 4 1 roll ]
      {
       1 index sub
       1 sub neg
       dup
       0 lt { pop 0 } if
       dup
       1 gt { pop 1 } if
       exch
      } forall
      pop
      setrgbcolor
    } bind def
  } ifelse
  /Mcharproc { currentfile (x) readhexstring pop 0 get exch div } bind def
  /Mshadeproc {
    dup
    3 1
    roll
    { dup Mcharproc 3 1 roll } repeat
    1 eq { setgray }
         { 3 eq { setrgbcolor }
  	      { setcmykcolor }
  	      ifelse
         }
         ifelse
  } bind def
  /Mrectproc {
    3 index 2 index moveto
    2 index 3 -1 roll lineto
    dup 3 1 roll lineto
    lineto
    fill
  } bind def
  /Mcolorimage
  {
    7 1
    roll
    pop
    pop
    matrix
    invertmatrix
    concat
    2 exch exp
    1 sub
    3 1 roll
    1 1
    2 index
    {
      1 1
      4 index
      {
        dup 1 sub exch 2 index
        dup 1 sub exch 7 index
        9 index
        Mshadeproc
        Mrectproc
      } for
      pop
    } for
    pop pop pop pop
  } bind def
  /Mimage
  {
    pop
    matrix
    invertmatrix
    concat
    2 exch exp
    1 sub
    3 1 roll
    1 1
    2 index
    {
      1 1
      4 index
      {
        dup 1 sub exch 2 index
        dup 1 sub exch 7 index
        Mcharproc
        setgray
        Mrectproc
      } for
      pop
    } for
    pop pop pop
  } bind def
%T% Next line added by Tony [26-Jan-93]
end
%%EndDocument
 158 166 a
%%BeginDocument: fi:prob.sci.eps
Mathdict begin
MathPictureStart
/Courier findfont 13  scalefont  setfont
% Scaling calculations
0.0238095 0.0396825 0.0147151 0.588604 [
[(0)] .02381 0 0 2 0 Minner Mrotsboxa
[(5)] .22222 0 0 2 0 Minner Mrotsboxa
[(10)] .42063 0 0 2 0 Minner Mrotsboxa
[(15)] .61905 0 0 2 0 Minner Mrotsboxa
[(20)] .81746 0 0 2 0 Minner Mrotsboxa
[(number of bits \(b\))] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(0)] -0.0125 .01472 1 0 0 Minner Mrotsboxa
[(0.2)] -0.0125 .13244 1 0 0 Minner Mrotsboxa
[(0.4)] -0.0125 .25016 1 0 0 Minner Mrotsboxa
[(0.6)] -0.0125 .36788 1 0 0 Minner Mrotsboxa
[(0.8)] -0.0125 .4856 1 0 0 Minner Mrotsboxa
[(1)] -0.0125 .60332 1 0 0 Minner Mrotsboxa
[(omission probability)] -0.0125 .30902 1 0 90 -1 0 Mouter Mrotsboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.02381 0 m
.02381 .00625 L
s
P
[(0)] .02381 0 0 2 0 Minner Mrotshowa
p
.002 w
.22222 0 m
.22222 .00625 L
s
P
[(5)] .22222 0 0 2 0 Minner Mrotshowa
p
.002 w
.42063 0 m
.42063 .00625 L
s
P
[(10)] .42063 0 0 2 0 Minner Mrotshowa
p
.002 w
.61905 0 m
.61905 .00625 L
s
P
[(15)] .61905 0 0 2 0 Minner Mrotshowa
p
.002 w
.81746 0 m
.81746 .00625 L
s
P
[(20)] .81746 0 0 2 0 Minner Mrotshowa
p
.001 w
.06349 0 m
.06349 .00375 L
s
P
p
.001 w
.10317 0 m
.10317 .00375 L
s
P
p
.001 w
.14286 0 m
.14286 .00375 L
s
P
p
.001 w
.18254 0 m
.18254 .00375 L
s
P
p
.001 w
.2619 0 m
.2619 .00375 L
s
P
p
.001 w
.30159 0 m
.30159 .00375 L
s
P
p
.001 w
.34127 0 m
.34127 .00375 L
s
P
p
.001 w
.38095 0 m
.38095 .00375 L
s
P
p
.001 w
.46032 0 m
.46032 .00375 L
s
P
p
.001 w
.5 0 m
.5 .00375 L
s
P
p
.001 w
.53968 0 m
.53968 .00375 L
s
P
p
.001 w
.57937 0 m
.57937 .00375 L
s
P
p
.001 w
.65873 0 m
.65873 .00375 L
s
P
p
.001 w
.69841 0 m
.69841 .00375 L
s
P
p
.001 w
.7381 0 m
.7381 .00375 L
s
P
p
.001 w
.77778 0 m
.77778 .00375 L
s
P
p
.001 w
.85714 0 m
.85714 .00375 L
s
P
p
.001 w
.89683 0 m
.89683 .00375 L
s
P
p
.001 w
.93651 0 m
.93651 .00375 L
s
P
p
.001 w
.97619 0 m
.97619 .00375 L
s
P
[(number of bits \(b\))] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .01472 m
.00625 .01472 L
s
P
[(0)] -0.0125 .01472 1 0 0 Minner Mrotshowa
p
.002 w
0 .13244 m
.00625 .13244 L
s
P
[(0.2)] -0.0125 .13244 1 0 0 Minner Mrotshowa
p
.002 w
0 .25016 m
.00625 .25016 L
s
P
[(0.4)] -0.0125 .25016 1 0 0 Minner Mrotshowa
p
.002 w
0 .36788 m
.00625 .36788 L
s
P
[(0.6)] -0.0125 .36788 1 0 0 Minner Mrotshowa
p
.002 w
0 .4856 m
.00625 .4856 L
s
P
[(0.8)] -0.0125 .4856 1 0 0 Minner Mrotshowa
p
.002 w
0 .60332 m
.00625 .60332 L
s
P
[(1)] -0.0125 .60332 1 0 0 Minner Mrotshowa
p
.001 w
0 .03826 m
.00375 .03826 L
s
P
p
.001 w
0 .0618 m
.00375 .0618 L
s
P
p
.001 w
0 .08535 m
.00375 .08535 L
s
P
p
.001 w
0 .10889 m
.00375 .10889 L
s
P
p
.001 w
0 .15598 m
.00375 .15598 L
s
P
p
.001 w
0 .17952 m
.00375 .17952 L
s
P
p
.001 w
0 .20307 m
.00375 .20307 L
s
P
p
.001 w
0 .22661 m
.00375 .22661 L
s
P
p
.001 w
0 .2737 m
.00375 .2737 L
s
P
p
.001 w
0 .29724 m
.00375 .29724 L
s
P
p
.001 w
0 .32079 m
.00375 .32079 L
s
P
p
.001 w
0 .34433 m
.00375 .34433 L
s
P
p
.001 w
0 .39142 m
.00375 .39142 L
s
P
p
.001 w
0 .41497 m
.00375 .41497 L
s
P
p
.001 w
0 .43851 m
.00375 .43851 L
s
P
p
.001 w
0 .46205 m
.00375 .46205 L
s
P
p
.001 w
0 .50914 m
.00375 .50914 L
s
P
p
.001 w
0 .53269 m
.00375 .53269 L
s
P
p
.001 w
0 .55623 m
.00375 .55623 L
s
P
p
.001 w
0 .57977 m
.00375 .57977 L
s
P
[(omission probability)] -0.0125 .30902 1 0 90 -1 0 Mouter Mrotshowa
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.02381 .61178 m
.02381 .61803 L
s
P
p
.002 w
.22222 .61178 m
.22222 .61803 L
s
P
p
.002 w
.42063 .61178 m
.42063 .61803 L
s
P
p
.002 w
.61905 .61178 m
.61905 .61803 L
s
P
p
.002 w
.81746 .61178 m
.81746 .61803 L
s
P
p
.001 w
.06349 .61428 m
.06349 .61803 L
s
P
p
.001 w
.10317 .61428 m
.10317 .61803 L
s
P
p
.001 w
.14286 .61428 m
.14286 .61803 L
s
P
p
.001 w
.18254 .61428 m
.18254 .61803 L
s
P
p
.001 w
.2619 .61428 m
.2619 .61803 L
s
P
p
.001 w
.30159 .61428 m
.30159 .61803 L
s
P
p
.001 w
.34127 .61428 m
.34127 .61803 L
s
P
p
.001 w
.38095 .61428 m
.38095 .61803 L
s
P
p
.001 w
.46032 .61428 m
.46032 .61803 L
s
P
p
.001 w
.5 .61428 m
.5 .61803 L
s
P
p
.001 w
.53968 .61428 m
.53968 .61803 L
s
P
p
.001 w
.57937 .61428 m
.57937 .61803 L
s
P
p
.001 w
.65873 .61428 m
.65873 .61803 L
s
P
p
.001 w
.69841 .61428 m
.69841 .61803 L
s
P
p
.001 w
.7381 .61428 m
.7381 .61803 L
s
P
p
.001 w
.77778 .61428 m
.77778 .61803 L
s
P
p
.001 w
.85714 .61428 m
.85714 .61803 L
s
P
p
.001 w
.89683 .61428 m
.89683 .61803 L
s
P
p
.001 w
.93651 .61428 m
.93651 .61803 L
s
P
p
.001 w
.97619 .61428 m
.97619 .61803 L
s
P
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 .01472 m
1 .01472 L
s
P
p
.002 w
.99375 .13244 m
1 .13244 L
s
P
p
.002 w
.99375 .25016 m
1 .25016 L
s
P
p
.002 w
.99375 .36788 m
1 .36788 L
s
P
p
.002 w
.99375 .4856 m
1 .4856 L
s
P
p
.002 w
.99375 .60332 m
1 .60332 L
s
P
p
.001 w
.99625 .03826 m
1 .03826 L
s
P
p
.001 w
.99625 .0618 m
1 .0618 L
s
P
p
.001 w
.99625 .08535 m
1 .08535 L
s
P
p
.001 w
.99625 .10889 m
1 .10889 L
s
P
p
.001 w
.99625 .15598 m
1 .15598 L
s
P
p
.001 w
.99625 .17952 m
1 .17952 L
s
P
p
.001 w
.99625 .20307 m
1 .20307 L
s
P
p
.001 w
.99625 .22661 m
1 .22661 L
s
P
p
.001 w
.99625 .2737 m
1 .2737 L
s
P
p
.001 w
.99625 .29724 m
1 .29724 L
s
P
p
.001 w
.99625 .32079 m
1 .32079 L
s
P
p
.001 w
.99625 .34433 m
1 .34433 L
s
P
p
.001 w
.99625 .39142 m
1 .39142 L
s
P
p
.001 w
.99625 .41497 m
1 .41497 L
s
P
p
.001 w
.99625 .43851 m
1 .43851 L
s
P
p
.001 w
.99625 .46205 m
1 .46205 L
s
P
p
.001 w
.99625 .50914 m
1 .50914 L
s
P
p
.001 w
.99625 .53269 m
1 .53269 L
s
P
p
.001 w
.99625 .55623 m
1 .55623 L
s
P
p
.001 w
.99625 .57977 m
1 .57977 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
[ .02 .02 ] 0 setdash
.002 w
.06349 .60332 m
.10317 .60332 L
.14286 .60332 L
.18254 .60332 L
.22222 .60332 L
.2619 .60332 L
.30159 .60332 L
.34127 .60332 L
.38095 .60332 L
.42063 .60332 L
.46032 .60332 L
.5 .60332 L
.53968 .60331 L
.57937 .60149 L
.61905 .57049 L
.65873 .46432 L
.69841 .31728 L
.7381 .193 L
.77778 .11188 L
.81746 .06549 L
.85714 .04067 L
.89683 .02784 L
.93651 .02131 L
.97619 .01802 L
s
P
.002 w
.06349 .60332 m
.10317 .6033 L
.14286 .60315 L
.18254 .60124 L
.22222 .58684 L
.2619 .53381 L
.30159 .43373 L
.34127 .30072 L
.38095 .19027 L
.42063 .11471 L
.46032 .06903 L
.5 .04295 L
.53968 .0292 L
.57937 .02206 L
.61905 .01841 L
.65873 .01657 L
s
p
[ .005 .015 ] 0 setdash
.06349 .60332 m
.10317 .59743 L
.14286 .57977 L
.18254 .50914 L
.22222 .41497 L
.2619 .26781 L
.30159 .16775 L
.34127 .16187 L
.38095 .0618 L
.42063 .03826 L
.46032 .0206 L
.5 .02649 L
.53968 .03237 L
.57937 .01472 L
.61905 .01472 L
.65873 .0206 L
s
P
p
[ .002 .018 ] 0 setdash
.14286 .55082 m
.18254 .46628 L
.22222 .36489 L
.2619 .21838 L
.30159 .12597 L
.34127 .12076 L
.38095 .03851 L
.42063 .02282 L
s
P
p
[ .002 .018 ] 0 setdash
.14286 .59521 m
.18254 .54269 L
.22222 .46021 L
.2619 .31913 L
.30159 .21601 L
.34127 .20973 L
.38095 .09695 L
.42063 .06722 L
s
P
P
% End of Graphics
MathPictureEnd
%%EndDocument

 endTexFig
 -42 2030 a Fp(Figure)49 b(4)56 b Fo(State)43 b(omission)d
(probabilities)g(observ)m(ed)k(in)e(the)g(exp)s(erimen)m(ts)h
(\(dotted,)g(with)f(90\045)-42 2147 y(con\014dence)24
b(in)m(terv)-5 b(als\))21 b(and)h(b)s(ound)h(calculated)e(b)m(y)h(the)h
(v)m(eri\014er)f(\(solid\))f(and)h(omission)e(probabilities)-42
2263 y(in)27 b(the)g(previous)g(sc)m(heme)h(\(dashed\))g(for)e(the)i
Fp(SCI)e Fo(proto)s(col)g(with)g Fn(n)p Fo(=18)10 b(193,)27
b Fn(d)p Fo(=62)f(and)g Fn(m)p Fo(=18)10 b(229)158 2594
y
 26688970 13616824 0 15787622 40258437 36311531 startTexFig
 158 2594 a
%%BeginDocument: math.pro
%
% Original name of this file: mathematica2.1.pro
%
% This prolog was derived the output of 'psfix'.  To properly use it,
% the line 'Mathdict begin' must be placed just before the line
% 'MathPictureStart' in the Encapsulated PostScript file.
%
% All alterations made by me are noted by comments beginning '%T%'
%
%						-- Tony Guzzi [26-Jan-93]

/Mathdict 150 dict def
Mathdict begin
  /Mlmarg	1.0 72 mul def
  /Mrmarg	1.0 72 mul def
  /Mbmarg	1.0 72 mul def
  /Mtmarg	1.0 72 mul def
  /Mwidth	8.5 72 mul def
  /Mheight	11 72 mul def
  /Mtransform	{  } bind def
  /Mnodistort	true def
  /Mfixwid	true	def
  /Mfixdash	false def
  /Mrot		0	def
  /Mpstart { MathPictureStart } bind def
  /Mpend { MathPictureEnd } bind def
  /Mscale { 0 1 0 1 5 -1 roll MathScale } bind def
  /ISOLatin1Encoding dup where
  { pop pop }
  {
   [
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
    /parenleft /parenright /asterisk /plus /comma /minus /period /slash
    /zero /one /two /three /four /five /six /seven
    /eight /nine /colon /semicolon /less /equal /greater /question
    /at /A /B /C /D /E /F /G
    /H /I /J /K /L /M /N /O
    /P /Q /R /S /T /U /V /W
    /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
    /quoteleft /a /b /c /d /e /f /g
    /h /i /j /k /l /m /n /o
    /p /q /r /s /t /u /v /w
    /x /y /z /braceleft /bar /braceright /asciitilde /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
    /dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
    /dieresis /.notdef /ring /cedilla /.notdef /hungarumlaut /ogonek /caron
    /space /exclamdown /cent /sterling /currency /yen /brokenbar /section
    /dieresis /copyright /ordfeminine /guillemotleft
    /logicalnot /hyphen /registered /macron
    /degree /plusminus /twosuperior /threesuperior
    /acute /mu /paragraph /periodcentered
    /cedilla /onesuperior /ordmasculine /guillemotright
    /onequarter /onehalf /threequarters /questiondown
    /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
    /Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
    /Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
    /Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
    /agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
    /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
    /eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
    /oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis
   ] def
  } ifelse
  /MFontDict 50 dict def
  /MStrCat {
    exch
    dup length
    2 index length add
    string
    dup 3 1 roll
    copy
    length
    exch dup
    4 2 roll exch
    putinterval
  } def
  /MCreateEncoding
  {
    1 index
    255 string cvs
    (-) MStrCat
    1 index MStrCat
    cvn exch
    (Encoding) MStrCat
    cvn dup where
    { exch get } { pop StandardEncoding } ifelse
    3 1 roll
    dup MFontDict exch known not
    {
      1 index findfont
      dup length dict
      begin
       {1 index /FID ne {def} {pop pop} ifelse } forall
       /Encoding 3 index def
       currentdict
      end
      1 index exch definefont pop
      MFontDict 1 index
      null put
    }
    if
    exch pop
    exch pop
  } def
  /ISOLatin1 { (ISOLatin1) MCreateEncoding } def
  /ISO8859 { (ISOLatin1) MCreateEncoding } def
  /Mcopyfont {
    dup
    maxlength
    dict
    exch
    { 1 index /FID eq { pop pop } { 2 index 3 1 roll put } ifelse } forall
  } def
  /Plain	/Courier findfont Mcopyfont definefont pop
  /Bold	/Courier-Bold findfont Mcopyfont definefont pop
  /Italic /Courier-Oblique findfont Mcopyfont definefont pop
  /MathPictureStart {
    gsave
    Mtransform
    Mlmarg
    Mbmarg
    translate
    Mwidth
    Mlmarg Mrmarg add
    sub
    /Mwidth exch def
    Mheight
    Mbmarg Mtmarg add
    sub
    /Mheight exch def
    /Mtmatrix matrix currentmatrix def
    /Mgmatrix matrix currentmatrix def
  } bind def
  /MathPictureEnd { grestore
		    %T% Next line added by Tony [26-Jan-93]
		    end
		    } bind def
  /MFill { 0 0 moveto
	   Mwidth 0 lineto
	   Mwidth Mheight lineto
	   0 Mheight lineto
           fill
          } bind def
  /MPlotRegion {
    3 index
    Mwidth mul
    2 index
    Mheight mul
    translate
    exch sub
    Mheight mul
    /Mheight exch def
    exch sub
    Mwidth mul
    /Mwidth exch def
  } bind def
  /MathSubStart {
    Momatrix
    Mgmatrix Mtmatrix
    Mwidth Mheight
    7 -2 roll
    moveto
    Mtmatrix setmatrix
    currentpoint
    Mgmatrix setmatrix
    9 -2 roll
    moveto
    Mtmatrix setmatrix
    currentpoint
    2 copy translate
    /Mtmatrix matrix currentmatrix def
    3 -1 roll
    exch sub
    /Mheight exch def
    sub
    /Mwidth exch def
  } bind def
  /MathSubEnd {
    /Mheight exch def
    /Mwidth exch def
    /Mtmatrix exch def
    dup setmatrix
    /Mgmatrix exch def
    /Momatrix exch def
  } bind def
  /Mdot    { moveto 0 0 rlineto stroke } bind def
  /Mtetra  { moveto lineto lineto lineto fill } bind def
  /Metetra { moveto lineto lineto lineto closepath
    	     gsave fill grestore 0 setgray stroke } bind def
  /Mistroke {
    flattenpath
    0 0 0
    { 4 2 roll pop pop }
    {
     4 -1 roll
     2 index
     sub dup mul
     4 -1 roll
     2 index
     sub dup mul
     add sqrt
     4 -1 roll
     add
     3 1 roll
    }
    { stop }
    { stop }
    pathforall
    pop pop
    currentpoint
    stroke
    moveto
    currentdash
    3 -1 roll
    add
    setdash
  } bind def
  /Mfstroke { stroke currentdash pop 0 setdash } bind def
  /Mrotsboxa {
    gsave
    dup
    /Mrot exch def
    Mrotcheck
    Mtmatrix
    dup
    setmatrix
    7 1 roll
    4 index
    4 index
    translate
    rotate
    3 index
    -1 mul
    3 index
    -1 mul
    translate
    /Mtmatrix matrix currentmatrix def
    grestore
    Msboxa
    3  -1 roll
    /Mtmatrix exch def
    /Mrot 0 def
  } bind def
  /Msboxa {
    newpath
    5 -1 roll
    Mvboxa
    pop
    Mboxout
    6 -1 roll
    5 -1 roll
    4 -1 roll
    Msboxa1
    5 -3 roll
    Msboxa1
    Mboxrot
    [
      7 -2 roll 2 copy
      [ 3 1 roll 10 -1 roll 9 -1 roll ]
      6 1 roll 5 -2 roll
    ]
  } bind def
  /Msboxa1 {
    sub
    2 div
    dup
    2 index
    1 add
    mul
    3 -1 roll
    -1 add
    3 -1 roll
    mul
  } bind def
  /Mvboxa {
    Mfixwid
    { Mvboxa1 }
    {
     dup
     Mwidthcal
     0 exch
     { add }
     forall
     exch
     Mvboxa1
     4 index
     7 -1 roll
     add
     4 -1 roll
     pop
     3 1 roll
    }
    ifelse
  } bind def
  /Mvboxa1 {
    gsave
    newpath
    [
      true
      3 -1 roll
      {
       Mbbox
       5 -1 roll
       { 0 5 1 roll }
       {
        7 -1 roll
        exch sub
        (m) stringwidth pop
        .3 mul
        sub
        7 1 roll
        6 -1 roll
        4 -1 roll
        Mmin
        3 -1 roll
        5 index
        add
        5 -1 roll
        4 -1 roll
        Mmax
        4 -1 roll
       }
       ifelse
       false
      }
      forall
      { stop } if
      counttomark
      1 add
      4 roll
    ]
    grestore
  } bind def
  /Mbbox {
    1 dict begin
    0 0 moveto
    /temp (T) def
    { gsave
      currentpoint newpath moveto
      temp 0 3 -1 roll put temp
      false charpath flattenpath currentpoint
      pathbbox
      grestore moveto lineto moveto
    } forall
    pathbbox
    newpath
    end
  } bind def
  /Mmin { 2 copy gt { exch } if pop } bind def
  /Mmax { 2 copy lt { exch } if pop } bind def
  /Mrotshowa {
    dup
    /Mrot exch def
    Mrotcheck
    Mtmatrix
    dup
    setmatrix
    7 1 roll
    4 index
    4 index
    translate
    rotate
    3 index
    -1 mul
    3 index
    -1 mul
    translate
    /Mtmatrix matrix currentmatrix def
    Mgmatrix setmatrix
    Mshowa
    /Mtmatrix exch def
    /Mrot 0 def
  } bind def
  /Mshowa {
    4 -2 roll
    moveto
    2 index
    Mtmatrix setmatrix
    Mvboxa
    7 1 roll
    Mboxout
    6 -1 roll
    5 -1 roll
    4 -1 roll
    Mshowa1
    4 1 roll
    Mshowa1
    rmoveto
    currentpoint
    Mfixwid
    { Mshowax }
    { Mshoway }
    ifelse
    pop pop pop pop
    Mgmatrix setmatrix
  } bind def
  /Mshowax {	
    0 1
    4 index length
    -1 add
    {
     2 index
     4 index
     2 index
     get
     3 index
     add
     moveto
     4 index
     exch get
     Mfixdash { Mfixdashp } if
     show
    } for
  } bind def
  /Mfixdashp {
    dup
    length
    1
    gt
    1 index
    true exch
    { 45 eq and } forall
    and
    {
     gsave
     (--) stringwidth pop
     (-)  stringwidth pop
     sub
     2 div
     0 rmoveto
     dup
     length
     1 sub
     { (-) show } repeat
    grestore
    }
    if
  } bind def	
  /Mshoway {
    3 index
    Mwidthcal
    5 1 roll
    0 1
    4 index length
    -1 add
    {
      2 index
      4 index
      2 index
      get
      3 index
      add
      moveto
      4 index
      exch get
      [
        6 index
        aload
        length
        2 add
        -1 roll
        {
          pop
          Strform
          stringwidth
          pop
          neg 
          exch
          add
          0 rmoveto
        }
        exch
        kshow
        cleartomark
        } for
        pop	
  } bind def
  /Mwidthcal {
    [ exch { Mwidthcal1 } forall ]
    [
     exch
     dup
     Maxlen
     -1 add
     0 1
     3 -1 roll
     {
     [
      exch
      2 index
      { 1 index Mget exch } forall		
      pop
      Maxget
      exch
     }
     for
     pop
     ]
     Mreva
  } bind def
  /Mreva { [ exch aload length -1 1 {1 roll} for ] } bind def
  /Mget	{
    1 index
    length
    -1 add
    1 index
    ge { get } { pop pop 0 } ifelse
  } bind def
  /Maxlen	{ [ exch { length } forall Maxget } bind def
  /Maxget	{ counttomark -1 add 1 1 3 -1 roll { pop Mmax } for exch pop } bind def
  /Mwidthcal1 { [ exch { Strform stringwidth pop } forall ] } bind def
  /Strform { /tem (x) def tem 0 3 -1 roll put tem } bind def
  /Mshowa1 { 2 copy add 4 1 roll sub mul sub -2 div } bind def
  /MathScale {
    Mwidth
    Mheight
    Mlp
    translate
    scale
    /yscale exch def
    /ybias exch def
    /xscale exch def
    /xbias exch def
    /Momatrix
    xscale yscale matrix scale
    xbias ybias matrix translate
    matrix concatmatrix def
    /Mgmatrix
    matrix currentmatrix
    def
  } bind def
  /Mlp {
    3 copy
    Mlpfirst
    {
      Mnodistort { Mmin dup } if
      4 index
      2 index
      2 index
      Mlprun
      11 index
      11 -1 roll
      10 -4 roll
      Mlp1
      8 index
      9 -5 roll
      Mlp1
      4 -1 roll
      and
      { exit } if
      3 -1 roll
      pop pop
    } loop
    exch
    3 1 roll
    7 -3 roll
    pop pop pop
  } bind def
  /Mlpfirst {
    3 -1 roll
    dup length
    2 copy
    -2 add
    get
    aload
    pop pop pop
    4 -2 roll
    -1 add
    get
    aload
    pop pop pop
    6 -1 roll
    3 -1 roll
    5 -1 roll
    sub
    div
    4 1 roll
    exch sub
    div
  } bind def
  /Mlprun {
    2 copy
    4 index
    0 get
    dup
    4 1 roll
    Mlprun1
    3 copy
    8 -2 roll
    9 -1 roll
    {
      3 copy
      Mlprun1
      3 copy
      11 -3 roll
      /gt Mlpminmax
      8 3 roll
      11 -3 roll
      /lt Mlpminmax
      8 3 roll
    } forall
    pop pop pop pop
    3 1 roll
    pop pop
    aload pop
    5 -1 roll
    aload pop
    exch
    6 -1 roll
    Mlprun2
    8 2 roll
    4 -1 roll
    Mlprun2
    6 2 roll
    3 -1 roll
    Mlprun2
    4 2 roll
    exch
    Mlprun2
    6 2 roll
  } bind def
  /Mlprun1 {
    aload pop
    exch
    6 -1 roll
    5 -1 roll
    mul add
    4 -2 roll
    mul
    3 -1 roll
    add
  } bind def
  /Mlprun2 { 2 copy add 2 div 3 1 roll exch sub } bind def
  /Mlpminmax {
    cvx
    2 index
    6 index
    2 index
    exec { 7 -3 roll 4 -1 roll } if
    1 index
    5 index
    3 -1 roll
    exec
    { 4  1 roll pop
      5 -1 roll
      aload
      pop pop
      4 -1 roll
      aload pop
      [
       8 -2 roll pop
       5 -2 roll pop
       6 -2 roll pop
       5 -1 roll
      ]
      4 1 roll pop
    }
    { pop pop pop }
    ifelse
  } bind def
  /Mlp1 {
    5 index
    3 index	sub
    5 index
    2 index mul
    1 index
    le
    1 index
    0 le
    or
    dup
    not
    { 1 index 3 index div .99999 mul 8 -1 roll pop 7 1 roll } if
    8 -1 roll
    2 div
    7 -2 roll
    pop sub
    5 index
    6 -3 roll
    pop pop
    mul sub
    exch
  } bind def
  /intop 0 def
  /inrht 0 def
  /inflag 0 def
  /outflag 0 def
  /xadrht 0 def
  /xadlft 0 def
  /yadtop 0 def
  /yadbot 0 def
  /Minner {
    outflag 1 eq { /outflag 0 def /intop 0 def /inrht 0 def } if		
    5 index
    gsave
    Mtmatrix setmatrix
    Mvboxa pop
    grestore
    3 -1 roll
    pop
    dup
    intop gt { /intop exch def } { pop } ifelse
    dup
    inrht gt { /inrht exch def } { pop } ifelse
    pop
    /inflag 1 def
  } bind def
  /Mouter {
    /xadrht 0 def
    /xadlft 0 def
    /yadtop 0 def
    /yadbot 0 def
    inflag
    1 eq
    {
     dup 0 lt { dup intop mul neg /yadtop exch def } if
     dup 0 gt { dup intop mul /yadbot exch def } if
     pop
     dup 0 lt { dup inrht mul neg /xadrht exch def } if
     dup 0 gt { dup inrht mul /xadlft exch def } if
     pop
     /outflag 1 def
    }
    { pop pop}
    ifelse
    /inflag 0 def
    /inrht 0 def
    /intop 0 def
  } bind def	
  /Mboxout {
    outflag
    1 eq {
     4 -1 roll
     xadlft
     leadjust
     add
     sub
     4 1 roll
     3 -1
     roll
     yadbot
     leadjust
     add
     sub
     3 1 roll
     exch
     xadrht
     leadjust
     add
     add
     exch
     yadtop
     leadjust
     add
     add
     /outflag 0 def
     /xadlft 0 def
     /yadbot 0 def
     /xadrht 0 def
     /yadtop 0 def
    } if
  } bind def
  /leadjust { (m) stringwidth pop .5 mul } bind def
  /Mrotcheck {
    dup
    90
    eq
    {
     yadbot
     /yadbot xadrht def	
     /xadrht yadtop def
     /yadtop xadlft def
     /xadlft exch def
    } if
    dup
    cos
    1 index
    sin
    Checkaux
    dup
    cos
    1 index
    sin neg
    exch
    Checkaux
    3 1 roll
    pop pop
  } bind def
  /Checkaux { 4 index exch 4 index mul 3 1 roll mul add 4 1 roll } bind def
  /Mboxrot {
    Mrot
    90 eq  { brotaux 4 2 roll } if
    Mrot
    180 eq { 4 2 roll brotaux 4 2 roll brotaux }	if
    Mrot
    270 eq { 4 2 roll brotaux } if
  } bind def
  /brotaux { neg exch neg } bind def
  /Mabsproc {
    0
    matrix defaultmatrix
    dtransform idtransform
    dup mul exch
    dup mul
    add sqrt
  } bind def
  /Mabswid { Mabsproc setlinewidth	} bind def
  /Mabsdash {
    exch
    [ exch { Mabsproc } forall ]
    exch
    setdash
  } bind def
  /MBeginOrig { Momatrix concat} bind def
  /MEndOrig { Mgmatrix setmatrix} bind def
  /sampledsound where
  { pop}
  { /sampledsound {
      exch
      pop
      exch
      5 1 roll
      mul
      4 idiv
      mul
      2 idiv
      exch pop
      exch
      /Mtempproc exch def
      { Mtempproc pop} repeat
    } bind def
  } ifelse
  /g { setgray} bind def
  /k { setcmykcolor} bind def
  /m { moveto} bind def
  /p { gsave} bind def
  /r { setrgbcolor} bind def
  /w { setlinewidth} bind def
  /C { curveto} bind def
  /F { fill} bind def
  /L { lineto} bind def
  /P { grestore} bind def
  /s { stroke} bind def
  /setcmykcolor where
  { pop}
  { /setcmykcolor {
      4 1 roll
      [ 4 1 roll ]
      {
       1 index sub
       1 sub neg
       dup
       0 lt { pop 0 } if
       dup
       1 gt { pop 1 } if
       exch
      } forall
      pop
      setrgbcolor
    } bind def
  } ifelse
  /Mcharproc { currentfile (x) readhexstring pop 0 get exch div } bind def
  /Mshadeproc {
    dup
    3 1
    roll
    { dup Mcharproc 3 1 roll } repeat
    1 eq { setgray }
         { 3 eq { setrgbcolor }
  	      { setcmykcolor }
  	      ifelse
         }
         ifelse
  } bind def
  /Mrectproc {
    3 index 2 index moveto
    2 index 3 -1 roll lineto
    dup 3 1 roll lineto
    lineto
    fill
  } bind def
  /Mcolorimage
  {
    7 1
    roll
    pop
    pop
    matrix
    invertmatrix
    concat
    2 exch exp
    1 sub
    3 1 roll
    1 1
    2 index
    {
      1 1
      4 index
      {
        dup 1 sub exch 2 index
        dup 1 sub exch 7 index
        9 index
        Mshadeproc
        Mrectproc
      } for
      pop
    } for
    pop pop pop pop
  } bind def
  /Mimage
  {
    pop
    matrix
    invertmatrix
    concat
    2 exch exp
    1 sub
    3 1 roll
    1 1
    2 index
    {
      1 1
      4 index
      {
        dup 1 sub exch 2 index
        dup 1 sub exch 7 index
        Mcharproc
        setgray
        Mrectproc
      } for
      pop
    } for
    pop pop pop
  } bind def
%T% Next line added by Tony [26-Jan-93]
end
%%EndDocument
 158 2594 a
%%BeginDocument: fi:prob.cache3.eps
Mathdict begin
MathPictureStart
/Courier findfont 13  scalefont  setfont
% Scaling calculations
0.0238095 0.031746 0.0147151 0.588604 [
[(0)] .02381 0 0 2 0 Minner Mrotsboxa
[(5)] .18254 0 0 2 0 Minner Mrotsboxa
[(10)] .34127 0 0 2 0 Minner Mrotsboxa
[(15)] .5 0 0 2 0 Minner Mrotsboxa
[(20)] .65873 0 0 2 0 Minner Mrotsboxa
[(25)] .81746 0 0 2 0 Minner Mrotsboxa
[(30)] .97619 0 0 2 0 Minner Mrotsboxa
[(number of bits \(b\))] .5 0 0 2 0 0 -1 Mouter Mrotsboxa
[(0)] -0.0125 .01472 1 0 0 Minner Mrotsboxa
[(0.2)] -0.0125 .13244 1 0 0 Minner Mrotsboxa
[(0.4)] -0.0125 .25016 1 0 0 Minner Mrotsboxa
[(0.6)] -0.0125 .36788 1 0 0 Minner Mrotsboxa
[(0.8)] -0.0125 .4856 1 0 0 Minner Mrotsboxa
[(1)] -0.0125 .60332 1 0 0 Minner Mrotsboxa
[(omission probability)] -0.0125 .30902 1 0 90 -1 0 Mouter Mrotsboxa
[ -0.001 -0.001 0 0 ]
[ 1.001 .61903 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
[ ] 0 setdash
0 g
p
p
.002 w
.02381 0 m
.02381 .00625 L
s
P
[(0)] .02381 0 0 2 0 Minner Mrotshowa
p
.002 w
.18254 0 m
.18254 .00625 L
s
P
[(5)] .18254 0 0 2 0 Minner Mrotshowa
p
.002 w
.34127 0 m
.34127 .00625 L
s
P
[(10)] .34127 0 0 2 0 Minner Mrotshowa
p
.002 w
.5 0 m
.5 .00625 L
s
P
[(15)] .5 0 0 2 0 Minner Mrotshowa
p
.002 w
.65873 0 m
.65873 .00625 L
s
P
[(20)] .65873 0 0 2 0 Minner Mrotshowa
p
.002 w
.81746 0 m
.81746 .00625 L
s
P
[(25)] .81746 0 0 2 0 Minner Mrotshowa
p
.002 w
.97619 0 m
.97619 .00625 L
s
P
[(30)] .97619 0 0 2 0 Minner Mrotshowa
p
.001 w
.05556 0 m
.05556 .00375 L
s
P
p
.001 w
.0873 0 m
.0873 .00375 L
s
P
p
.001 w
.11905 0 m
.11905 .00375 L
s
P
p
.001 w
.15079 0 m
.15079 .00375 L
s
P
p
.001 w
.21429 0 m
.21429 .00375 L
s
P
p
.001 w
.24603 0 m
.24603 .00375 L
s
P
p
.001 w
.27778 0 m
.27778 .00375 L
s
P
p
.001 w
.30952 0 m
.30952 .00375 L
s
P
p
.001 w
.37302 0 m
.37302 .00375 L
s
P
p
.001 w
.40476 0 m
.40476 .00375 L
s
P
p
.001 w
.43651 0 m
.43651 .00375 L
s
P
p
.001 w
.46825 0 m
.46825 .00375 L
s
P
p
.001 w
.53175 0 m
.53175 .00375 L
s
P
p
.001 w
.56349 0 m
.56349 .00375 L
s
P
p
.001 w
.59524 0 m
.59524 .00375 L
s
P
p
.001 w
.62698 0 m
.62698 .00375 L
s
P
p
.001 w
.69048 0 m
.69048 .00375 L
s
P
p
.001 w
.72222 0 m
.72222 .00375 L
s
P
p
.001 w
.75397 0 m
.75397 .00375 L
s
P
p
.001 w
.78571 0 m
.78571 .00375 L
s
P
p
.001 w
.84921 0 m
.84921 .00375 L
s
P
p
.001 w
.88095 0 m
.88095 .00375 L
s
P
p
.001 w
.9127 0 m
.9127 .00375 L
s
P
p
.001 w
.94444 0 m
.94444 .00375 L
s
P
[(number of bits \(b\))] .5 0 0 2 0 0 -1 Mouter Mrotshowa
p
.002 w
0 0 m
1 0 L
s
P
p
.002 w
0 .01472 m
.00625 .01472 L
s
P
[(0)] -0.0125 .01472 1 0 0 Minner Mrotshowa
p
.002 w
0 .13244 m
.00625 .13244 L
s
P
[(0.2)] -0.0125 .13244 1 0 0 Minner Mrotshowa
p
.002 w
0 .25016 m
.00625 .25016 L
s
P
[(0.4)] -0.0125 .25016 1 0 0 Minner Mrotshowa
p
.002 w
0 .36788 m
.00625 .36788 L
s
P
[(0.6)] -0.0125 .36788 1 0 0 Minner Mrotshowa
p
.002 w
0 .4856 m
.00625 .4856 L
s
P
[(0.8)] -0.0125 .4856 1 0 0 Minner Mrotshowa
p
.002 w
0 .60332 m
.00625 .60332 L
s
P
[(1)] -0.0125 .60332 1 0 0 Minner Mrotshowa
p
.001 w
0 .03826 m
.00375 .03826 L
s
P
p
.001 w
0 .0618 m
.00375 .0618 L
s
P
p
.001 w
0 .08535 m
.00375 .08535 L
s
P
p
.001 w
0 .10889 m
.00375 .10889 L
s
P
p
.001 w
0 .15598 m
.00375 .15598 L
s
P
p
.001 w
0 .17952 m
.00375 .17952 L
s
P
p
.001 w
0 .20307 m
.00375 .20307 L
s
P
p
.001 w
0 .22661 m
.00375 .22661 L
s
P
p
.001 w
0 .2737 m
.00375 .2737 L
s
P
p
.001 w
0 .29724 m
.00375 .29724 L
s
P
p
.001 w
0 .32079 m
.00375 .32079 L
s
P
p
.001 w
0 .34433 m
.00375 .34433 L
s
P
p
.001 w
0 .39142 m
.00375 .39142 L
s
P
p
.001 w
0 .41497 m
.00375 .41497 L
s
P
p
.001 w
0 .43851 m
.00375 .43851 L
s
P
p
.001 w
0 .46205 m
.00375 .46205 L
s
P
p
.001 w
0 .50914 m
.00375 .50914 L
s
P
p
.001 w
0 .53269 m
.00375 .53269 L
s
P
p
.001 w
0 .55623 m
.00375 .55623 L
s
P
p
.001 w
0 .57977 m
.00375 .57977 L
s
P
[(omission probability)] -0.0125 .30902 1 0 90 -1 0 Mouter Mrotshowa
p
.002 w
0 0 m
0 .61803 L
s
P
P
p
p
.002 w
.02381 .61178 m
.02381 .61803 L
s
P
p
.002 w
.18254 .61178 m
.18254 .61803 L
s
P
p
.002 w
.34127 .61178 m
.34127 .61803 L
s
P
p
.002 w
.5 .61178 m
.5 .61803 L
s
P
p
.002 w
.65873 .61178 m
.65873 .61803 L
s
P
p
.002 w
.81746 .61178 m
.81746 .61803 L
s
P
p
.002 w
.97619 .61178 m
.97619 .61803 L
s
P
p
.001 w
.05556 .61428 m
.05556 .61803 L
s
P
p
.001 w
.0873 .61428 m
.0873 .61803 L
s
P
p
.001 w
.11905 .61428 m
.11905 .61803 L
s
P
p
.001 w
.15079 .61428 m
.15079 .61803 L
s
P
p
.001 w
.21429 .61428 m
.21429 .61803 L
s
P
p
.001 w
.24603 .61428 m
.24603 .61803 L
s
P
p
.001 w
.27778 .61428 m
.27778 .61803 L
s
P
p
.001 w
.30952 .61428 m
.30952 .61803 L
s
P
p
.001 w
.37302 .61428 m
.37302 .61803 L
s
P
p
.001 w
.40476 .61428 m
.40476 .61803 L
s
P
p
.001 w
.43651 .61428 m
.43651 .61803 L
s
P
p
.001 w
.46825 .61428 m
.46825 .61803 L
s
P
p
.001 w
.53175 .61428 m
.53175 .61803 L
s
P
p
.001 w
.56349 .61428 m
.56349 .61803 L
s
P
p
.001 w
.59524 .61428 m
.59524 .61803 L
s
P
p
.001 w
.62698 .61428 m
.62698 .61803 L
s
P
p
.001 w
.69048 .61428 m
.69048 .61803 L
s
P
p
.001 w
.72222 .61428 m
.72222 .61803 L
s
P
p
.001 w
.75397 .61428 m
.75397 .61803 L
s
P
p
.001 w
.78571 .61428 m
.78571 .61803 L
s
P
p
.001 w
.84921 .61428 m
.84921 .61803 L
s
P
p
.001 w
.88095 .61428 m
.88095 .61803 L
s
P
p
.001 w
.9127 .61428 m
.9127 .61803 L
s
P
p
.001 w
.94444 .61428 m
.94444 .61803 L
s
P
p
.002 w
0 .61803 m
1 .61803 L
s
P
p
.002 w
.99375 .01472 m
1 .01472 L
s
P
p
.002 w
.99375 .13244 m
1 .13244 L
s
P
p
.002 w
.99375 .25016 m
1 .25016 L
s
P
p
.002 w
.99375 .36788 m
1 .36788 L
s
P
p
.002 w
.99375 .4856 m
1 .4856 L
s
P
p
.002 w
.99375 .60332 m
1 .60332 L
s
P
p
.001 w
.99625 .03826 m
1 .03826 L
s
P
p
.001 w
.99625 .0618 m
1 .0618 L
s
P
p
.001 w
.99625 .08535 m
1 .08535 L
s
P
p
.001 w
.99625 .10889 m
1 .10889 L
s
P
p
.001 w
.99625 .15598 m
1 .15598 L
s
P
p
.001 w
.99625 .17952 m
1 .17952 L
s
P
p
.001 w
.99625 .20307 m
1 .20307 L
s
P
p
.001 w
.99625 .22661 m
1 .22661 L
s
P
p
.001 w
.99625 .2737 m
1 .2737 L
s
P
p
.001 w
.99625 .29724 m
1 .29724 L
s
P
p
.001 w
.99625 .32079 m
1 .32079 L
s
P
p
.001 w
.99625 .34433 m
1 .34433 L
s
P
p
.001 w
.99625 .39142 m
1 .39142 L
s
P
p
.001 w
.99625 .41497 m
1 .41497 L
s
P
p
.001 w
.99625 .43851 m
1 .43851 L
s
P
p
.001 w
.99625 .46205 m
1 .46205 L
s
P
p
.001 w
.99625 .50914 m
1 .50914 L
s
P
p
.001 w
.99625 .53269 m
1 .53269 L
s
P
p
.001 w
.99625 .55623 m
1 .55623 L
s
P
p
.001 w
.99625 .57977 m
1 .57977 L
s
P
p
.002 w
1 0 m
1 .61803 L
s
P
P
p
P
0 0 m
1 0 L
1 .61803 L
0 .61803 L
closepath
clip
newpath
p
p
[ .02 .02 ] 0 setdash
.002 w
.05556 .60332 m
.0873 .60332 L
.11905 .60332 L
.15079 .60332 L
.18254 .60332 L
.21429 .60332 L
.24603 .60332 L
.27778 .60332 L
.30952 .60332 L
.34127 .60332 L
.37302 .60332 L
.40476 .60332 L
.43651 .60332 L
.46825 .60332 L
.5 .60332 L
.53175 .60332 L
.56349 .60332 L
.59524 .60243 L
.62698 .5804 L
.65873 .48718 L
.69048 .34186 L
.72222 .21103 L
.75397 .12279 L
.78571 .07149 L
.81746 .04382 L
.84921 .02945 L
.88095 .02213 L
.9127 .01843 L
.94444 .01658 L
.97619 .01565 L
s
P
.002 w
.05556 .60332 m
.0873 .60329 L
.11905 .60159 L
.15079 .58407 L
.18254 .51955 L
.21429 .40707 L
.24603 .28486 L
.27778 .1831 L
.30952 .11307 L
.34127 .06819 L
.37302 .04303 L
.40476 .02932 L
.43651 .02223 L
.46825 .01855 L
.5 .01665 L
.53175 .01569 L
s
p
[ .005 .015 ] 0 setdash
.05556 .57977 m
.0873 .568 L
.11905 .4856 L
.15079 .41497 L
.18254 .28547 L
.21429 .12066 L
.24603 .07946 L
.27778 .08535 L
.30952 .04415 L
.34127 .02649 L
.37302 .01472 L
.40476 .02649 L
.43651 .01472 L
.46825 .01472 L
.5 .01472 L
.53175 .01472 L
s
P
p
[ .002 .018 ] 0 setdash
.05556 .55082 m
.0873 .53564 L
.11905 .44016 L
.15079 .36489 L
.18254 .23532 L
.21429 .08517 L
.24603 .05175 L
.27778 .05634 L
.30952 .02643 L
s
P
p
[ .002 .018 ] 0 setdash
.05556 .59521 m
.0873 .58775 L
.11905 .52288 L
.15079 .46021 L
.18254 .3367 L
.21429 .16489 L
.24603 .11802 L
.27778 .12488 L
.30952 .0749 L
s
P
P
% End of Graphics
MathPictureEnd
%%EndDocument

 endTexFig
 -42 4459 a Fp(Figure)49 b(5)56 b Fo(State)43 b(omission)d
(probabilities)g(observ)m(ed)k(in)e(the)g(exp)s(erimen)m(ts)h
(\(dotted,)g(with)f(90\045)-42 4575 y(con\014dence)24
b(in)m(terv)-5 b(als\))21 b(and)h(b)s(ound)h(calculated)e(b)m(y)h(the)h
(v)m(eri\014er)f(\(solid\))f(and)h(omission)e(probabilities)-42
4691 y(in)46 b(the)h(previous)g(sc)m(heme)h(\(dashed\))g(for)e(the)h
Fp(cac)m(he3)g Fo(proto)s(col)e(with)h Fn(n)p Fo(=200)31
b(913,)46 b Fn(d)p Fo(=27)g(and)-42 4807 y Fn(m)p Fo(=200)22
b(927)-42 5363 y(from)45 b(all)f(other)j(states.)g(Th)m(us,)h(there)f
(is)e(only)h(a)g(single)f(path)h(to)g(eac)m(h)h(state)g(and)f(as)g(a)g
(result)-42 5479 y(the)g(observ)m(ed)h(last)e(state)h(omission)d
(probabilities)f(are)k(close)f(to)g(the)h(calculated)e(b)s(ounds.)i
(The)-42 5596 y(di\013erence)36 b(b)s(et)m(w)m(een)h(the)e(t)m(w)m(o)h
(curv)m(es)h(for)d(bigger)g(v)-5 b(alues)35 b(of)g(the)g(probabilities)
d(can)j(b)s(e)g(explained)-42 5712 y(b)m(y)f(observing)f(that)f(the)h
(\(omitted\))e(analysis)h(of)g Fn(p)1876 5727 y Fg(k)1951
5712 y Fo(is)g(conserv)-5 b(ativ)m(e)34 b(in)e(this)g(case.)p
eop
%%Page: 14 14
14 13 bop -42 100 a Fm(14)1432 b Fl(A)30 b(New)g(Scheme)g(for)g
(Memory-E\016cient)i(Pr)l(ob)l(abilistic)g(V)-6 b(eri\014c)l(ation)-42
365 y Fi(5.2)136 b(Industrial)45 b(proto)t(cols)-42 606
y Fo(Figures)30 b(4)f(and)h(5)g(sho)m(w)h(the)f(outcomes)g(for)f
(instances)i(of)e(the)i(proto)s(cols)e(SCI)h(and)g(cac)m(he3,)h(resp)s
(ec-)-42 722 y(tiv)m(ely)-8 b(.)31 b(Note,)g(that)g(the)g(ratio)e(of)h
Fn(n=d)h Fo(is)f(bigger)g(for)g(the)h(cac)m(he3)h(proto)s(col)e(and)g
(so)h(are)g(the)g(sa)m(vings)-42 838 y(in)39 b(the)g(n)m(um)m(b)s(er)g
(of)g(bits)g(in)f(comparison)g(to)g(the)i(previous)f(sc)m(heme.)h
(Here,)g(the)f(cac)m(he3)h(proto)s(col)-42 954 y(w)m(as)d(v)m
(eri\014ed)f(without)e(using)h(symmetry)h(reductions)f(\(Ip)h(and)f
(Dill)d(1993\),)i(hence)j(the)e(di\013erence)-42 1070
y(in)g(the)h(n)m(um)m(b)s(er)g(of)g(reac)m(hable)f(states)i(in)e
(comparison)f(to)h(T)-8 b(able)36 b(1.)f(F)-8 b(urthermore,)35
b(note)h(that)g(the)-42 1187 y(observ)m(ed)d(last)d(state)g(omission)f
(probabilities)e(are)k(not)f(m)m(uc)m(h)h(smaller)e(compared)h(to)g
(the)h(rep)s(orted)-42 1303 y(b)s(ounds,)36 b(although)d(there)j(migh)m
(t)d(no)m(w)i(b)s(e)g(man)m(y)g(paths)g(in)f(the)h(proto)s(cols)f
(leading)f(to)h(this)g(state.)-42 1419 y(This)26 b(migh)m(t)f(b)s(e)h
(due)g(to)f(the)i(fact)e(that)h(if)e(the)j(di\013eren)m(t)f(paths)g
(leading)e(to)h(a)h(state)g(con)m(tain)f(common)-42 1535
y(states,)35 b(the)e(path)g(omission)e(probabilities)g(will)f(strongly)
j(dep)s(end)h(on)f(eac)m(h)h(other)f(and)h(almost)d(no)-42
1652 y(reduction)i(in)f(the)h(omission)e(probabilit)m(y)f(of)i(the)h
(state)g(will)e(o)s(ccur.)-42 2070 y Fk(6)117 b(CONCLUSION)38
b(AND)h(FUTURE)f(W)m(ORK)-42 2310 y Fo(The)e(new)f(probabilistic)c(v)m
(eri\014cation)i(sc)m(heme)j(presen)m(ted)g(in)d(this)h(pap)s(er)g
(reduces)i(the)f(n)m(um)m(b)s(er)f(of)-42 2426 y(bits)e(that)f(ha)m(v)m
(e)i(to)e(b)s(e)h(stored)g(p)s(er)g(state)g(for)f(reliable)f(v)m
(eri\014cation)h({)g(in)g(whic)m(h)h(the)g(probabilit)m(y)d(of)-42
2543 y(false)j(p)s(ositiv)m(es)f(is)g(b)s(ounded.)i(F)-8
b(or)31 b(proto)s(cols)f(with)i(up)g(to)f(10)2269 2507
y Fj(9)2340 2543 y Fo(reac)m(hable)h(states)g(and)g(a)f(maxim)m(um)-42
2659 y(diameter)j(of)h(500,)f(20)h(bits)f(p)s(er)h(state)h(are)f
(su\016cien)m(t)h(to)e(guaran)m(tee)i(a)f(b)s(ound)g(on)g(the)g
(probabilit)m(y)-42 2775 y(of)e(false)f(p)s(ositiv)m(es)g(of)g
(0.93\045.)56 2899 y(Bitstate)f(hashing,)f(in)g(con)m(trast,)i(do)s(es)
g(not)e(guaran)m(tee)i(an)m(y)g(b)s(ound)f(on)g(the)g(probabilit)m(y)e
(of)i(false)-42 3015 y(p)s(ositiv)m(es,)d(but)f(is)g(also)g(usable)g
(with)g(less)h(than)f(20)g(bits)g(p)s(er)g(state.)h(A)m(t)g(the)f(b)s
(eginning)f(of)h(a)g(v)m(eri\014ca-)-42 3132 y(tion)j(pro)5
b(ject,)31 b(the)g(v)m(eri\014er)g(t)m(ypically)e(\014nds)j(errors,)f
(and)f(the)h(lac)m(k)g(of)f(a)g(b)s(ound)h(on)f(the)h(probabilit)m(y)
-42 3248 y(of)36 b(false)g(p)s(ositiv)m(es)g(in)f(bitstate)h(hashing)g
(do)s(es)g(not)g(matter.)g(Ho)m(w)m(ev)m(er,)i(one)f(t)m(ypically)e
(starts)h(v)m(er-)-42 3364 y(ifying)e(do)m(wn-scaled)h(proto)s(col)f
(mo)s(dels)g(\(Dill)d(et)36 b(al.)d(1992\),)h(for)h(whic)m(h)g
(probabilistic)e(v)m(eri\014cation)-42 3480 y(sc)m(hemes)44
b(are)e(not)f(really)g(needed.)i(Later,)f(when)g(the)h(mo)s(dels)d(b)s
(ecome)i(bigger)e(and)i(the)g(v)m(eri\014er)-42 3597
y(usually)33 b(\014nds)h(no)f(more)g(errors)g(\(pro)s(duces)i(p)s
(ositiv)m(es\),)e(the)g(new)i(sc)m(heme)f(is)f(adv)-5
b(an)m(tageous,)34 b(since)-42 3713 y(it)e(pro)m(vides)h(a)g(b)s(ound)f
(on)h(the)g(probabilit)m(y)e(of)h(false)g(p)s(ositiv)m(es.)56
3837 y(In)22 b(comparison)f(to)g(the)h(previous)g(hash)h(compaction)d
(sc)m(heme,)j(the)f(memory)f(sa)m(vings)h(are)g(ac)m(hiev)m(ed)-42
3953 y(primarily)29 b(b)m(y)k(calculating)d(a)i(tigh)m(ter)g(b)s(ound)g
(on)g(the)g(probabilit)m(y)e(of)i(false)g(p)s(ositiv)m(es.)g(Recall)e
(that)-42 4069 y(this)j(b)s(ound)h(can)g(b)s(e)f(con)m(trolled)f(b)m(y)
i(selecting)f(the)h(n)m(um)m(b)s(er)g(of)f(bits)g Fn(b)g
Fo(stored)h(p)s(er)g(state.)f(F)-8 b(urther-)-42 4185
y(more,)44 b(re-running)g(the)h(v)m(eri\014er)g(with)f(indep)s(enden)m
(t)i(hash)f(and)f(compression)h(functions)f(allo)m(ws)-42
4302 y(m)m(ultiplication)28 b(of)33 b(the)g(rep)s(orted)f(b)s(ounds.)56
4426 y(The)38 b(new)h(sc)m(heme)f(is)f(compatible)f(with)h(sev)m(eral)h
(metho)s(ds)f(that)g(aim)f(at)h(reducing)g(the)h(size)f(of)-42
4542 y(the)h(reac)m(habilit)m(y)e(graph)g(while)h(ensuring)g(that)g
(errors)g(will)e(still)f(b)s(e)j(detected.)i(Examples)e(w)m(ould)-42
4658 y(b)s(e)29 b(exploiting)d(symmetries)i(\(Ip)g(and)g(Dill)d(1993\))
i(and)i(rev)m(ersible)f(rules)g(\(Ip)h(and)f(Dill)d(1996\).)i(When)-42
4774 y(com)m(bining)f(di\013eren)m(t)h(tec)m(hniques,)h(one)g(usually)e
(observ)m(es)j(that)e(run)m(time)f(b)s(ecomes)h(the)g(new)h(ma)5
b(jor)-42 4891 y(limiting)37 b(factor)k(in)g(v)m(eri\014cation,)f(whic)
m(h)i(increases)g(the)g(priorit)m(y)e(of)h(researc)m(h)i(in)m(to)d
(accelerating)-42 5007 y(explicit-state)32 b(v)m(eri\014cation)g(metho)
s(ds.)56 5131 y(When)d(using)f(a)g(depth-\014rst)h(tra)m(v)m(ersal)f
(of)g(the)g(state-space,)h(one)g(recommendation)d(is)i(to)f(use)j(the)
-42 5247 y Fn(t)p Fo(-limited)20 b(hashing)i(sc)m(heme)i(presen)m(ted)h
(in)d(Stern)i(and)e(Dill)e(\(1996\))i({)g(whic)m(h)h(limits)d(the)j
(length)f(of)h(the)-42 5363 y(prob)s(e)k(sequences)i(to)c
Fn(t)h Fo(prob)s(es)h({)f(instead)g(of)f(ordered)i(hashing.)e(Then,)j
(a)d(form)m(ula)f(for)i(a)f(b)s(ound)i Fn(P)3650 5386
y Fd(om)-42 5479 y Fo(on)33 b(the)f(maxim)m(um)e(state)i(omission)f
(probabilit)m(y)f(can)i(b)s(e)h(deriv)m(ed,)g(yielding)d
Fn(P)2956 5503 y Fd(om)3056 5479 y Fo(=)3152 5440 y Fj(1)p
3152 5456 36 4 v 3159 5514 a Fg(l)3214 5479 y Fn(d)3265
5443 y Ff(0)3288 5479 y Fn(t)p Fo(,)j(where)g Fn(d)3715
5443 y Ff(0)-42 5596 y Fo(is)40 b(the)h(maxim)m(um)d(depth)k(that)e(o)s
(ccurred)h(during)f(the)h(depth-\014rst)g(searc)m(h.)h(Unfortunately)-8
b(,)40 b(this)-42 5712 y(depth)d(is)f(often)g(m)m(uc)m(h)g(larger)f
(than)h(the)g(diameter)f(of)g(the)h(state)h(space)g(and)f(th)m(us)h
(the)f(sa)m(vings)g(of)p eop
%%Page: 15 15
15 14 bop -42 100 a Fl(Conclusion)31 b(and)f(F)-6 b(utur)l(e)29
b(Work)2643 b Fm(15)-42 365 y Fo(the)30 b(new)g(sc)m(heme)g(are)f
(usually)f(smaller)f(than)i(in)f(the)i(breadth-\014rst)f(case.)h(Ho)m
(w)m(ev)m(er,)h(tec)m(hniques)g(to)-42 482 y(reduce)j
Fn(d)318 445 y Ff(0)374 482 y Fo(or)e(a)g(b)s(ound)h(on)g(the)g
(diameter)e(can)i(b)s(e)g(emplo)m(y)m(ed)g(in)e(the)i(depth-\014rst)h
(case.)-42 865 y Fk(A)m(CKNO)m(WLEDGEMENTS)-42 1102 y
Fo(W)-8 b(e)50 b(are)e(grateful)g(to)g(Pierre)h(W)-8
b(olp)s(er)48 b(and)h(Denis)f(Lero)m(y)i(for)e(sharing)g(the)i
(unpublished)f(revi-)-42 1218 y(sion)36 b(\(W)-8 b(olp)s(er)36
b(and)g(Lero)m(y)h(1995\))f(of)f(their)h(pap)s(er)h(with)f(us.)h(W)-8
b(e)36 b(w)m(ould)h(also)e(lik)m(e)h(to)g(thank)h(Ra)m(vi)-42
1334 y(Soundarara)5 b(jan)27 b(for)g(his)g(commen)m(ts)g(on)g(a)g
(draft)g(of)f(this)h(pap)s(er.)g(Ulric)m(h)f(Stern)i(w)m(as)g(supp)s
(orted)g(dur-)-42 1450 y(ing)i(this)g(researc)m(h)i(b)m(y)f(a)f(sc)m
(holarship)h(from)e(the)h(German)g(Academic)g(Exc)m(hange)i(Service)f
(\(D)m(AAD-)-42 1567 y(Doktorandenstip)s(endium)h(HSP-I)s(I\).)-42
1950 y Fk(REFERENCES)-42 2184 y Fo(O.)c(Am)m(ble)e(and)i(D.)e(E.)i(Kn)m
(uth)g(\(1974\))34 b(Ordered)28 b(hash)g(tables.)34 b
Fa(Computer)c(Journal)p Fo(,)d(17\(2\):135{42.)-42 2304
y(J.)45 b(R.)f(Burc)m(h,)i(E.)e(M.)h(Clark)m(e,)g(K.)f(L.)h(McMillan,)d
(and)j(D.)f(L.)g(Dill)d(\(1990\))78 b(Sequen)m(tial)44
b(circuit)49 2420 y(v)m(eri\014cation)d(using)g(sym)m(b)s(olic)f(mo)s
(del)g(c)m(hec)m(king.)71 b(In)42 b Fa(27th)h(A)n(CM/IEEE)f(Design)g(A)
n(utomation)49 2536 y(Confer)-5 b(enc)g(e)p Fo(,)32 b(pages)h(46{51.)
-42 2656 y(J.)k(L.)g(Carter)g(and)g(M.)h(N.)f(W)-8 b(egman)36
b(\(1979\))55 b(Univ)m(ersal)36 b(classes)i(of)e(hash)i(functions.)56
b Fa(Journal)38 b(of)49 2772 y(Computer)d(and)f(System)h(Scienc)-5
b(es)p Fo(,)31 b(18\(2\):143{54.)-42 2891 y(T.)i(H.)e(Cormen,)h(C.)g
(E.)g(Leiserson,)g(and)g(R.)f(L.)h(Riv)m(est)g(\(1990\))40
b Fa(Intr)-5 b(o)g(duction)34 b(to)g(A)n(lgorithms)p
Fo(.)41 b(The)49 3007 y(MIT)34 b(Press.)-42 3127 y(D.)42
b(L.)g(Dill,)d(A.)j(J.)g(Drexler,)g(A.)g(J.)g(Hu,)h(and)f(C.)h(H.)f(Y)
-8 b(ang)41 b(\(1992\))71 b(Proto)s(col)41 b(v)m(eri\014cation)g(as)h
(a)49 3243 y(hardw)m(are)32 b(design)f(aid.)40 b(In)32
b Fa(IEEE)h(International)g(Confer)-5 b(enc)g(e)32 b(on)h(Computer)g
(Design:)f(VLSI)h(in)49 3359 y(Computers)i(and)f(Pr)-5
b(o)g(c)g(essors)p Fo(,)32 b(pages)h(522{5.)-42 3479
y(G.)41 b(J.)g(Holzmann)f(\(1987\))67 b(On)41 b(limits)c(and)k(p)s
(ossibilities)d(of)j(automated)f(proto)s(col)f(analysis.)68
b(In)49 3595 y Fa(Pr)-5 b(oto)g(c)g(ol)45 b(Sp)-5 b(e)g(ci\014c)g
(ation,)43 b(T)-7 b(esting,)43 b(and)h(V)-7 b(eri\014c)i(ation.)44
b(7th)g(International)g(Confer)-5 b(enc)g(e)p Fo(,)41
b(pages)49 3711 y(339{44.)-42 3830 y(G.)33 b(J.)f(Holzmann)g(\(1991\))
42 b Fa(Design)34 b(and)g(V)-7 b(alidation)34 b(of)g(Computer)h(Pr)-5
b(oto)g(c)g(ols)p Fo(.)43 b(Pren)m(tice-Hall.)-42 3950
y(G.)30 b(J.)g(Holzmann)f(\(1995\))37 b(An)30 b(analysis)g(of)f
(bitstate)g(hashing.)39 b(In)30 b Fa(Pr)-5 b(oto)g(c)g(ol)32
b(Sp)-5 b(e)g(ci\014c)g(ation,)31 b(T)-7 b(esting)49
4066 y(and)35 b(V)-7 b(eri\014c)i(ation.)34 b(15th)g(International)g
(Confer)-5 b(enc)g(e)p Fo(,)31 b(pages)i(301{14.)-42
4185 y(A.)39 b(J.)g(Hu,)g(G.)g(Y)-8 b(ork,)39 b(and)f(D.)h(L.)f(Dill)e
(\(1994\))60 b(New)40 b(tec)m(hniques)g(for)f(e\016cien)m(t)g(v)m
(eri\014cation)f(with)49 4302 y(implicitly)29 b(conjoined)j(BDDs.)43
b(In)33 b Fa(31st)h(Design)g(A)n(utomation)h(Confer)-5
b(enc)g(e)p Fo(,)31 b(pages)i(276{82.)-42 4421 y Fa(IEEE)i(Std)g
(1596-1992,)e(IEEE)i(Standar)-5 b(d)34 b(for)h(Sc)-5
b(alable)33 b(Coher)-5 b(ent)35 b(Interfac)-5 b(e)33
b(\(SCI\))p Fo(.)-42 4540 y(C.)26 b(N.)g(Ip)g(and)g(D.)f(L.)g(Dill)d
(\(1993\))31 b(Better)26 b(v)m(eri\014cation)f(through)g(symmetry)-8
b(.)32 b(In)26 b Fa(11th)i(International)49 4656 y(Confer)-5
b(enc)g(e)24 b(on)i(Computer)f(Har)-5 b(dwar)g(e)25 b(Description)f(L)
-5 b(anguages)25 b(and)g(their)h(Applic)-5 b(ations)p
Fo(,)21 b(pages)49 4773 y(97{111.)-42 4892 y(C.)42 b(N.)g(Ip)g(and)g
(D.)f(L.)g(Dill)d(\(1996\))69 b(State)42 b(reduction)f(using)h(rev)m
(ersible)g(rules.)70 b(In)42 b Fa(33r)-5 b(d)42 b(Design)49
5008 y(A)n(utomation)35 b(Confer)-5 b(enc)g(e)p Fo(.)-42
5128 y(D.)68 b(Lenoski,)f(J.)h(Laudon,)g(K.)f(Gharac)m(horlo)s(o,)f
(W.-D.)h(W)-8 b(eb)s(er,)68 b(A.)g(Gupta,)f(J.)g(Hennessy)-8
b(,)49 5244 y(M.)42 b(Horo)m(witz,)e(and)h(M.)g(S.)g(Lam)f(\(1992\))66
b(The)42 b(Stanford)e(Dash)h(m)m(ultipro)s(cessor.)66
b Fa(Computer)p Fo(,)49 5360 y(25\(3\):63{79.)-42 5479
y(U.)23 b(Stern)f(and)h(D.)e(L.)h(Dill)d(\(1995a\))25
b(Automatic)c(v)m(eri\014cation)g(of)h(the)g(SCI)h(cac)m(he)g
(coherence)h(proto)s(col.)49 5596 y(In)29 b Fa(IFIP)g(WG)i(10.5)f(A)-5
b(dvanc)g(e)g(d)30 b(R)-5 b(ese)g(ar)g(ch)29 b(Working)i(Confer)-5
b(enc)g(e)29 b(on)h(Corr)-5 b(e)g(ct)30 b(Har)-5 b(dwar)g(e)30
b(Design)49 5712 y(and)35 b(V)-7 b(eri\014c)i(ation)34
b(Metho)-5 b(ds)p Fo(,)32 b(pages)h(21{34.)p eop
%%Page: 16 16
16 15 bop -42 100 a Fm(16)1432 b Fl(A)30 b(New)g(Scheme)g(for)g
(Memory-E\016cient)i(Pr)l(ob)l(abilistic)g(V)-6 b(eri\014c)l(ation)-42
365 y Fo(U.)34 b(Stern)g(and)f(D.)g(L.)h(Dill)c(\(1995b\))44
b(Impro)m(v)m(ed)35 b(probabilistic)30 b(v)m(eri\014cation)j(b)m(y)h
(hash)g(compaction.)49 482 y(In)29 b Fa(IFIP)g(WG)i(10.5)f(A)-5
b(dvanc)g(e)g(d)30 b(R)-5 b(ese)g(ar)g(ch)29 b(Working)i(Confer)-5
b(enc)g(e)29 b(on)h(Corr)-5 b(e)g(ct)30 b(Har)-5 b(dwar)g(e)30
b(Design)49 598 y(and)35 b(V)-7 b(eri\014c)i(ation)34
b(Metho)-5 b(ds)p Fo(,)32 b(pages)h(206{24.)-42 714 y(U.)44
b(Stern)g(and)f(D.)g(L.)h(Dill)c(\(1996\))74 b(Com)m(bining)42
b(state)i(space)g(cac)m(hing)g(and)f(hash)h(compaction.)49
830 y(In)49 b Fa(Metho)-5 b(den)49 b(des)g(Entwurfs)h(und)f(der)g(V)-7
b(eri\014kation)49 b(digitaler)g(Systeme,)g(4.)17 b(GI/ITG/GME)49
946 y(Workshop)p Fo(,)32 b(pages)h(81{90.)-42 1063 y(P)-8
b(.)29 b(W)-8 b(olp)s(er)27 b(and)i(D.)e(Lero)m(y)i(\(1995\))36
b(Reliable)25 b(hashing)j(without)g(collision)d(detection.)37
b(Unpublished)49 1179 y(revised)d(v)m(ersion)f(of)f(W)-8
b(olp)s(er)32 b(and)g(Lero)m(y)i(\(1993\).)-42 1295 y(P)-8
b(.)29 b(W)-8 b(olp)s(er)27 b(and)h(D.)g(Lero)m(y)g(\(1993\))35
b(Reliable)26 b(hashing)h(without)h(collision)d(detection.)36
b(In)28 b Fa(Computer)49 1411 y(A)n(ide)-5 b(d)35 b(V)-7
b(eri\014c)i(ation.)33 b(5th)i(International)f(Confer)-5
b(enc)g(e)p Fo(,)31 b(pages)i(59{70.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
